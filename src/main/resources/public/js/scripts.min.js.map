{"version":3,"sources":["ts/controller.ts","app/controllers/EditSubjectController.ts","app/controllers/PerformSubjectCopyController.ts","app/controllers/StudentDashboardController.ts","app/controllers/SubjectCopyListController.ts","app/controllers/TeacherDasboardCorrectionTabController.ts","app/controllers/TeacherDasboardSubjectTabController.ts","app/controllers/TeacherDashboardLibraryTabController.ts","app/controllers/ViewSubjectCopyController.ts","app/services/AccessService.ts","app/services/DateService.ts","app/services/DragService.ts","app/services/folderService.ts","app/services/GrainCopyService.ts","app/services/GrainScheduledService.ts","app/services/grainService.ts","app/services/GrainTypeService.ts","app/services/GroupService.ts","app/services/SubjectCopyService.ts","app/services/SubjectLessonLevelService.ts","app/services/SubjectLessonTypeService.ts","app/services/SubjectLibraryService.ts","app/services/SubjectScheduledService.ts","app/services/SubjectService.ts","app/services/SubjectTagService.ts","app/models/domain/Folder.ts","app/models/domain/Grain.ts","app/models/domain/GrainCopy.ts","app/models/domain/GrainCopyData.ts","app/models/domain/GrainData.ts","app/models/domain/GrainDocument.ts","app/models/domain/GrainScheduled.ts","app/models/domain/GrainType.ts","app/models/domain/Subject.ts","app/models/domain/SubjectCopy.ts","app/models/domain/SubjectLessonLevel.ts","app/models/domain/SubjectLessonType.ts","app/models/domain/SubjectScheduled.ts","app/models/domain/SubjectTag.ts","app/models/helpers/CloneObjectHelper.ts","app/models/helpers/CompareStringHelper.ts","app/models/helpers/MapToListHelper.ts","app/models/helpers/ScoreHelper.ts","app/models/helpers/SerializationHelper.ts","app/models/helpers/StringISOHelper.ts","app/directives/input_restrictions/digitsInputRestrict.ts","app/components/grain/association/directives/editAssociation.ts","app/components/grain/association/directives/performAssociation.ts","app/components/grain/association/directives/viewAssociation.ts","app/components/grain/association/services/AssociationService.ts","app/components/grain/association/models/AssociationCustomCopyData.ts","app/components/grain/association/models/AssociationCustomData.ts","app/components/grain/filltext/directives/edit.ts","app/components/grain/filltext/directives/fillzone.ts","app/components/grain/filltext/directives/perform.ts","app/components/grain/filltext/directives/view.ts","app/components/grain/filltext/models/CustomData.ts","app/components/grain/common/editor/editor.ts","app/components/grain/common/zonegrain/model.ts","app/components/grain/multiple_answer/directives/editMultipleAnswer.ts","app/components/grain/multiple_answer/directives/performMultipleAnswer.ts","app/components/grain/multiple_answer/directives/viewMultipleAnswer.ts","app/components/grain/multiple_answer/models/MultipleAnswerCustomCopyData.ts","app/components/grain/multiple_answer/models/MultipleAnswerCustomData.ts","app/components/grain/multiple_answer/services/MultipleAnswerService.ts","app/components/grain/open_answer/models/OpenAnswerCustomCopyData.ts","app/components/grain/open_answer/directives/editOpenAnswer.ts","app/components/grain/open_answer/directives/performOpenAnswer.ts","app/components/grain/open_answer/directives/viewOpenAnswer.ts","app/components/grain/open_answer/services/OpenAnswerService.ts","app/components/grain/order/directives/editOrder.ts","app/components/grain/order/directives/performOrder.ts","app/components/grain/order/directives/viewOrder.ts","app/components/grain/order/models/OrderCustomCopyData.ts","app/components/grain/order/models/OrderCustomData.ts","app/components/grain/order/services/OrderService.ts","app/components/grain/qcm/directives/editQcm.ts","app/components/grain/qcm/directives/performQcm.ts","app/components/grain/qcm/directives/viewQcm.ts","app/components/grain/qcm/models/QcmCustomCopyData.ts","app/components/grain/qcm/models/QcmCustomData.ts","app/components/grain/qcm/services/QcmService.ts","app/components/grain/simple_answer/models/SimpleAnswerCustomCopyData.ts","app/components/grain/simple_answer/models/SimpleAnswerCustomData.ts","app/components/grain/simple_answer/directives/editSimpleAnswer.ts","app/components/grain/simple_answer/directives/performSimpleAnswer.ts","app/components/grain/simple_answer/directives/viewSimpleAnswer.ts","app/components/grain/simple_answer/services/SimpleAnswerService.ts","app/components/grain/statement/directives/editStatement.ts","app/components/grain/statement/directives/performStatement.ts","app/components/grain/statement/directives/viewStatement.ts","app/components/grain/statement/models/StatementCustomCopyData.ts","app/components/grain/statement/models/StatementCustomData.ts","app/components/grain/undefined/directives/choose.ts","app/components/grain/undefined/directives/chooseAnswer.ts","app/components/grain/undefined/directives/perform-summary.ts","app/components/grain/undefined/directives/view-summary.ts","app/components/grain/zoneimage/directives/edit.ts","app/components/grain/zoneimage/directives/perform.ts","app/components/grain/zoneimage/directives/view.ts","app/components/grain/zoneimage/models/CustomData.ts","app/components/grain/zonetext/directives/edit.ts","app/components/grain/zonetext/directives/perform.ts","app/components/grain/zonetext/directives/view.ts","app/components/grain/zonetext/models/CustomData.ts","app/components/subject/subject_edit/directives/subjectEditSubjectList.ts","app/components/subject/subject_perform_copy/directives/subjectPerformCopyBottomNav.ts","app/components/subject/subject_perform_copy/directives/subjectPerformCopyDisplayCurrentGrainCopy.ts","app/components/subject/subject_perform_copy/directives/subjectPerformCopyPreviewHeader.ts","app/components/subject/subject_perform_copy/directives/subjectPerformCopyStudentHeader.ts","app/components/subject/subject_schedule/directives/subjectSchedule.ts","app/components/subject/subject_view_copy/directives/subjectViewCopyGrainCopyList.ts","app/components/subject/subject_view_copy/directives/subjectViewCopyPreviewHeader.ts","app/components/subject/subject_view_copy/directives/subjectViewCopyStudentHeader.ts","app/components/subject/subject_view_copy/directives/subjectViewCopyTeacherHeader.ts","app/components/dashboard/student_dashboard/common/directives/subject-copy-domino.ts","app/components/dashboard/student_dashboard/student_dashboard_finish_subject_copy_list/directives/studentDashBoardFinishSubjectCopyList.ts","app/components/dashboard/student_dashboard/student_dashboard_subject_copy_list/directives/studentDashBoardSubjectCopyList.ts","app/components/dashboard/teacher_dashboard/common/directives/dashboardTeacherTab.ts","app/components/dashboard/teacher_dashboard/common/directives/share-panel-light-box.ts","app/components/dashboard/teacher_dashboard/common/directives/subject-scheduled-assign-at.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_correction_tab/directives/teacherDashboardCorrectionCopyList.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_correction_tab/directives/teacherDashboardCorrectionSubjectScheduledList.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardCopyPaste.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardFolderEdit.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardPublishToLibrary.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardRemoveSelectedFolderAndSubject.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardSubjectEdit.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardSubjectList.ts","app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/directives/teacherDashboardToaster.ts","app/components/folder/common/folder_nav/directives/folderNavContainer.ts","app/components/folder/common/folder_nav/directives/folderNavItem.ts","app/components/grain/common/grain_copy/directives/grainCopyFooter.ts","app/components/grain/common/grain_copy/directives/grainCopyGrainDocumentList.ts","app/components/grain/common/grain_copy/directives/grainCopyHeader.ts","app/components/grain/common/grain_copy/directives/grainCopyStatement.ts","app/components/subject/common/subject_copy/directives/subjectCopyLeftNav.ts"],"names":[],"mappings":"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","file":"scripts.min.js","sourcesContent":["routes.define(function($routeProvider){\r\n    $routeProvider\r\n        .when('/dashboard', {\r\n            action: 'dashboard'\r\n        })\r\n        .when('/dashboard/student', {\r\n            action: 'dashboardStudent'\r\n        })\r\n        .when('/dashboard/teacher/correction/:subjectScheduledId?', {\r\n            action: 'dashboardTeacherCorrection'\r\n        })\r\n        .when('/dashboard/teacher/library', {\r\n            action: 'dashboardTeacherLibrary'\r\n        })\r\n        .when('/subject/edit/:subjectId/', {\r\n            action: 'editSubject'\r\n        })\r\n        .when('/subject/copy/preview/perform/:subjectId/', {\r\n            action: 'previewPerformSubjectCopy'\r\n        })\r\n        // perform as student\r\n        .when('/subject/copy/perform/:subjectCopyId/', {\r\n            action: 'performSubjectCopy'\r\n        })\r\n        .when('/subject/copy/view/preview/:subjectId/', {\r\n            action: 'previewViewSubjectCopy'\r\n        })\r\n        .when('/subject/copy/view/:subjectId/:subjectCopyId/', {\r\n            action: 'viewSubjectCopyAsTeacher'\r\n        })\r\n        // view as student\r\n        .when('/subject/copy/view/:subjectCopyId/', {\r\n            action: 'viewSubjectCopy'\r\n        })\r\n        .otherwise({\r\n            redirectTo: '/dashboard'\r\n        });\r\n});\r\n\r\nvar directives = [];\r\n\r\nfunction ExercizerController($scope, $rootScope, model, template, route, date, $route) {\r\n\r\n    const teacherProfile = 'Teacher';\r\n    const studentProfile = 'Student';\r\n    const canAccessTeacherProfile = model.me.workflow.exercizer.create || false;\r\n\r\n    var _userProfile;\r\n\r\n    if (canAccessTeacherProfile){\r\n        _userProfile = teacherProfile;\r\n    } else {\r\n        _userProfile = studentProfile;\r\n    }\r\n\r\n    route({\r\n        dashboard: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'teacher-dashboard-subject-tab');\r\n            } else if (_userProfile === studentProfile) {\r\n                template.open('main', 'student-dashboard');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        dashboardStudent: function () {\r\n            _userProfile = studentProfile;\r\n            template.open('main', 'student-dashboard');\r\n        },\r\n        dashboardTeacherCorrection: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'teacher-dashboard-correction-tab');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        dashboardTeacherLibrary: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'teacher-dashboard-library-tab');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        editSubject: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'edit-subject');\r\n            } else if (_userProfile === studentProfile) {\r\n                template.open('main', 'student-dashboard');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        previewPerformSubjectCopy: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'perform-subject-copy');\r\n            } else if (_userProfile === studentProfile) {\r\n                template.open('main', 'student-dashboard');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        performSubjectCopy: function () {\r\n            if (_userProfile === studentProfile) {\r\n                template.open('main', 'perform-subject-copy');\r\n            } else if (_userProfile === teacherProfile) {\r\n                template.open('main', 'perform-subject-copy');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        previewViewSubjectCopy: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'view-subject-copy');\r\n            } else if (_userProfile === studentProfile) {\r\n                template.open('main', 'student-dashboard');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        viewSubjectCopyAsTeacher: function () {\r\n            if (_userProfile === teacherProfile) {\r\n                template.open('main', 'view-subject-copy');\r\n            } else if (_userProfile === studentProfile) {\r\n                template.open('main', 'student-dashboard');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        },\r\n        viewSubjectCopy: function () {\r\n            if (_userProfile === studentProfile) {\r\n                template.open('main', 'view-subject-copy');\r\n            } else if (_userProfile === teacherProfile) {\r\n                template.open('main', 'teacher-dashboard');\r\n            } else {\r\n                template.open('main', '401-exercizer');\r\n            }\r\n        }\r\n    });\r\n\r\n    $route.reload();\r\n}\r\n\r\n(window as any).AngularExtensions = {\r\n    init: function(module){\r\n\r\n        module.config(['$httpProvider', function($httpProvider) {\r\n            //initialize get if not there\r\n            if (!$httpProvider.defaults.headers.get) {\r\n                $httpProvider.defaults.headers.get = {};\r\n            }\r\n\r\n            // Answer edited to include suggestions from comments\r\n            // because previous version of code introduced browser-related errors\r\n\r\n            //disable IE ajax request caching\r\n            $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\r\n            // extra\r\n            $httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';\r\n            $httpProvider.defaults.headers.get['Pragma'] = 'no-cache';\r\n        }]);\r\n\r\n\r\n        /**\r\n         * Filters\r\n         */\r\n\r\n        module.filter('orderObjectBy', function() {\r\n            return function(items, field, reverse) {\r\n                var filtered = [];\r\n                angular.forEach(items, function(item) {\r\n                    filtered.push(item);\r\n                });\r\n                filtered.sort(function (a, b) {\r\n                    return (a[field] > b[field] ? 1 : -1);\r\n                });\r\n                if(reverse) filtered.reverse();\r\n                return filtered;\r\n            };\r\n        });\r\n\r\n        module.filter('filterIf', function() {\r\n            return function(i,b) {\r\n                if(b){\r\n                    return i;\r\n                }\r\n            };\r\n        });\r\n\r\n\r\n        function floorFigure(figure : number, decimals : number){\r\n            if (!decimals) decimals = 2;\r\n            var d = Math.pow(10,decimals);\r\n            return ((figure*d)/d).toFixed(decimals);\r\n        }\r\n\r\n        module.filter('truncateNumber', function () {\r\n            return function (item) {\r\n                if(!item){\r\n                    // if item is not a number return an empty string\r\n                    return \"\"\r\n                } else {\r\n                    if(parseFloat(item) == parseInt(item)){\r\n                        return item;\r\n                    }\r\n                    return floorFigure(parseFloat(item), 2);\r\n                }\r\n\r\n            };\r\n        });\r\n\r\n        /**\r\n         * Services\r\n         */\r\n\r\n        module.service('SubjectService', SubjectService);\r\n        module.service('SubjectLibraryService', SubjectLibraryService);\r\n        module.service('SubjectLessonTypeService', SubjectLessonTypeService);\r\n        module.service('SubjectLessonLevelService', SubjectLessonLevelService);\r\n        module.service('SubjectTagService', SubjectTagService);\r\n        module.service('SubjectScheduledService', SubjectScheduledService);\r\n        module.service('SubjectCopyService', SubjectCopyService);\r\n        module.service('GrainService', GrainService);\r\n        module.service('GrainScheduledService', GrainScheduledService);\r\n        module.service('GrainCopyService', GrainCopyService);\r\n        module.service('GrainTypeService', GrainTypeService);\r\n        module.service('SimpleAnswerService', SimpleAnswerService);\r\n        module.service('MultipleAnswerService', MultipleAnswerService);\r\n        module.service('AssociationService', AssociationService);\r\n        module.service('QcmService', QcmService);\r\n        module.service('OpenAnswerService', OpenAnswerService);\r\n        module.service('OrderService', OrderService);\r\n        module.service('DragService', DragService );\r\n        module.service('FolderService', FolderService );\r\n        module.service('DateService', DateService );\r\n        module.service('GroupService', GroupService );\r\n        module.service('AccessService', AccessService );\r\n\r\n        /**\r\n         * Controllers\r\n         */\r\n        module.controller('TeacherDashboardSubjectTabController', TeacherDashboardSubjectTabController);\r\n        module.controller('TeacherDashboardCorrectionTabController', TeacherDashboardCorrectionTabController);\r\n        module.controller('TeacherDashboardLibraryTabController', TeacherDashboardLibraryTabController);\r\n        module.controller('EditSubjectController', EditSubjectController);\r\n        module.controller('PerformSubjectCopyController', PerformSubjectCopyController);\r\n        module.controller('ViewSubjectCopyController', ViewSubjectCopyController);\r\n        module.controller('SubjectCopyListController', SubjectCopyListController);\r\n\r\n        /**\r\n         * Directives\r\n         */\r\n        directives.forEach((item) => {\r\n            module.directive(item.name, item.injections);\r\n        });\r\n    }\r\n};\r\n\r\n","class EditSubjectController {\r\n\r\n    static $inject = [\r\n        '$routeParams',\r\n        '$sce',\r\n        '$scope',\r\n        '$location',\r\n        'SubjectService',\r\n        'SubjectScheduledService',\r\n        'SubjectCopyService',\r\n        'GrainService',\r\n        'GrainTypeService',\r\n        'DragService'\r\n    ];\r\n\r\n    // common\r\n    private _subject:ISubject;\r\n    private _grainList:IGrain[];\r\n    private _selectedGrainList:IGrain[];\r\n    private _foldedGrainList:IGrain[];\r\n    private _hasDataLoaded:boolean;\r\n\r\n    // statement trusted html\r\n    private _trustedHtmlStatementMap:{[grainId:number]:string};\r\n\r\n    // modal\r\n    private _isModalRemoveGrainDisplayed:boolean;\r\n    private _isModalAddGrainDocumentDisplayed:boolean;\r\n    private _isModalRemoveGrainDocumentDisplayed:boolean;\r\n    private _isModalRemoveSelectedGrainListDisplayed:boolean;\r\n    private _currentGrainForAction:IGrain;\r\n    private _currentGrainDocumentToRemove:IGrainDocument;\r\n\r\n    // organizer\r\n    private _isOrganizerFolded:boolean;\r\n    private _reOrderIterationCount:number;\r\n\r\n    constructor\r\n    (\r\n        private _$routeParams,\r\n        private _$sce,\r\n        private _$scope:ng.IScope,\r\n        private _$location:ng.ILocationService,\r\n        private _subjectService:ISubjectService,\r\n        private _subjectScheduledService:ISubjectScheduledService,\r\n        private _subjectCopyService:ISubjectCopyService,\r\n        private _grainService:IGrainService,\r\n        private _grainTypeService:IGrainTypeService,\r\n        private _dragService:IDragService\r\n    ) {\r\n\r\n        this._$scope = _$scope;\r\n        this._$sce = _$sce;\r\n        this._$location = _$location;\r\n        this._subjectService = _subjectService;\r\n        this._subjectScheduledService = _subjectScheduledService;\r\n        this._subjectCopyService = _subjectCopyService;\r\n        this._grainService = _grainService;\r\n        this._grainTypeService = _grainTypeService;\r\n        this._dragService = _dragService;\r\n\r\n        this._hasDataLoaded = false;\r\n        \r\n        // statement trusted html\r\n        this._trustedHtmlStatementMap = {};\r\n\r\n        // modal\r\n        this._isModalRemoveSelectedGrainListDisplayed = false;\r\n        this._isModalAddGrainDocumentDisplayed = false;\r\n        this._isModalRemoveGrainDocumentDisplayed = false;\r\n        this._currentGrainForAction = undefined;\r\n        this._currentGrainDocumentToRemove = undefined;\r\n\r\n        // organizer\r\n        this._isOrganizerFolded = false;\r\n        this._reOrderIterationCount = 0;\r\n\r\n        var self = this,\r\n            subjectId = _$routeParams['subjectId'];\r\n\r\n        this._subjectService.resolve().then(function() {\r\n            self._subject = self._subjectService.getById(subjectId);\r\n\r\n            if (angular.isUndefined(self._subject)) {\r\n                self.redirectToDashboard();\r\n            } else {\r\n                self._grainService.getListBySubject(self._subject).then(\r\n                    function (grainList) {\r\n                        self._grainList = grainList;\r\n                        self._selectedGrainList = [];\r\n                        self._foldedGrainList = [];\r\n                        self.foldAllGrain();\r\n\r\n                        self._$scope.$on('E_UPDATE_GRAIN', function(event, grain:IGrain) {\r\n                            self.updateGrain(grain);\r\n                        });\r\n\r\n                        self._hasDataLoaded = true;\r\n                    },\r\n                    function (err) {\r\n                        notify.error(err);\r\n                    }\r\n                );\r\n            }\r\n        }, function(err) {\r\n            notify.error(err);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * COMMON\r\n     */\r\n\r\n    public redirectToDashboard() {\r\n        this._$location.path('/dashboard');\r\n    };\r\n\r\n    public scheduleSubject() {\r\n        this._$scope.$broadcast('E_DISPLAY_MODAL_SCHEDULE_SUBJECT', this._subject);\r\n    }\r\n    \r\n    public getGrainDisplayedName = function(grain) {\r\n        var displayedName = '';\r\n        \r\n        if (grain.grain_type_id > 3) {\r\n\r\n            grain.grain_data.title = StringISOHelper.toISO(grain.grain_data.title);\r\n            displayedName = angular.isUndefined(grain.grain_data.title) ? this.getGrainPublicName(grain.grain_type_id) : grain.grain_data.title;\r\n            \r\n        } else {\r\n            displayedName = this.getGrainPublicName(grain.grain_type_id);\r\n        }\r\n        \r\n        return displayedName;\r\n    };\r\n\r\n    public getGrainIllustrationURL = function(grainTypeId) {\r\n        return this._grainTypeService.getIllustrationURL(grainTypeId);\r\n    };\r\n\r\n    public getGrainPublicName = function(grainTypeId) {\r\n        return this._grainTypeService.getPublicName(grainTypeId);\r\n    };\r\n\r\n    public getStatementTrustedHtml = function(grain:IGrain) {\r\n        if (angular.isUndefined(this._trustedHtmlStatementMap[grain.id]) && grain.grain_data.custom_data) {\r\n            this._trustedHtmlStatementMap[grain.id] = this._$sce.trustAsHtml(grain.grain_data.custom_data.statement);\r\n        }\r\n        return this._trustedHtmlStatementMap[grain.id];\r\n    };\r\n\r\n    public dropTo = function($originalEvent) {\r\n        var dataField = this._dragService.dropConditionFunction(this._subject, $originalEvent),\r\n            originalItem = JSON.parse($originalEvent.dataTransfer.getData(dataField)),\r\n            self = this;\r\n\r\n        this._grainService.duplicate(originalItem, this._subject).then(\r\n            function(grainDuplicated) {\r\n                self._$scope.$$postDigest(function() {\r\n                    jQuery('html, body').animate({ scrollTop: jQuery('#grain-edit-' + grainDuplicated.id).offset().top - 100}, 500);\r\n                });\r\n\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        )\r\n    };\r\n\r\n    private _updateSubject(updateMaxScore:boolean = false) {\r\n        var self = this;\r\n\r\n        this._subjectService.update(this._subject, updateMaxScore).then(\r\n            function(subject:ISubject) {\r\n                self._subject = subject;\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    /**\r\n     *  GRAIN\r\n     */\r\n\r\n    public addGrain = function() {\r\n        var self = this,\r\n            newGrain = new Grain();\r\n\r\n        newGrain.subject_id = this.subject.id;\r\n        newGrain.grain_data = new GrainData();\r\n        newGrain.grain_type_id = 1;\r\n        newGrain.grain_data.title = this._grainTypeService.getById(newGrain.grain_type_id).public_name;\r\n\r\n        this._grainService.persist(newGrain).then(\r\n            function () {\r\n                self._updateSubject();\r\n            },\r\n            function (err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public updateGrain = function(grain:IGrain) {\r\n        var self = this;\r\n\r\n        if (grain.grain_type_id > 3) {\r\n            \r\n            grain.grain_data.title = StringISOHelper.toISO(grain.grain_data.title);\r\n            grain.grain_data.statement = StringISOHelper.toISO(grain.grain_data.statement);\r\n            grain.grain_data.answer_explanation = StringISOHelper.toISO(grain.grain_data.answer_explanation);\r\n            grain.grain_data.answer_hint = StringISOHelper.toISO(grain.grain_data.answer_hint);\r\n            grain.grain_data.max_score = angular.isUndefined(grain.grain_data.max_score) ? 0 : parseFloat(grain.grain_data.max_score as any);\r\n            \r\n        } else if (grain.grain_type_id === 3) {\r\n\r\n            this._trustedHtmlStatementMap[grain.id] = undefined;\r\n\r\n            /*if (angular.isUndefined(this._trustedHtmlStatementMap[grain.id]) && grain.grain_data.custom_data) {\r\n                this._trustedHtmlStatementMap[grain.id] = this._$sce.trustAsHtml(grain.grain_data.custom_data.statement);\r\n            } else{\r\n\r\n            }*/\r\n            //this._trustedHtmlStatementMap[grain.id] = this._$sce.trustAsHtml(grain.grain_data.custom_data.statement);\r\n        }\r\n\r\n        this._grainService.update(grain).then(\r\n            function() {\r\n                self._updateSubject(grain.grain_type_id > 3)\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public removeGrain = function() {\r\n        var self = this,\r\n            grainIndexInSelection = this._selectedGrainList.indexOf(this._currentGrainForAction),\r\n            grainIndexInFoldedList = this._foldedGrainList.indexOf(this._currentGrainForAction);\r\n\r\n\r\n        if (grainIndexInSelection !== -1) {\r\n            this._selectedGrainList.splice(grainIndexInSelection, 1);\r\n        }\r\n\r\n        if (grainIndexInFoldedList !== -1) {\r\n            this._foldedGrainList.splice(grainIndexInFoldedList, 1);\r\n        }\r\n\r\n        this._grainService.remove(this._currentGrainForAction).then(\r\n            function() {\r\n                self._updateSubject(self._currentGrainForAction.grain_type_id > 3);\r\n                self._currentGrainForAction = undefined;\r\n                self._isModalRemoveGrainDisplayed = false;\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public displayModalRemoveGrain = function(grain:IGrain) {\r\n        this._currentGrainForAction = grain;\r\n        this._isModalRemoveGrainDisplayed = true;\r\n    };\r\n\r\n    public closeModalRemoveGrain = function() {\r\n        this._currentGrainForAction = undefined;\r\n        this._isModalRemoveGrainDisplayed = false;\r\n    };\r\n\r\n    public addGrainDocument = function(mediaLibraryItem:any) {\r\n        var grainDocument = new GrainDocument(),\r\n            self = this;\r\n\r\n        grainDocument.id = mediaLibraryItem._id;\r\n        grainDocument.owner = mediaLibraryItem.owner;\r\n        grainDocument.ownerName = mediaLibraryItem.ownerName;\r\n        grainDocument.created = mediaLibraryItem.created ? mediaLibraryItem.created.toISOString() : null;\r\n        grainDocument.title = mediaLibraryItem.title;\r\n        grainDocument.name = mediaLibraryItem.name;\r\n        grainDocument.path = '/workspace/document/' + grainDocument.id;\r\n\r\n        if (angular.isUndefined(this._currentGrainForAction.grain_data.document_list)) {\r\n            this._currentGrainForAction.grain_data.document_list = [];\r\n        }\r\n\r\n        this._currentGrainForAction.grain_data.document_list.push(grainDocument);\r\n\r\n        this._grainService.update(this._currentGrainForAction).then(\r\n            function() {\r\n                self._currentGrainForAction = undefined;\r\n                self._isModalAddGrainDocumentDisplayed = false;\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public displayModalAddGrainDocument = function(grain:IGrain) {\r\n        this._currentGrainForAction = grain;\r\n        this._isModalAddGrainDocumentDisplayed = true;\r\n    };\r\n\r\n    public closeModalAddGrainDocument = function() {\r\n        this._currentGrainForAction = undefined;\r\n        this._isModalAddGrainDocumentDisplayed = false;\r\n    };\r\n\r\n    public removeGrainDocument = function() {\r\n        var grainDocumentIndex = this._currentGrainForAction.grain_data.document_list.indexOf(this._currentGrainDocumentToRemove),\r\n            self = this;\r\n\r\n        if (grainDocumentIndex !== -1) {\r\n            this._currentGrainForAction.grain_data.document_list.splice(grainDocumentIndex, 1);\r\n            this._grainService.update(this._currentGrainForAction).then(\r\n                function() {\r\n                    self._currentGrainForAction = undefined;\r\n                    self._currentGrainDocumentToRemove = undefined;\r\n                    self._isModalRemoveGrainDocumentDisplayed = false;\r\n                },\r\n                function(err) {\r\n                    notify.error(err);\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    public displayModalRemoveGrainDocument = function(grain:IGrain, grainDocument:IGrainDocument) {\r\n        this._currentGrainForAction = grain;\r\n        this._currentGrainDocumentToRemove = grainDocument;\r\n        this._isModalRemoveGrainDocumentDisplayed = true;\r\n    };\r\n\r\n    public closeModalRemoveGrainDocument = function() {\r\n        this._currentGrainForAction = undefined;\r\n        this._currentGrainDocumentToRemove = undefined;\r\n        this._isModalRemoveGrainDocumentDisplayed = false;\r\n    };\r\n\r\n    public foldGrain = function(grain:IGrain) {\r\n        var grainIndexInSelection = this._selectedGrainList.indexOf(grain),\r\n            grainIndexInFoldedList = this._foldedGrainList.indexOf(grain);\r\n\r\n        if (grainIndexInSelection !== -1 && grainIndexInFoldedList === -1) {\r\n            this._selectedGrainList.splice(grainIndexInSelection, 1);\r\n\r\n            if (this._selectedGrainList.length > 1) {\r\n                this._selectedGrainList.sort(function(grainA:IGrain, grainB:IGrain) {\r\n                    return grainA.order_by > grainB.order_by;\r\n                });\r\n            }\r\n        }\r\n\r\n        if (grainIndexInFoldedList !== -1) {\r\n            this._foldedGrainList.splice(grainIndexInFoldedList, 1);\r\n        } else {\r\n            this._foldedGrainList.push(grain);\r\n        }\r\n    };\r\n\r\n    public isGrainFolded = function(grain:IGrain) {\r\n        return this._foldedGrainList.indexOf(grain) !== -1;\r\n    };\r\n\r\n    /**\r\n     * ORGANIZER\r\n     */\r\n\r\n    public foldAllGrain = function() {\r\n        angular.forEach(this._grainList, function(grain:IGrain) {\r\n            if (!this.isGrainFolded(grain)) {\r\n                this.foldGrain(grain);\r\n            }\r\n        }, this);\r\n    };\r\n\r\n    public previewPerformSubjectCopy = function() {\r\n        this._$location.path('/subject/copy/preview/perform/' + this._subject.id + '/');\r\n    };\r\n\r\n    public reOrder = function() {\r\n        if (this._reOrderIterationCount < this._grainList.length) {\r\n\r\n            angular.forEach(this._grainList, function (grainItem) {\r\n                if (grainItem.order_by != parseFloat(grainItem.index) + 1) {\r\n                    grainItem.order_by = parseFloat(grainItem.index) + 1;\r\n                }\r\n            });\r\n\r\n            this._reOrderIterationCount += 1;\r\n        }\r\n\r\n        if (this._reOrderIterationCount === this._grainList.length) {\r\n            this._reOrderIterationCount = 0;\r\n\r\n            var self = this;\r\n\r\n            angular.forEach(this._grainList, function (grain:IGrain) {\r\n                if (!self.isGrainFolded(grain)) {\r\n                    self.foldGrain(grain);\r\n                }\r\n               self.updateGrain(grain);\r\n            });\r\n        }\r\n    };\r\n\r\n    public foldOrganizer = function() {\r\n        this._isOrganizerFolded = !this._isOrganizerFolded;\r\n    };\r\n\r\n    /**\r\n     *  TOASTER\r\n     */\r\n\r\n    public selectGrain = function(grain:IGrain) {\r\n        var grainIndex = this._selectedGrainList.indexOf(grain);\r\n\r\n        if (grainIndex !== -1) {\r\n            this._selectedGrainList.splice(grainIndex, 1);\r\n        } else {\r\n            this._selectedGrainList.push(grain);\r\n        }\r\n\r\n        if (this._selectedGrainList.length > 1) {\r\n            this._selectedGrainList.sort(function(grainA:IGrain, grainB:IGrain) {\r\n                return grainA.order_by > grainB.order_by;\r\n            });\r\n        }\r\n    };\r\n\r\n    public isGrainSelected = function(grain:IGrain) {\r\n        return this._selectedGrainList.indexOf(grain) !== -1;\r\n    };\r\n\r\n    public duplicateSelectedGrainList = function() {\r\n        var self = this;\r\n\r\n        this._grainService.duplicateList(this._selectedGrainList, this._subject).then(\r\n            function() {\r\n                self._selectedGrainList = [];\r\n                self.foldAllGrain();\r\n                self._updateSubject(true);\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public removeSelectedGrainList = function() {\r\n        var self = this;\r\n\r\n        this._grainService.removeList(this._selectedGrainList, this._subject).then(\r\n            function() {\r\n                self._selectedGrainList = [];\r\n                self._updateSubject(true);\r\n                self._isModalRemoveSelectedGrainListDisplayed = false;\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public displayModalRemoveSelectedGrainList = function() {\r\n        this._isModalRemoveSelectedGrainListDisplayed = true;\r\n    };\r\n\r\n    public closeModalRemoveSelectedGrainList = function() {\r\n        this._isModalRemoveSelectedGrainListDisplayed = false;\r\n    };\r\n\r\n    public resetSelection = function() {\r\n        this._selectedGrainList = [];\r\n    };\r\n\r\n    public isToasterDisplayed = function() {\r\n        return this._selectedGrainList.length > 0;\r\n    };\r\n\r\n    /**\r\n     *  GETTER\r\n     */\r\n\r\n    get subject():ISubject {\r\n        return this._subject;\r\n    }\r\n\r\n    get grainList():IGrain[] {\r\n        return this._grainList;\r\n    }\r\n\r\n    get hasDataLoaded():boolean {\r\n        return this._hasDataLoaded;\r\n    }\r\n\r\n    get isModalRemoveGrainDisplayed():boolean {\r\n        return this._isModalRemoveGrainDisplayed;\r\n    }\r\n\r\n    get isModalAddGrainDocumentDisplayed():boolean {\r\n        return this._isModalAddGrainDocumentDisplayed;\r\n    }\r\n\r\n    get isModalRemoveGrainDocumentDisplayed():boolean {\r\n        return this._isModalRemoveGrainDocumentDisplayed;\r\n    }\r\n\r\n    get isOrganizerFolded():boolean {\r\n        return this._isOrganizerFolded;\r\n    }\r\n\r\n    get isModalRemoveSelectedGrainListDisplayed():boolean {\r\n        return this._isModalRemoveSelectedGrainListDisplayed;\r\n    }\r\n}\r\n\r\n","class PerformSubjectCopyController {\r\n\r\n    static $inject = [\r\n        '$routeParams',\r\n        '$scope',\r\n        '$location',\r\n        'SubjectService',\r\n        'SubjectLibraryService',\r\n        'SubjectScheduledService',\r\n        'SubjectCopyService',\r\n        'GrainService',\r\n        'GrainScheduledService',\r\n        'GrainCopyService',\r\n        'GrainTypeService',\r\n        'AccessService'\r\n    ];\r\n\r\n    private _subjectScheduled:ISubjectScheduled;\r\n    private _subjectCopy:ISubjectCopy;\r\n    private _grainCopyList:IGrainCopy[];\r\n    private _grainScheduledList:IGrainScheduled[];\r\n    private _previewing:boolean;\r\n    private _previewingFromLibrary:boolean;\r\n    private _previewFromReader:boolean;\r\n    private _hasDataLoaded:boolean;\r\n\r\n    constructor\r\n    (\r\n        private _$routeParams,\r\n        private _$scope:ng.IScope,\r\n        private _$location:ng.ILocationService,\r\n        private _subjectService:ISubjectService,\r\n        private _subjectLibraryService:ISubjectLibraryService,\r\n        private _subjectScheduledService:ISubjectScheduledService,\r\n        private _subjectCopyService:ISubjectCopyService,\r\n        private _grainService:IGrainService,\r\n        private _grainScheduledService:IGrainScheduledService,\r\n        private _grainCopyService:IGrainCopyService,\r\n        private _grainTypeService:IGrainTypeService,\r\n        private _accessService:IAccessService\r\n    ) {\r\n        this._$scope = _$scope;\r\n        this._$location = _$location;\r\n        this._subjectService = _subjectService;\r\n        this._subjectLibraryService = _subjectLibraryService;\r\n        this._subjectScheduledService = _subjectScheduledService;\r\n        this._subjectCopyService =_subjectCopyService;\r\n        this._grainScheduledService = _grainScheduledService;\r\n        this._grainCopyService = _grainCopyService;\r\n        this._accessService = _accessService;\r\n        this._hasDataLoaded = false;\r\n\r\n        var self = this,\r\n            subjectId = _$routeParams['subjectId'],\r\n            subjectCopyId = _$routeParams['subjectCopyId'];\r\n\r\n        if (!angular.isUndefined(subjectId)) {\r\n            this._subjectService.resolve().then(function() {\r\n                var subject = self._subjectService.getById(subjectId);\r\n\r\n                self._previewFromReader = !!self._accessService.reader;\r\n                if (!angular.isUndefined(subject)) {\r\n                    self._preview(subject);\r\n                } else if (!angular.isUndefined(self._subjectLibraryService.tmpSubjectForPreview)) {\r\n                    self._previewingFromLibrary = true;\r\n                    self._preview(self._subjectLibraryService.tmpSubjectForPreview);\r\n                } else {\r\n                    self._$location.path('/dashboard');\r\n                }\r\n\r\n            }, function(err) {\r\n                notify.error(err);\r\n            });\r\n\r\n        } else {\r\n            if (!angular.isUndefined(subjectCopyId)) {\r\n                this._perform(subjectCopyId);\r\n            } else {\r\n                self._$location.path('/dashboard');\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _preview(subject:ISubject) {\r\n        var self = this;\r\n        this._previewing = true;\r\n\r\n        this._grainService.getListBySubject(subject).then(\r\n            function(grainList) {\r\n                self._subjectScheduled = self._subjectScheduledService.createFromSubject(subject);\r\n                self._subjectScheduled.id = Math.floor(Math.random() * (999999999 - 1)) + 1;\r\n\r\n                self._subjectCopy = self._subjectCopyService.createFromSubjectScheduled(self._subjectScheduled);\r\n                self._subjectCopy.id = Math.floor(Math.random() * (999999999 - 1)) + 1;\r\n\r\n                self._grainScheduledList = self._grainScheduledService.createGrainScheduledList(grainList);\r\n                angular.forEach(self._grainScheduledList, function(grainScheduled:IGrainScheduled) {\r\n                    grainScheduled.id = Math.floor(Math.random() * (999999999 - 1)) + 1;\r\n                    grainScheduled.subject_scheduled_id = self._subjectScheduled.id;\r\n                });\r\n\r\n                self._grainCopyList = self._grainCopyService.createGrainCopyList(self._grainScheduledList);\r\n                angular.forEach(self._grainCopyList, function(grainCopy:IGrainCopy) {\r\n                    grainCopy.id = Math.floor(Math.random() * (999999999 - 1)) + 1;\r\n                    grainCopy.subject_copy_id = self._subjectCopy.id;\r\n                });\r\n\r\n                self._eventsHandler(self);\r\n                self._hasDataLoaded = true;\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    private _perform(subjectCopyId:number) {\r\n        var self = this;\r\n        this._previewing = false;\r\n        this._previewingFromLibrary = false;\r\n\r\n        this._subjectScheduledService.resolve(false).then(\r\n            function() {\r\n                self._subjectCopyService.resolve(false).then(\r\n                    function() {\r\n                        self._subjectCopy = self._subjectCopyService.getById(subjectCopyId);\r\n                        \r\n                        if (!angular.isUndefined(self._subjectCopy)) {\r\n\r\n                            self._subjectScheduled = self._subjectScheduledService.getById(self._subjectCopy.subject_scheduled_id);\r\n\r\n                            if (!angular.isUndefined(self._subjectScheduled)) {\r\n                                \r\n                                self._grainCopyService.getListBySubjectCopy(self._subjectCopy).then(\r\n                                    function(grainCopyList:IGrainCopy[]) {\r\n                                        \r\n                                        if (!angular.isUndefined(grainCopyList)) {\r\n                                            self._grainCopyList = grainCopyList;\r\n                                            self._eventsHandler(self);\r\n                                            self._hasDataLoaded = true;\r\n                                            \r\n                                        } else {\r\n                                            self._$location.path('/dashboard');\r\n                                        }\r\n                                        \r\n                                    },\r\n                                    function(err) {\r\n                                        notify.error(err);\r\n                                    }\r\n                                )\r\n                                \r\n                            } else {\r\n                                self._$location.path('/dashboard');\r\n                            }\r\n                            \r\n                        } else {\r\n                            self._$location.path('/dashboard');\r\n                        }\r\n                        \r\n                    },\r\n                    function(err) {\r\n                        notify.error(err);\r\n                    }\r\n                )\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    private _eventsHandler = function(self) {\r\n\r\n        function _updateLocalGrainCopyList(grainCopy:IGrainCopy) {\r\n            var grainCopyIndex = self._grainCopyList.indexOf(grainCopy);\r\n\r\n            if (grainCopyIndex !== -1) {\r\n                self._grainCopyList[grainCopyIndex] = grainCopy;\r\n            }\r\n        }\r\n\r\n        function _handleUpdateGrainCopy(grainCopy:IGrainCopy) {\r\n            self._grainCopyService.update(grainCopy).then(\r\n                function() {\r\n                    _updateLocalGrainCopyList(grainCopy);\r\n                },\r\n                function(err) {\r\n                    notify.error(err);\r\n                }\r\n            );\r\n        }\r\n\r\n        self._$scope.$on('E_UPDATE_GRAIN_COPY', function(event, grainCopy:IGrainCopy) {\r\n            if (!self._previewing) {\r\n                _handleUpdateGrainCopy(grainCopy);\r\n            } else {\r\n                _updateLocalGrainCopyList(grainCopy);\r\n            }\r\n        });\r\n\r\n        self._$scope.$on('E_CURRENT_GRAIN_COPY_CHANGED', function(event, grainCopy:IGrainCopy) {\r\n            if (!self._subjectCopy.has_been_started && !self._previewing) {\r\n                self._subjectCopy.has_been_started = true;\r\n                self._subjectCopyService.update(self._subjectCopy).then(\r\n                    function(subjectCopy:ISubjectCopy) {\r\n                        self._subjectCopy = CloneObjectHelper.clone(subjectCopy, true);\r\n                        self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGE', grainCopy);\r\n                    },\r\n                    function(err) {\r\n                        notify.error(err);\r\n                    }\r\n                );\r\n            } else {\r\n                self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGE', grainCopy);\r\n            }\r\n        });\r\n\r\n        self._$scope.$on('E_SUBJECT_COPY_SUBMITTED', function(event, subjectCopy:ISubjectCopy) {\r\n            var subjectCopy : ISubjectCopy = self._subjectCopyService.getById(subjectCopy.id);\r\n            subjectCopy.submitted_date  = new Date().toISOString();\r\n            self._subjectCopyService.update(subjectCopy).then(\r\n                function(subjectCopy:ISubjectCopy) {\r\n                    self._$scope.$broadcast('E_SUBMIT_SUBJECT_COPY');\r\n                },\r\n                function(err) {\r\n                    notify.error(err);\r\n                }\r\n            );\r\n        });\r\n\r\n        // init\r\n        self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGE', undefined);\r\n    };\r\n\r\n    get subjectScheduled():ISubjectScheduled {\r\n        return this._subjectScheduled;\r\n    }\r\n\r\n    get subjectCopy():ISubjectCopy {\r\n        return this._subjectCopy;\r\n    }\r\n\r\n    get grainScheduledList():IGrainScheduled[] {\r\n        if (this._previewing) {\r\n            return this._grainScheduledList;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    get grainCopyList():IGrainCopy[] {\r\n        return this._grainCopyList;\r\n    }\r\n\r\n    get previewing():boolean {\r\n        return this._previewing;\r\n    }\r\n\r\n    get previewingFromLibrary():boolean {\r\n        return this._previewingFromLibrary;\r\n    }\r\n\r\n    get previewFromReader():boolean {\r\n        return this._previewFromReader;\r\n    }\r\n\r\n    get hasDataLoaded():boolean {\r\n        return this._hasDataLoaded;\r\n    }\r\n}\r\n\r\n","class StudentDashboardController {\r\n\r\n    /**\r\n     * INJECT\r\n     */\r\n    private _$location;\r\n    private _$scope;\r\n    private _subjectCopyService;\r\n    private _$window;\r\n\r\n\r\n    static $inject = [\r\n        '$location',\r\n        '$scope',\r\n        'SubjectCopyService',\r\n        '$window'\r\n    ];\r\n\r\n    constructor($location, $scope, SubjectCopyService, $window) {\r\n        var self = this;\r\n        this._$location = $location;\r\n        this._$scope = $scope;\r\n        this._subjectCopyService = SubjectCopyService;\r\n        this._$window = $window;\r\n        //this._subjectCopyService.loadSubjectCopyList();\r\n    }\r\n\r\n    public switchToTeacherView(){\r\n        this._$location.path('/dashboard');\r\n        var self = this;\r\n        setTimeout(\r\n            function(){\r\n                self._$window.location.reload();\r\n            },\r\n            1);\r\n    }\r\n\r\n\r\n}\r\n","class SubjectCopyListController {\r\n\r\n    static $inject = [\r\n        'SubjectScheduledService',\r\n        'DateService',\r\n        'SubjectCopyService',\r\n    ];\r\n    private _subjectScheduledService;\r\n    private _subjectCopyService;\r\n    private _dateService;\r\n\r\n    constructor(SubjectScheduledService, DateService, SubjectCopyService) {\r\n        this._subjectScheduledService = SubjectScheduledService;\r\n        this._subjectCopyService = SubjectCopyService;\r\n        this._dateService = DateService;\r\n\r\n    }\r\n\r\n    public getSubjectScheduledById(id:number) {\r\n        if (!angular.isUndefined(this._subjectScheduledService.listMappedById)) {\r\n            return this._subjectScheduledService.listMappedById[id];\r\n        }\r\n    };\r\n\r\n    public filterOnSubjectScheduledTitle(text) {\r\n        var self = this;\r\n        return function (subjectCopy) {\r\n            var subjectScheduled = self.getSubjectScheduledById(subjectCopy.subject_scheduled_id);\r\n            if (subjectScheduled) {\r\n                if (text) {\r\n                    if (subjectScheduled.title.toLowerCase().search(text.toLowerCase()) === -1) {\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n\r\n        };\r\n    };\r\n\r\n    public filterOnSubjectScheduledDueDate(begin, end) {\r\n        var self = this;\r\n        return function (subjectCopy) {\r\n            var subjectScheduled = self.getSubjectScheduledById(subjectCopy.subject_scheduled_id);\r\n            if (subjectScheduled) {\r\n                var dueDate = self._dateService.isoToDate(subjectScheduled.due_date);\r\n                if (!begin || !end) {\r\n                    throw \"begin or end date in params missing\"\r\n                }\r\n                return self._dateService.compare_after(dueDate, begin, true) && self._dateService.compare_after(end, dueDate, true);\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n\r\n    public orderBySubjectScheduledDueDate(subjectCopy) {\r\n        var self = this;\r\n        return function () {\r\n            var subjectScheduled = self.getSubjectScheduledById(subjectCopy.subject_scheduled_id);\r\n            if (subjectScheduled) {\r\n                return subjectScheduled.due_date;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    public filterOnSubjectCopyState(filter) {\r\n        var self = this;\r\n        return function (subjectCopy) {\r\n            if (filter) {\r\n                return self._subjectCopyService.copyState(subjectCopy) == filter;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    public filterOnSubjectCopyNotStartedOrStarted() {\r\n        var self = this;\r\n        return function (subjectCopy) {\r\n            return self._subjectCopyService.copyState(subjectCopy) === 'has_been_started' || self._subjectCopyService.copyState(subjectCopy) === null;\r\n        }\r\n    };\r\n    public filterOnSubjectCopySubmittedOrCorrectionOnGoingOrCorrected() {\r\n        var self = this;\r\n        return function (subjectCopy) {\r\n            return self._subjectCopyService.copyState(subjectCopy) === 'is_submitted' || self._subjectCopyService.copyState(subjectCopy) === 'is_correction_on_going' || self._subjectCopyService.copyState(subjectCopy) === 'is_corrected';\r\n        }\r\n    };\r\n\r\n}\r\n","class TeacherDashboardCorrectionTabController {\r\n\r\n    public selectedSubjectScheduled;\r\n\r\n    static $inject = [\r\n        '$routeParams',\r\n        '$scope',\r\n        '$q',\r\n        'SubjectScheduledService',\r\n        'SubjectCopyService'\r\n    ];\r\n\r\n\r\n    constructor($routeParams, $scope, $q, SubjectScheduledService,SubjectCopyService) {\r\n        $q.all([\r\n                SubjectScheduledService.resolve(true),\r\n                SubjectCopyService.resolve_force(true),\r\n            ])\r\n            .then(function() {\r\n                if (angular.isUndefined($routeParams['subjectScheduledId'])) {\r\n                    // display list of subject scheduled\r\n                } else {\r\n                    // display list of copy link to this subject scheduled\r\n                    var subjectScheduled = SubjectScheduledService.getById($routeParams['subjectScheduledId']);\r\n                    if (subjectScheduled) {\r\n                        $scope.selectedSubjectScheduled = subjectScheduled;\r\n                    } else {\r\n                        throw \"subject missing\";\r\n                    }\r\n                }\r\n            });\r\n\r\n        $scope.$on('E_SEE_SUBJECT_SCHEDULED_ASSIGN_AT', function(event, data) {\r\n            $scope.$broadcast('SEE_SUBJECT_SCHEDULED_ASSIGN_AT', data);\r\n        });\r\n\r\n    }\r\n}\r\n","class TeacherDashboardSubjectTabController {\r\n\r\n    static $inject = [\r\n        '$location',\r\n        '$scope',\r\n        'FolderService',\r\n        'SubjectService'\r\n    ];\r\n\r\n    private _selectedSubjectList;\r\n    private _selectedFolderList;\r\n\r\n    constructor\r\n    (\r\n        private _$location: ng.ILocationService,\r\n        private _$scope: ng.IScope,\r\n        private _folderService: IFolderService,\r\n        private _subjectService: ISubjectService\r\n    ) {\r\n        var self = this;\r\n        this._$location = _$location;\r\n        this._$scope = _$scope;\r\n        this._folderService = _folderService;\r\n        this._subjectService = _subjectService;\r\n        this._resetSelectedList();\r\n\r\n        this._folderService.resolve().then(\r\n            function() {\r\n                self._subjectService.resolve().then(\r\n                    function() {\r\n                        self._eventsHandler(self);\r\n                    },\r\n                    function(err) {\r\n                       notify.error(err);\r\n                    }\r\n                );\r\n        }, \r\n            function(err) {\r\n            notify.error(err);\r\n        });\r\n    }\r\n\r\n    private _eventsHandler = function (self) {\r\n\r\n        self._$scope.$root.$on('share-updated', function(event, data){\r\n            if(self._selectedSubjectList[0]){\r\n                var subject = self._subjectService.getById(self._selectedSubjectList[0]);\r\n                if(data.added){\r\n                    if(subject.shared.length > 0){\r\n                     // already shared\r\n                    } else{\r\n                        subject.shared.push({userId : data.added.userId})\r\n                    }\r\n                } else {\r\n                    if(subject.shared.length > 0){\r\n                        subject.shared = [];\r\n                    } else{\r\n                        // subject not shared\r\n                    }\r\n                }\r\n            } else{\r\n                console.error('Subject is not defined');\r\n            }\r\n            self._resetSelectedSubjectList();\r\n\r\n        });\r\n\r\n        self._$scope.$on('E_RESET_SELECTED_LIST', function() {\r\n            self._resetSelectedList();\r\n        });\r\n\r\n        self._$scope.$on('E_ADD_NEW_SUBJECT', function() {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_EDIT_SUBJECT', null);\r\n        });\r\n        \r\n        self._$scope.$on('E_SELECT_FOLDER', function (event, folder) {\r\n            self._toggleItem(folder.id, folder.selected, self._selectedFolderList);\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_TOASTER',  self._selectedSubjectList, self._selectedFolderList);\r\n        });\r\n\r\n        self._$scope.$on('E_SELECT_SUBJECT', function (event, subject) {\r\n            self._toggleItem(subject.id, subject.selected, self._selectedSubjectList);\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_TOASTER',  self._selectedSubjectList, self._selectedFolderList);\r\n        });\r\n\r\n        self._$scope.$on('E_CREATE_FOLDER', function () {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_EDIT_FOLDER', null);\r\n        });\r\n\r\n        self._$scope.$on('E_SCHEDULE_SUBJECT', function (event, subject) {\r\n            self._$scope.$broadcast('E_DISPLAY_MODAL_SCHEDULE_SUBJECT', subject);\r\n            self._resetSelectedSubjectList();\r\n        });\r\n\r\n        self._$scope.$on('E_SHARE_SUBJECT', function (event, subject) {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_SHARE', subject);\r\n        });\r\n\r\n        self._$scope.$on('E_PUBLISH_SUBJECT', function (event, subject) {\r\n            self._$scope.$broadcast('E_DISPLAY_MODAL_PUBLISH_TO_LIBRARY', subject);\r\n            self._resetSelectedSubjectList();\r\n        });\r\n\r\n        self._$scope.$on('E_EDIT_FOLDER', function (event, folder) {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_EDIT_FOLDER', folder);\r\n            self._resetSelectedFolderList();\r\n        });\r\n\r\n        self._$scope.$on('E_COPY_SELECTED_FOLDER_SUBJECT', function () {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_COPY_PASTE', self._selectedSubjectList, self._selectedFolderList);\r\n            // reset list in confirm\r\n        });\r\n\r\n        self._$scope.$on('E_EDIT_SUBJECT', function (event, subject) {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_EDIT_SUBJECT', subject);\r\n            self._resetSelectedSubjectList();\r\n        });\r\n\r\n        self._$scope.$on('E_REMOVE_SELECTED_FOLDER_SUBJECT', function () {\r\n            self._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_REMOVE_SELECTED_FOLDER_SUBJECT', self._selectedSubjectList, self._selectedFolderList);\r\n            // reset list in confirm\r\n        });\r\n\r\n        self._$scope.$on('E_CONFIRM_REMOVE_SELECTED_FOLDER_SUBJECT', function () {\r\n            // delete subject list\r\n            angular.forEach(self._selectedSubjectList, function (id) {\r\n                self._subjectService.remove(self._subjectService.getById(id)).then(\r\n                    function(data){\r\n                    },\r\n                    function(err){\r\n                        console.error('fail', err);\r\n                        notify.error(err);\r\n\r\n                    }\r\n                );\r\n            });\r\n            self._resetSelectedSubjectList();\r\n            // delete folder list\r\n            angular.forEach(self._selectedFolderList, function (id) {\r\n                self._folderService.remove(self._folderService.folderById(id)).then(\r\n                    function(data){\r\n                    },\r\n                    function(err){\r\n                        console.error('fail', err);\r\n                        notify.error(err);\r\n\r\n                    }\r\n                );\r\n            });\r\n            self._resetSelectedFolderList();\r\n            self._$scope.$broadcast('E_RESET_SELECT_ALL');\r\n        });\r\n\r\n        self._$scope.$on('E_CONFIRM_COPY_PASTE', function (event, folderParent) {\r\n            // copy subject list\r\n            angular.forEach(self._selectedSubjectList, function (id) {\r\n                self._subjectService.duplicate(self._subjectService.getById(id), folderParent).then(\r\n                    function(data){\r\n                    },\r\n                    function(err){\r\n                        console.error('fail', err);\r\n                        notify.error(err);\r\n\r\n                    }\r\n                );\r\n            });\r\n            self._resetSelectedSubjectList();\r\n            // copy folder list\r\n            angular.forEach(self._selectedFolderList, function (id) {\r\n                self._folderService.duplicate(self._folderService.folderById(id), folderParent, true).then(\r\n                    function(data){\r\n                    },\r\n                    function(err){\r\n                        console.error('fail', err);\r\n                        notify.error(err);\r\n\r\n                    }\r\n                );\r\n            });\r\n            self._resetSelectedFolderList();\r\n            self._$scope.$broadcast('E_RESET_SELECT_ALL');\r\n\r\n        });\r\n    };\r\n\r\n    private _toggleItem(id, isSelected, list) {\r\n        var index = list.indexOf(id);\r\n        if (isSelected) {\r\n            if (index === -1) {\r\n                // the item is not in the list\r\n                list.push(id);\r\n                // force attribut selected in object\r\n            } else {\r\n                // the item is in the list\r\n                console.error('try to add an item in the list but the item is already in the list');\r\n            }\r\n        } else {\r\n            if (index === -1) {\r\n                // the item is not in the list\r\n                console.error('try to remove an item from the list but item missing');\r\n            } else{\r\n                // the item is not in the list\r\n                list.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _resetSelectedFolderList(){\r\n        var self = this;\r\n        angular.forEach(self._folderService.folderList, function(folder : any){\r\n            if(folder !== null){\r\n                if(folder.selected){\r\n                    folder.selected = false;\r\n                }\r\n            }\r\n        });\r\n        this._selectedFolderList = [];\r\n        self._$scope.$broadcast('E_DISPLAY_DASHBOARD_TOASTER',  self._selectedSubjectList, self._selectedFolderList);\r\n\r\n    }\r\n    private _resetSelectedSubjectList(){\r\n        var self = this;\r\n        angular.forEach(self._subjectService.getList(), function(subject : any){\r\n            if(subject !== null){\r\n                if(subject.selected){\r\n                    subject.selected = false;\r\n                }\r\n            }\r\n        });\r\n        this._selectedSubjectList = [];\r\n        self._$scope.$broadcast('E_DISPLAY_DASHBOARD_TOASTER',  self._selectedSubjectList, self._selectedFolderList);\r\n\r\n    }\r\n\r\n    private _resetSelectedList(){\r\n        this._resetSelectedFolderList();\r\n        this._resetSelectedSubjectList();\r\n    }\r\n}\r\n","class TeacherDashboardLibraryTabController {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$location',\r\n        '$scope',\r\n        'SubjectService',\r\n        'SubjectLibraryService',\r\n        'SubjectLessonTypeService',\r\n        'SubjectLessonLevelService',\r\n        'SubjectTagService'\r\n    ];\r\n\r\n    // common\r\n    private _subjectList:ISubject[];\r\n    private _hasDataLoaded:boolean;\r\n    private _isLanding:boolean;\r\n\r\n    // filters\r\n    private _filters:{title:string, subjectLessonTypeList:ISubjectLessonType[], subjectLessonLevelList:ISubjectLessonLevel[], subjectTagList:ISubjectTag[]};\r\n\r\n    private _subjectLessonTypeList:ISubjectLessonType[];\r\n    private _subjectLessonLevelList:ISubjectLessonLevel[];\r\n\r\n    private _subjectTagList:ISubjectTag[];\r\n    private _autocompleteSubjectTagList:any[];\r\n\r\n    private _areFiltersFolded:boolean;\r\n    private _isFilterSubjectLessonTypeDisplayed:boolean;\r\n    private _isFilterSubjectLessonLevelDisplayed:boolean;\r\n\r\n    // toaster\r\n    private _selectedSubjectList:ISubject[];\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$location:ng.ILocationService,\r\n        private _$scope:ng.IScope,\r\n        private _subjectService:ISubjectService,\r\n        private _subjectLibraryService:ISubjectLibraryService,\r\n        private _subjectLessonTypeService:ISubjectLessonTypeService,\r\n        private _subjectLessonLevelService:ISubjectLessonLevelService,\r\n        private _subjectTagService:ISubjectTagService\r\n    ) {\r\n        this._$q = _$q;\r\n        this._$location = _$location;\r\n        this._$scope = _$scope;\r\n        this._subjectService = _subjectService;\r\n        this._subjectLibraryService = _subjectLibraryService;\r\n        this._subjectLessonTypeService = _subjectLessonTypeService;\r\n        this._subjectLessonLevelService = _subjectLessonLevelService;\r\n        this._subjectTagService = _subjectTagService;\r\n\r\n        // common\r\n        this._hasDataLoaded = false;\r\n        this._isLanding = true;\r\n\r\n        // filters\r\n        this._filters = {\r\n            title: undefined,\r\n            subjectLessonTypeList: [],\r\n            subjectLessonLevelList: [],\r\n            subjectTagList: []\r\n        };\r\n        this._areFiltersFolded = false;\r\n        this._isFilterSubjectLessonTypeDisplayed = true;\r\n        this._isFilterSubjectLessonLevelDisplayed = false;\r\n\r\n        // toaster\r\n        this._selectedSubjectList = [];\r\n\r\n        var self = this;\r\n        this._subjectLibraryService.search(/*this._filters*/).then(\r\n            function(subjectList:ISubject[]) {\r\n                self._subjectList = subjectList;\r\n\r\n                self._subjectLessonTypeService.resolve().then(\r\n                    function() {\r\n                        self._subjectLessonTypeList = self._subjectLessonTypeService.getList();\r\n\r\n                        self._subjectLessonLevelService.resolve().then(\r\n                            function() {\r\n                                self._subjectLessonLevelList = self._subjectLessonLevelService.getList();\r\n\r\n                                self._subjectTagService.resolve().then(\r\n                                    function(subjectTagList:ISubjectTag[]) {\r\n                                        self._subjectTagList = subjectTagList;\r\n                                        self._autocompleteSubjectTagList = [];\r\n\r\n                                        angular.forEach(self._subjectTagList, function(value) {\r\n                                            var obj = {\r\n                                                id: value.id,\r\n                                                label: value.label,\r\n                                                toString: function () {\r\n                                                    return this.label;\r\n                                                }\r\n                                            };\r\n                                            self._autocompleteSubjectTagList.push(obj);\r\n                                        });\r\n\r\n                                        var promises = [],\r\n                                            subjectIdList = self._subjectList.map(function(subject:ISubject) {\r\n                                                return subject.id;\r\n                                            });\r\n\r\n                                        angular.forEach(subjectIdList, function(subjectId:number) {\r\n                                            promises.push(self._subjectTagService.resolveBySubjectId(subjectId));\r\n                                        });\r\n\r\n                                        promises.push(self._subjectLessonTypeService.resolveBySubjectIdList(angular.copy(subjectIdList)));\r\n                                        promises.push(self._subjectLessonLevelService.resolveBySubjectIdList(angular.copy(subjectIdList)));\r\n\r\n                                        self._$q.all(promises).then(\r\n                                            function() {\r\n\r\n                                                self._$scope.$on('E_CONFIRM_COPY_PASTE', function(event, folder:IFolder) {\r\n                                                    self._copyPastSelectedSubjectList(folder);\r\n                                                });\r\n\r\n                                                self._hasDataLoaded = true;\r\n                                            },\r\n                                            function(err) {\r\n                                                notify.error(err);\r\n                                            }\r\n                                        );\r\n                                    },\r\n                                    function(err) {\r\n                                        notify.error(err);\r\n                                    }\r\n                                );\r\n                            },\r\n                            function(err) {\r\n                                notify.error(err);\r\n                            }\r\n                        );\r\n                    },\r\n                    function(err) {\r\n                        notify.error(err);\r\n                    }\r\n                );\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * COMMON\r\n     */\r\n\r\n    public getSubjectPicture = function(subject:ISubject) {\r\n        return subject.picture || '/assets/themes/leo/img/illustrations/poll-default.png';\r\n    };\r\n\r\n    public getSubjectLessonType = function(subject:ISubject) {\r\n        return this._subjectLessonTypeService.getBySubjectId(subject.id);\r\n    };\r\n\r\n    public getSubjectLessonLevel = function(subject:ISubject) {\r\n        return this._subjectLessonLevelService.getBySubjectId(subject.id);\r\n    };\r\n\r\n    public getSubjectTags = function(subject:ISubject) {\r\n        return this._subjectTagService.getListBySubjectId(subject.id);\r\n    };\r\n\r\n    /**\r\n     * FILTERS\r\n     */\r\n\r\n    public searchByFilters = function() {\r\n        var self = this;\r\n        return function (subject:ISubject) {\r\n\r\n            if (angular.isUndefined(subject)) {\r\n                return false;\r\n            }\r\n\r\n            var titleFound = true,\r\n                subjectLessonTypeFound = true,\r\n                subjectLessonLevelFound = true,\r\n                subjectTagListFound = true;\r\n\r\n            if (!angular.isUndefined(self._filters.title) && self._filters.title.length > 0) {\r\n                self._isLanding = false;\r\n                titleFound = subject.title.toLowerCase().search(self._filters.title.toLowerCase()) !== -1;\r\n            }\r\n\r\n            if (self._filters.subjectLessonTypeList.length > 0) {\r\n\r\n                var currentSubjectLessonType = self._subjectLessonTypeService.getBySubjectId(subject.id);\r\n                subjectLessonTypeFound = false;\r\n                self._isLanding = false;\r\n\r\n                for (var i = 0; i < self._filters.subjectLessonTypeList.length && !subjectLessonTypeFound; ++i) {\r\n                    subjectLessonTypeFound = currentSubjectLessonType.id === self._filters.subjectLessonTypeList[i].id;\r\n                }\r\n            }\r\n\r\n            if (self._filters.subjectLessonLevelList.length > 0) {\r\n\r\n                var currentSubjectLessonLevel = self._subjectLessonLevelService.getBySubjectId(subject.id);\r\n                subjectLessonLevelFound = false;\r\n                self._isLanding = false;\r\n\r\n                for (var i = 0; i < self._filters.subjectLessonLevelList.length && !subjectLessonLevelFound; ++i) {\r\n                    subjectLessonLevelFound = currentSubjectLessonLevel.id === self._filters.subjectLessonLevelList[i].id;\r\n                }\r\n            }\r\n\r\n            if (self._filters.subjectTagList.length > 0) {\r\n\r\n                var currentSubjectTagList = self._subjectTagService.getListBySubjectId(subject.id);\r\n                subjectTagListFound = false;\r\n                self._isLanding = false;\r\n\r\n                if (currentSubjectTagList.length > 0) {\r\n\r\n                    for (var i = 0; i < currentSubjectTagList.length && !subjectTagListFound; ++i) {\r\n                        for (var j = 0; j < self._filters.subjectTagList.length && !subjectTagListFound; ++j) {\r\n                            subjectTagListFound = currentSubjectTagList[i].id === self._filters.subjectTagList[j].id;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return titleFound && subjectLessonTypeFound && subjectLessonLevelFound && subjectTagListFound;\r\n        };\r\n    };\r\n\r\n    public foldFilters = function() {\r\n        this._areFiltersFolded = !this._areFiltersFolded;\r\n    };\r\n\r\n    public displayFilterSubjectLessonType = function() {\r\n        this._isFilterSubjectLessonLevelDisplayed = false;\r\n        this._isFilterSubjectLessonTypeDisplayed = true;\r\n    };\r\n\r\n    public displayFilterSubjectLessonLevel = function() {\r\n        this._isFilterSubjectLessonLevelDisplayed = true;\r\n        this._isFilterSubjectLessonTypeDisplayed = false;\r\n    };\r\n\r\n    public selectFilterSubjectLessonType = function(subjectLessonType:ISubjectLessonType) {\r\n        var subectLessonTypeIndex = this._filters.subjectLessonTypeList.indexOf(subjectLessonType);\r\n        if (subectLessonTypeIndex === -1) {\r\n            this._filters.subjectLessonTypeList.push(subjectLessonType);\r\n        } else {\r\n            this._filters.subjectLessonTypeList.splice(subectLessonTypeIndex, 1);\r\n        }\r\n    };\r\n\r\n    public isFilterSubjectLessonTypeSelected = function(subjectLessonType:ISubjectLessonType) {\r\n        return this._filters.subjectLessonTypeList.indexOf(subjectLessonType) !== -1;\r\n    };\r\n\r\n    public selectFilterSubjectLessonLevel = function(subjectLessonLevel:ISubjectLessonLevel) {\r\n        var subectLessonLevelIndex = this._filters.subjectLessonLevelList.indexOf(subjectLessonLevel);\r\n        if (subectLessonLevelIndex === -1) {\r\n            this._filters.subjectLessonLevelList.push(subjectLessonLevel);\r\n        } else {\r\n            this._filters.subjectLessonLevelList.splice(subectLessonLevelIndex, 1);\r\n        }\r\n    };\r\n\r\n    public isFilterSubjectLessonLevelSelected = function(subjectLessonLevel:ISubjectLessonLevel) {\r\n        return this._filters.subjectLessonLevelList.indexOf(subjectLessonLevel) !== -1;\r\n    };\r\n\r\n    public selectSubjectTag = function(selectedSubjectTagObject) {\r\n        for (var i = 0; i < this._subjectTagList.length; ++i) {\r\n\r\n            if (this._subjectTagList[i].id === parseInt(selectedSubjectTagObject.id)) {\r\n\r\n                if (this._filters.subjectTagList.indexOf(this._subjectTagList[i]) === -1) {\r\n                    this._filters.subjectTagList.push(this._subjectTagList[i]);\r\n                } else {\r\n                    notify.info('Ce tag est déjà dans la associé à la recherche.')\r\n                }\r\n\r\n                i = this._subjectTagList.length;\r\n            }\r\n        }\r\n    };\r\n\r\n    public removeFromSelectedSubjectTagList = function(subjectTag:ISubjectTag) {\r\n        var subjectTagIndex = this._filters.subjectTagList.indexOf(subjectTag);\r\n        this._filters.subjectTagList.splice(subjectTagIndex, 1);\r\n    };\r\n\r\n    /**\r\n     * TOASTER\r\n     */\r\n\r\n    public selectSubject = function(subject:ISubject) {\r\n        var subjectIndex = this._selectedSubjectList.indexOf(subject);\r\n\r\n        if (subjectIndex !== -1) {\r\n            this._selectedSubjectList.splice(subjectIndex, 1);\r\n        } else {\r\n            this._selectedSubjectList.push(subject);\r\n        }\r\n    };\r\n\r\n    public isSubjectSelected = function(subject:ISubject) {\r\n        return this._selectedSubjectList.indexOf(subject) !== -1;\r\n    };\r\n\r\n    public previewSelectedSubject = function(subject:ISubject = undefined) {\r\n        if (angular.isUndefined(subject)) {\r\n            subject = this._selectedSubjectList[0];\r\n        }\r\n        this._subjectLibraryService.tmpSubjectForPreview = subject;\r\n        this._$location.path('/subject/copy/preview/perform/' + subject.id + '/');\r\n            \r\n    };\r\n\r\n    public displayModalCopyPaste = function() {\r\n        this._$scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_COPY_PASTE', this._selectedSubjectList, [], true);\r\n    };\r\n\r\n    private _copyPastSelectedSubjectList = function(parentFolder) {\r\n        var self = this;\r\n\r\n        angular.forEach(this._selectedSubjectList, function(subject:ISubject) {\r\n            subject.is_library_subject = false;\r\n        });\r\n\r\n        this._subjectService.duplicateList(this._selectedSubjectList, parentFolder).then(\r\n            function() {\r\n                self._selectedSubjectList = [];\r\n                notify.info('Les sujets ont bien été ajoutés dans votre liste des sujets.')\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    };\r\n\r\n    public resetSelection = function() {\r\n        this._selectedSubjectList = [];\r\n    };\r\n\r\n    public onlyOneSubjectIsSelected = function() {\r\n        return this._selectedSubjectList.length === 1;\r\n    };\r\n\r\n    public isToasterDisplayed = function() {\r\n        return this._selectedSubjectList.length > 0;\r\n    };\r\n\r\n    /**\r\n     * GETTER\r\n     */\r\n\r\n    get subjectList():ISubject[] {\r\n        return this._subjectList;\r\n    }\r\n\r\n    get hasDataLoaded():boolean {\r\n        return this._hasDataLoaded;\r\n    }\r\n\r\n    get isLanding():boolean {\r\n        return this._isLanding;\r\n    }\r\n\r\n    get filters():{title:string, subjectLessonTypeList:ISubjectLessonType[], subjectLessonLevelList:ISubjectLessonLevel[], subjectTagList:ISubjectTag[]} {\r\n        return this._filters;\r\n    }\r\n\r\n    get subjectLessonTypeList():ISubjectLessonType[] {\r\n        return this._subjectLessonTypeList;\r\n    }\r\n\r\n    get subjectLessonLevelList():ISubjectLessonLevel[] {\r\n        return this._subjectLessonLevelList;\r\n    }\r\n\r\n    get autocompleteSubjectTagList():any[] {\r\n        return this._autocompleteSubjectTagList;\r\n    }\r\n\r\n    get areFiltersFolded():boolean {\r\n        return this._areFiltersFolded;\r\n    }\r\n\r\n    get isFilterSubjectLessonTypeDisplayed():boolean {\r\n        return this._isFilterSubjectLessonTypeDisplayed;\r\n    }\r\n\r\n    get isFilterSubjectLessonLevelDisplayed():boolean {\r\n        return this._isFilterSubjectLessonLevelDisplayed;\r\n    }\r\n}\r\n\r\n","class ViewSubjectCopyController {\r\n\r\n    static $inject = [\r\n        '$routeParams',\r\n        '$scope',\r\n        '$location',\r\n        'SubjectService',\r\n        'SubjectLibraryService',\r\n        'SubjectScheduledService',\r\n        'SubjectCopyService',\r\n        'GrainScheduledService',\r\n        'GrainCopyService',\r\n        'GrainTypeService',\r\n        'AccessService'\r\n    ];\r\n\r\n    private _subjectScheduled:ISubjectScheduled;\r\n    private _subjectCopy:ISubjectCopy;\r\n    private _grainScheduledList:IGrainScheduled[];\r\n    private _grainCopyList:IGrainCopy[];\r\n    private _isTeacher:boolean;\r\n    private _previewing:boolean;\r\n    private _previewingFromLibrary:boolean;\r\n    private _hasDataLoaded:boolean;\r\n\r\n    constructor\r\n    (\r\n        private _$routeParams,\r\n        private _$scope:ng.IScope,\r\n        private _$location:ng.ILocationService,\r\n        private _subjectService:ISubjectService,\r\n        private _subjectLibraryService:ISubjectLibraryService,\r\n        private _subjectScheduledService:ISubjectScheduledService,\r\n        private _subjectCopyService:ISubjectCopyService,\r\n        private _grainScheduledService:IGrainScheduledService,\r\n        private _grainCopyService:IGrainCopyService,\r\n        private _grainTypeService:IGrainTypeService,\r\n        private _accessService:IAccessService\r\n    ) {\r\n        this._$scope = _$scope;\r\n        this._$location = _$location;\r\n        this._subjectService = _subjectService;\r\n        this._subjectLibraryService = _subjectLibraryService;\r\n        this._subjectScheduledService = _subjectScheduledService;\r\n        this._subjectCopyService =_subjectCopyService;\r\n        this._grainScheduledService = _grainScheduledService;\r\n        this._grainCopyService = _grainCopyService;\r\n        this._grainTypeService = _grainTypeService;\r\n        this._hasDataLoaded = false;\r\n\r\n        var self = this,\r\n            subjectId = _$routeParams['subjectId'],\r\n            subjectCopyId = _$routeParams['subjectCopyId'];\r\n\r\n        if (!angular.isUndefined(subjectId)) {\r\n            this._subjectService.getByIdEvenDeleted(subjectId).then(function(subject) {\r\n                if (angular.isUndefined(subject)) {\r\n                    subject = self._subjectLibraryService.tmpSubjectForPreview;\r\n                    self._previewingFromLibrary = !angular.isUndefined(subject);\r\n                }\r\n                \r\n                if (!angular.isUndefined(subject)) {\r\n                    self._isTeacher = true;\r\n                    if (!angular.isUndefined(subjectCopyId)) {\r\n                        self._view(subjectCopyId);\r\n                    } else {\r\n                        self._preview(subject.id);\r\n                    }\r\n                } else {\r\n                    self._$location.path('/dashboard');\r\n                }\r\n\r\n            }, function(err) {\r\n                notify.error(err);\r\n            });\r\n\r\n        } else {\r\n            if (!angular.isUndefined(subjectCopyId)) {\r\n                this._view(subjectCopyId);\r\n            } else {\r\n                this._$location.path('/dashboard');\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _preview(subjectId:number) {\r\n        this._previewing = true;\r\n\r\n        var subjectCopyService = this._subjectCopyService as SubjectCopyService,\r\n            tmpPreviewData = subjectCopyService.tmpPreviewData;\r\n        \r\n        if (angular.isUndefined(tmpPreviewData)) {\r\n            this._$location.path('/subject/edit/' + subjectId + '/');\r\n        } else {\r\n            this._subjectScheduled = CloneObjectHelper.clone(tmpPreviewData.subjectScheduled, true);\r\n            this._subjectCopy = CloneObjectHelper.clone(tmpPreviewData.subjectCopy, true);\r\n            this._grainScheduledList = CloneObjectHelper.clone(tmpPreviewData.grainScheduledList, true);\r\n            this._grainCopyList = CloneObjectHelper.clone(tmpPreviewData.grainCopyList, true);\r\n\r\n            subjectCopyService.tmpPreviewData = undefined;\r\n\r\n            var self = this;\r\n            this._eventsHandler(self);\r\n            this._hasDataLoaded = true;\r\n        }\r\n    }\r\n\r\n    private _view(subjectCopyId:number) {\r\n        var self = this;\r\n        this._previewing = false;\r\n\r\n        this._subjectScheduledService.resolve(self._isTeacher).then(\r\n            function() {\r\n                self._subjectCopyService.resolve(self._isTeacher).then(\r\n                    function() {\r\n                        self._subjectCopy = self._subjectCopyService.getById(subjectCopyId);\r\n\r\n                        if (!angular.isUndefined(self._subjectCopy)) {\r\n\r\n                            self._subjectScheduled = self._subjectScheduledService.getById(self._subjectCopy.subject_scheduled_id);\r\n\r\n                            if (!angular.isUndefined(self._subjectScheduled)) {\r\n\r\n                                self._grainCopyService.getListBySubjectCopy(self._subjectCopy).then(\r\n                                    function(grainCopyList:IGrainCopy[]) {\r\n\r\n                                        if (!angular.isUndefined(grainCopyList)) {\r\n                                            self._grainCopyList = grainCopyList;\r\n\r\n                                            self._grainScheduledService.getListBySubjectScheduled(self._subjectScheduled).then(\r\n                                                function(grainScheduledList:IGrainScheduled[]) {\r\n                                                    \r\n                                                    if (!angular.isUndefined(grainScheduledList)) {\r\n                                                        self._grainScheduledList = grainScheduledList;\r\n                                                        self._eventsHandler(self);\r\n                                                        self._hasDataLoaded = true;\r\n                                                    } else {\r\n                                                        self._$location.path('/dashboard');\r\n                                                    }\r\n                                                    \r\n                                                },\r\n                                                function(err) {\r\n                                                    notify.error(err);\r\n                                                }\r\n                                            );\r\n                                        } else {\r\n                                            self._$location.path('/dashboard');\r\n                                        }\r\n\r\n                                    },\r\n                                    function(err) {\r\n                                        notify.error(err);\r\n                                    }\r\n                                )\r\n\r\n                            } else {\r\n                                self._$location.path('/dashboard');\r\n                            }\r\n\r\n                        } else {\r\n                            self._$location.path('/dashboard');\r\n                        }\r\n\r\n                    },\r\n                    function(err) {\r\n                        notify.error(err);\r\n                    }\r\n                )\r\n            },\r\n            function(err) {\r\n                notify.error(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    private _eventsHandler = function(self) {\r\n\r\n        function _calculateScores() {\r\n            var calculatedScore:number = 0,\r\n                finalScore:number = 0;\r\n\r\n            angular.forEach(self._grainCopyList, function(grainCopy:IGrainCopy) {\r\n                \r\n                if(!angular.isUndefined(grainCopy.calculated_score) && grainCopy.calculated_score !== null) {\r\n                    calculatedScore += parseFloat(grainCopy.calculated_score.toString());\r\n\r\n                    if (angular.isUndefined(grainCopy.final_score) || grainCopy.final_score === null) {\r\n                        finalScore += parseFloat(grainCopy.calculated_score.toString());\r\n                        grainCopy.final_score = grainCopy.calculated_score;\r\n                    } else {\r\n                        finalScore += parseFloat(grainCopy.final_score.toString());\r\n                    }\r\n                }\r\n            });\r\n\r\n            self._subjectCopy.calculated_score = calculatedScore;\r\n            self._subjectCopy.final_score = finalScore;\r\n        }\r\n\r\n        function _updateLocalGrainCopyList(grainCopy:IGrainCopy) {\r\n            var grainCopyIndex = self._grainCopyList.indexOf(grainCopy);\r\n\r\n            if (grainCopyIndex !== -1) {\r\n                self._grainCopyList[grainCopyIndex] = grainCopy;\r\n            }\r\n        }\r\n\r\n        function _handleUpdateSubjectCopy(subjectCopy:ISubjectCopy, redirect:boolean) {\r\n            _calculateScores();\r\n            self._subjectCopyService.update(subjectCopy).then(\r\n                function(subjectCopy:ISubjectCopy) {\r\n                    self._subjectCopy = CloneObjectHelper.clone(subjectCopy, true);\r\n                    self._$scope.$broadcast('E_SUBJECT_COPY_UPDATED', redirect);\r\n                },\r\n                function(err) {\r\n                    notify.info(err);\r\n                }\r\n            )\r\n        }\r\n\r\n        function _handleUpdateGrainCopy(grainCopy:IGrainCopy) {\r\n            self._grainCopyService.update(grainCopy).then(\r\n                function() {\r\n                    _updateLocalGrainCopyList(grainCopy);\r\n                    \r\n                    if (!self._previewing  && self._isTeacher) {\r\n                        _handleUpdateSubjectCopy(self._subjectCopy, false);\r\n                    }\r\n                    \r\n                    _calculateScores();\r\n                },\r\n                function(err) {\r\n                    notify.error(err);\r\n                }\r\n            );\r\n        }\r\n\r\n        /**\r\n         * this event is call when a grain copy is updated\r\n         * - from grainCopyFooter.ts\r\n         */\r\n        self._$scope.$on('E_UPDATE_GRAIN_COPY', function(event, grainCopy:IGrainCopy) {\r\n            if (!self._previewing && self._isTeacher) {\r\n                _handleUpdateGrainCopy(grainCopy);\r\n                self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGED', grainCopy);\r\n            } else {\r\n                _updateLocalGrainCopyList(grainCopy);\r\n                _calculateScores();\r\n            }\r\n        });\r\n\r\n        self._$scope.$on('E_CURRENT_GRAIN_COPY_CHANGED', function(event, grainCopy:IGrainCopy) {\r\n            if (!self._subjectCopy.is_corrected && !self._subjectCopy.is_correction_on_going && !self._previewing  && self._isTeacher) {\r\n                self._subjectCopy.is_correction_on_going = true;\r\n                _calculateScores();\r\n                self._subjectCopyService.update(self._subjectCopy).then(\r\n                    function(subjectCopy:ISubjectCopy) {\r\n                        self._subjectCopy = CloneObjectHelper.clone(subjectCopy, true);\r\n                        self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGE', grainCopy);\r\n                    },\r\n                    function(err) {\r\n                        notify.error(err);\r\n                    }\r\n                );\r\n            } else {\r\n                _calculateScores();\r\n                self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGE', grainCopy);\r\n            }\r\n        });\r\n\r\n        /**\r\n         * this event is call when a subject copy is updated\r\n         * - viewSummery.ts\r\n         */\r\n        self._$scope.$on('E_UPDATE_SUBJECT_COPY', function(event, subjectCopy:ISubjectCopy, redirect:boolean) {\r\n            if (!self._previewing  && self._isTeacher) {\r\n                _handleUpdateSubjectCopy(subjectCopy, redirect);\r\n            } else if (self._previewing && self._isTeacher) {\r\n               _calculateScores();\r\n                self._$scope.$broadcast('E_SUBJECT_COPY_UPDATED', redirect);\r\n            }\r\n        });\r\n\r\n        // init\r\n        self._$scope.$broadcast('E_CURRENT_GRAIN_COPY_CHANGE', undefined);\r\n    };\r\n\r\n    get subjectScheduled():ISubjectScheduled {\r\n        return this._subjectScheduled;\r\n    }\r\n\r\n    get subjectCopy():ISubjectCopy {\r\n        return this._subjectCopy;\r\n    }\r\n\r\n    get grainScheduledList():IGrainScheduled[] {\r\n        return this._grainScheduledList;\r\n    }\r\n\r\n    get grainCopyList():IGrainCopy[] {\r\n        return this._grainCopyList;\r\n    }\r\n\r\n    get isTeacher():boolean {\r\n        return this._isTeacher;\r\n    }\r\n\r\n    get previewing():boolean {\r\n        return this._previewing;\r\n    }\r\n\r\n    get previewingFromLibrary():boolean {\r\n        return this._previewingFromLibrary;\r\n    }\r\n\r\n    get hasDataLoaded():boolean {\r\n        return this._hasDataLoaded;\r\n    }\r\n}\r\n\r\n","interface IAccessService {\r\n    reader : boolean\r\n}\r\n\r\nclass AccessService implements IAccessService {\r\n\r\n    public reader : boolean;\r\n\r\n\r\n}\r\n","interface IDateService {\r\n    addDays(date, days);\r\n    compare_after(date_a, date_b, value_equal):boolean;\r\n    timestampToDate(timestamp);\r\n    isoToDate(iso);\r\n}\r\n\r\nclass DateService implements IDateService {\r\n\r\n    static $inject = [];\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public addDays(date, days) {\r\n        var result = new Date(date);\r\n        result.setDate(date.getDate() + days);\r\n        return result;\r\n    }\r\n\r\n    public compare_after(date_a, date_b, value_equal) {\r\n        var a = angular.copy(date_a);\r\n        var b = angular.copy(date_b);\r\n        a.setHours(0, 0, 0, 0);\r\n        b.setHours(0, 0, 0, 0);\r\n        if (a > b) {\r\n            return true;\r\n        } else if (a < b) {\r\n\r\n            return false;\r\n        } else {\r\n            return value_equal;\r\n        }\r\n    }\r\n\r\n\r\n    public timestampToDate(timestamp) {\r\n        return new Date(parseInt(timestamp) * 1000);\r\n    }\r\n\r\n    public isoToDate(iso) {\r\n        return new Date(iso);\r\n    }\r\n}","interface IDragService {\r\n    drag(item, $originalEvent);\r\n    dropTo(targetItem, $originalEvent, scope);\r\n    canDragFolderInPage(targetItem): boolean\r\n    canDropOnFolderInPage(targetItem): boolean;\r\n    canDragSubjectInPage(targetItem): boolean;\r\n    canDropOnSubjectInPage(targetItem): boolean;\r\n    canDragFolderInNav(targetItem): boolean;\r\n    canDropOnFolderInNav(targetItem): boolean;\r\n    dropConditionFunction(targetItem, event): any;\r\n\r\n}\r\n\r\nclass DragService implements IDragService {\r\n\r\n    static $inject = [\r\n        'FolderService',\r\n        'SubjectService',\r\n    ];\r\n\r\n\r\n    constructor(\r\n        private _folderService,\r\n        private _subjectService\r\n\r\n    ) {\r\n        this._folderService = _folderService;\r\n        this._subjectService = _subjectService;\r\n    }\r\n\r\n\r\n    public drag(item, $originalEvent) {\r\n        try {\r\n            $originalEvent.dataTransfer.setData('application/json', JSON.stringify(item));\r\n        } catch (e) {\r\n            $originalEvent.dataTransfer.setData('Text', JSON.stringify(item));\r\n        }\r\n    }\r\n\r\n    public dropTo(targetItem, $originalEvent, scope) {\r\n        var dataField = this.dropConditionFunction(targetItem, $originalEvent);\r\n        var originalItem = JSON.parse($originalEvent.dataTransfer.getData(dataField));\r\n        this.actionAfterDragAndDrop(targetItem, originalItem);\r\n        scope.$apply();\r\n    }\r\n\r\n    /**\r\n     * CAN\r\n     */\r\n\r\n    public canDragFolderInPage(targetItem): boolean {\r\n        return true;\r\n    }\r\n\r\n    public canDropOnFolderInPage(targetItem): boolean {\r\n        return true;\r\n    }\r\n\r\n    public canDragSubjectInPage(targetItem): boolean {\r\n        return true;\r\n    }\r\n\r\n    public canDropOnSubjectInPage(targetItem): boolean {\r\n        return false;\r\n    }\r\n\r\n    public canDragFolderInNav(targetItem): boolean {\r\n        return true;\r\n    }\r\n\r\n    public canDropOnFolderInNav(targetItem): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * DROP CONDITION\r\n     */\r\n\r\n    public dropConditionFunction(targetItem, event) {\r\n        var dataField = event.dataTransfer.types.indexOf && event.dataTransfer.types.indexOf(\"application/json\") > -1 ? \"application/json\" : //Chrome & Safari\r\n            event.dataTransfer.types.contains && event.dataTransfer.types.contains(\"application/json\") ? \"application/json\" : //Firefox\r\n                event.dataTransfer.types.contains && event.dataTransfer.types.contains(\"Text\") ? \"Text\" : //IE\r\n                    undefined;\r\n\r\n        return dataField ? dataField : false;\r\n    }\r\n\r\n    private actionAfterDragAndDrop(targetItem, originalItem) {\r\n\r\n        if (this.isSubject(originalItem)) {\r\n            if (this.isSubject(targetItem)) {\r\n                throw \"not possible\";\r\n            } else if (this.isFolder(targetItem)) {\r\n                var subject = this._subjectService.getById(this.getId(originalItem));\r\n                this._subjectService.setFolderId(subject, targetItem.id);\r\n            } else {\r\n                //default\r\n                // drop on root\r\n                var subject = this._subjectService.getById(this.getId(originalItem));\r\n                this._subjectService.setFolderId(subject, null);\r\n            }\r\n        }\r\n        if (this.isFolder(originalItem)) {\r\n            if (this.isSubject(targetItem)) {\r\n                throw \"not possible\";\r\n            } else if (this.isFolder(targetItem)) {\r\n                this._folderService.setParentFolderId(this.getId(originalItem), this.getId(targetItem));\r\n\r\n            } else {\r\n                // default\r\n                // drop on root\r\n                this._folderService.setParentFolderId(this.getId(originalItem), null);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //TODO move in Service and improve it\r\n    private isSubject(object: any) {\r\n        if (object && object.title) {\r\n            return true\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    private isFolder(object: any) {\r\n        if (object && object.label) {\r\n            return true\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private getId(object: any) {\r\n        var id = object.id;\r\n        if (id) {\r\n            return id\r\n        } else {\r\n            console.error('no _id in this object', object);\r\n            throw \"\";\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","interface IFolderService {\r\n    resolve(): ng.IPromise<boolean>;\r\n    persist(folder:IFolder):ng.IPromise<IFolder>;\r\n    update(folder:IFolder):ng.IPromise<IFolder>;\r\n    remove(folder:IFolder) : ng.IPromise<IFolder>;\r\n    duplicate(folder: IFolder, parentFolder : IFolder, recursive : boolean) : ng.IPromise<IFolder>;\r\n    setParentFolderId(originFolderId, targetFolderId);\r\n    getListOfSubFolderByFolderId(folderId);\r\n    folderById(id:number) : IFolder;\r\n    isAParentOf(originFolder, targetFolder):boolean;\r\n    folderList : IFolder[];\r\n}\r\n\r\nclass FolderService implements IFolderService {\r\n\r\n    static $inject = [\r\n        '$http',\r\n        '$q',\r\n        'SubjectService'\r\n    ];\r\n\r\n    // Inject\r\n    private _$http;\r\n    private _$q:ng.IQService;\r\n    private _subjectService;\r\n\r\n    // Variable\r\n    private _folderList:any;\r\n    private _folderListByParentFolderId;\r\n\r\n    constructor($http, $q, SubjectService) {\r\n        this._$http = $http;\r\n        this._$q = $q;\r\n        this._subjectService = SubjectService;\r\n        \r\n        this._folderList = {};\r\n        this._folderListByParentFolderId = {};\r\n    }\r\n\r\n    public resolve(): ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: 'exercizer/folders'\r\n            };\r\n        this._$http(request).then(\r\n            function (response) {\r\n                // for each folder, add to list\r\n                angular.forEach(response.data, function (folderObject) {\r\n                    var folder = SerializationHelper.toInstance(new Folder(), JSON.stringify(folderObject));\r\n                    self._folderList[folder.id] = folder;\r\n                });\r\n                deferred.resolve(self._folderList);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la récupération de vos dossiers.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * get folder list\r\n     * @returns {any}\r\n     */\r\n    public get folderList():IFolder[] {\r\n        return this._folderList;\r\n    }\r\n\r\n    /**\r\n     * Get folder by id\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    public folderById(id:number):IFolder {\r\n        return this._folderList[id];\r\n    }\r\n\r\n    /**\r\n     * get list of folder by folder parent id\r\n     * @param folderId\r\n     * @returns {any}\r\n     */\r\n    public getListOfSubFolderByFolderId(folderId) {\r\n        if (this._folderListByParentFolderId[folderId]) {\r\n            // already set\r\n        } else {\r\n            // init _folderListByParentFolderId for this id\r\n            this._folderListByParentFolderId[folderId] = {};\r\n            // build it\r\n            var self = this;\r\n            angular.forEach(this._folderList, function (value, key) {\r\n                if (value.parent_folder_id == folderId) {\r\n                    self._folderListByParentFolderId[folderId][value.id] = value;\r\n                }\r\n            });\r\n        }\r\n        \r\n        return this._folderListByParentFolderId[folderId];\r\n    }\r\n\r\n    public getList = function(): IFolder[] {\r\n        if (!angular.isUndefined(this._folderList)) {\r\n            return MapToListHelper.toList(this._folderList);\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * persist a folder\r\n     * @param folder\r\n     * @returns {IPromise<T>}\r\n     */\r\n    public persist(folder:IFolder):ng.IPromise<IFolder> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/folder',\r\n                data: folder\r\n            };\r\n        this._$http(request).then(\r\n            function (response) {\r\n                folder = SerializationHelper.toInstance(new Folder(), JSON.stringify(response.data));\r\n                self._folderList[folder.id] = folder;\r\n                deferred.resolve(folder);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la création du dossier.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * update a folder\r\n     * @param folder\r\n     * @returns {IPromise<T>}\r\n     */\r\n    public update(folder):ng.IPromise<IFolder> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'PUT',\r\n                url: 'exercizer/folder/'+folder.id,\r\n                data: folder\r\n            };\r\n        // delete selected\r\n        delete folder.selected;\r\n        this._$http(request).then(\r\n            function (response) {\r\n                deferred.resolve(folder);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la création du dossier.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * remove folder\r\n     * @param folder\r\n     * @returns {IPromise<T>}\r\n     */\r\n    public remove(folder:IFolder):ng.IPromise<IFolder> {\r\n        var deferred = this._$q.defer(),\r\n            self = this;\r\n        // before delete children\r\n        var promises = [];\r\n        promises.push(this.deleteChildrenFolder(folder));\r\n        promises.push(this._subjectService.deleteSubjectChildrenOfFolder(folder));\r\n        this._$q.all(promises).then(\r\n            function(results) {\r\n                    var request = {\r\n                        method: 'DELETE',\r\n                        url: 'exercizer/folder/'+folder.id,\r\n                        data: folder\r\n                    };\r\n                    self._$http(request).then(\r\n                    function () {\r\n                        delete self._folderList[folder.id];\r\n                        self._removeFolderToFolderListByParentFolderId(folder);\r\n                        deferred.resolve();\r\n                    },\r\n                    function () {\r\n                        deferred.reject('Une erreur est survenue lors de la suppression du dossier.');\r\n                    }\r\n                );\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    private deleteChildrenFolder(folder:IFolder) {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n        var promises = [];\r\n        angular.forEach(this._folderList, function (value, key) {\r\n            if (value.parent_folder_id === folder.id) {\r\n                promises.push(self.remove(value));\r\n            }\r\n        });\r\n        this._$q.all(promises).then(\r\n            function(results) {\r\n                deferred.resolve();\r\n            }, function(err){\r\n                console.error(err);\r\n                deferred.reject\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * duplicate folder\r\n     * @param folder\r\n     * @param parentFolder\r\n     * @param recursive\r\n     * @returns {IPromise<T>}\r\n     */\r\n    public duplicate(folder: IFolder, parentFolder : IFolder, recursive : boolean): ng.IPromise<IFolder> {\r\n        var deferred = this._$q.defer(),\r\n            self= this;\r\n        // create new folder\r\n        var newFolder = new Folder();\r\n            newFolder.label = folder.label + '_copie';\r\n        // verification\r\n        if(parentFolder && folder.id === parentFolder.id){\r\n            var msg = \"Vous ne pouvez pas dupliquer le dossier dans lui-même.\";\r\n            deferred.reject(msg);\r\n        } else if (self.isAParentOf(folder, parentFolder)){\r\n            var msg = \"Vous ne pouvez pas dupliquer le dossier dans lui-même.\";\r\n            deferred.reject(msg);\r\n        } else{\r\n            // persist it\r\n            this.persist(newFolder).then(\r\n                function(duplicatedFolder: IFolder) {\r\n                    // if origin folder has children\r\n                    var childrenFolder = self.getListOfSubFolderByFolderId(folder.id);\r\n                    var childrenSubject = self._subjectService.getListByFolderId(folder.id);\r\n                    if(childrenFolder){\r\n                        self.duplicateList(childrenFolder, duplicatedFolder)\r\n                    }\r\n                    if(childrenSubject){\r\n                        self._subjectService.duplicateList(childrenSubject,duplicatedFolder);\r\n                    }\r\n                    // set parent folder id\r\n                    if(parentFolder){\r\n                        self.setParentFolderId(duplicatedFolder.id, parentFolder.id);\r\n                    } else {\r\n                        self.setParentFolderId(duplicatedFolder.id, null);\r\n                    }\r\n                    deferred.resolve(duplicatedFolder);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la duplication du dossier.')\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    }\r\n\r\n    public duplicateList(list, parentFolder){\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            promises = [];\r\n        angular.forEach(list, function(value) {\r\n            promises.push(self.duplicate(value,parentFolder, true));\r\n        });\r\n        this._$q.all(promises).then(\r\n            function(data) {\r\n                deferred.resolve(data);\r\n            }, function(err) {\r\n                console.error(err);\r\n                deferred.reject(err);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    /**\r\n     * set parent id to a folder\r\n     * @param originFolderId\r\n     * @param targetFolderId\r\n     */\r\n    public setParentFolderId(originFolderId, targetFolderId) {\r\n        var originFolder = this._folderList[originFolderId];\r\n        if (!originFolder) {\r\n            console.error('originFolder or targetFolder is not defined');\r\n            throw \"\"\r\n        }\r\n        if (targetFolderId == null) {\r\n            // drag to root\r\n            if (originFolder.parent_folder_id) {\r\n                delete this._folderListByParentFolderId[originFolder.parent_folder_id][originFolderId];\r\n                originFolder.parent_folder_id = null;\r\n            }\r\n        } else {\r\n            // drag to other folder\r\n            var targetFolder = this._folderList[targetFolderId];\r\n            // check if there are no loop in folder\r\n            if (this.isAParentOf(originFolder, targetFolder)) {\r\n                console.error(\"Loop folder not allowed\");\r\n                notify.error(\"Deplacement non autorisé\");\r\n            } else {\r\n                // check if the folder is not drop in itself\r\n                if (originFolderId == targetFolderId) {\r\n                    console.error(\"A folder can't be placed in itself\");\r\n                    notify.error(\"Deplacement non autorisé\");\r\n                } else {\r\n                    // before change parent folder id\r\n                    // delete folder from old _folderListByParentFolderId\r\n                    if (originFolder.parent_folder_id) {\r\n                        delete this._folderListByParentFolderId[originFolder.parent_folder_id][originFolderId];\r\n                    }\r\n                    originFolder.parent_folder_id = targetFolderId;\r\n                    // persist folder\r\n                    this.update(this.folderById(originFolder.id));\r\n\r\n                    // after change parent folder id\r\n                    //  add folder to new _folderListByParentFolderId\r\n                    if (!this._folderListByParentFolderId[targetFolderId]) {\r\n                        this._folderListByParentFolderId[targetFolderId] = [];\r\n                    }\r\n                    this._folderListByParentFolderId[targetFolderId][originFolderId] = originFolder;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * remove folder list  in folderListByFolderID\r\n     * @param folder\r\n     */\r\n    private _removeFolderToFolderListByParentFolderId(folder: IFolder) {\r\n        var self = this;\r\n        angular.forEach(this._folderListByParentFolderId, function(value_1, key_1) {\r\n            if (folder.id == key_1) {\r\n                // delete parent folder\r\n                delete self._folderListByParentFolderId[key_1];\r\n            }\r\n            if (value_1) {\r\n                angular.forEach(value_1, function(value_2, key_2) {\r\n                    if (folder.id == key_2) {\r\n                        // delete children folder\r\n                        delete self._folderListByParentFolderId[key_1][key_2];\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * check if a folder is a parent of a other folder\r\n     * @param originFolder\r\n     * @param targetFolder\r\n     * @returns {boolean}\r\n     */\r\n    public isAParentOf(originFolder, targetFolder):boolean {\r\n        if(!originFolder || !targetFolder){\r\n            return false;\r\n        }\r\n        if (targetFolder.parent_folder_id == null) {\r\n            return false;\r\n        } else if (originFolder.id == targetFolder.parent_folder_id) {\r\n            return true;\r\n        } else {\r\n            return this.isAParentOf(originFolder, this._folderList[targetFolder.parent_folder_id]);\r\n        }\r\n    }\r\n\r\n}","interface IGrainCopyService {\r\n    persist(grainCopy:IGrainCopy, subjectScheduled):ng.IPromise<IGrainCopy>;\r\n    update(grainCopy:IGrainCopy):ng.IPromise<IGrainCopy>;\r\n    getListBySubjectCopy(subjectCopy:ISubjectCopy):ng.IPromise<IGrainCopy[]>;\r\n    instantiateGrainCopy(grainCopyObject:any): IGrainCopy;\r\n    createGrainCopyList(grainScheduledList:IGrainScheduled[]):IGrainCopy[];\r\n}\r\n\r\nclass GrainCopyService implements IGrainCopyService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http'\r\n    ];\r\n\r\n    private _listMappedBySubjectCopyId:{[subjectCopyId:number]:IGrainCopy[]};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._listMappedBySubjectCopyId = {};\r\n    }\r\n\r\n    public persist = function(grainCopy:IGrainCopy, subjectScheduled):ng.IPromise<IGrainCopy> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: 'exercizer/grain-copy/' + subjectScheduled.id,\r\n            data: grainCopy\r\n        };\r\n\r\n        this._$http(request).then(\r\n            function (grainCopy) {\r\n                if (angular.isUndefined( self._listMappedBySubjectCopyId[grainCopy.subject_copy_id])) {\r\n                    self._listMappedBySubjectCopyId[grainCopy.subject_copy_id] = [];\r\n                }\r\n                self._listMappedBySubjectCopyId[grainCopy.subject_copy_id].push(grainCopy);\r\n\r\n                deferred.resolve(grainCopy);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la création d\\'un élément d\\'une copie.')\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public update = function(grainCopy:IGrainCopy):ng.IPromise<IGrainCopy> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        var grainCopyObject = angular.copy(grainCopy);\r\n        grainCopyObject.grain_copy_data = JSON.stringify(grainCopyObject.grain_copy_data);\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: 'exercizer/grain-copy',\r\n            data: grainCopyObject\r\n        };\r\n\r\n        this._$http(request).then(\r\n            function (response) {\r\n                var grainCopy = self.instantiateGrainCopy(response.data);\r\n\r\n                if (angular.isUndefined(self._listMappedBySubjectCopyId[grainCopy.subject_copy_id])) {\r\n                    self._listMappedBySubjectCopyId[grainCopy.subject_copy_id] = [];\r\n                }\r\n\r\n                var index = self._listMappedBySubjectCopyId[grainCopy.subject_copy_id].indexOf(grainCopy);\r\n                self._listMappedBySubjectCopyId[grainCopy.subject_copy_id][index] = grainCopy;\r\n\r\n                deferred.resolve(grainCopy);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la mise à jour de l\\'élément de la copie.')\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getListBySubjectCopy = function(subjectCopy:ISubjectCopy):ng.IPromise<IGrainCopy[]> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/grains-copy',\r\n                data: subjectCopy\r\n            };\r\n\r\n        if (!angular.isUndefined(this._listMappedBySubjectCopyId[subjectCopy.id])) {\r\n            deferred.resolve(this._listMappedBySubjectCopyId[subjectCopy.id]);\r\n        } else {\r\n            this._listMappedBySubjectCopyId[subjectCopy.id] = [];\r\n            this._$http(request).then(\r\n                function (response) {\r\n                    angular.forEach(response.data, function (grainCopyObject) {\r\n                        self._listMappedBySubjectCopyId[subjectCopy.id].push(self.instantiateGrainCopy(grainCopyObject));\r\n                    });\r\n                    deferred.resolve(self._listMappedBySubjectCopyId[subjectCopy.id]);\r\n                },\r\n                function () {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des éléments de la copie.');\r\n                }\r\n            );\r\n        }\r\n        \r\n        return deferred.promise;\r\n    };\r\n    \r\n    public instantiateGrainCopy = function (grainCopyObject:any):IGrainCopy {\r\n        var grainCopy = SerializationHelper.toInstance(new GrainCopy(), JSON.stringify(grainCopyObject));\r\n        grainCopy.grain_copy_data = SerializationHelper.toInstance(new GrainCopyData(), grainCopyObject.grain_copy_data);\r\n        return grainCopy;\r\n    };\r\n\r\n    public createGrainCopyList = function(grainScheduledList:IGrainScheduled[]):IGrainCopy[] {\r\n        var grainCopyList = [];\r\n\r\n        angular.forEach(grainScheduledList, function(grainScheduled:IGrainScheduled) {\r\n            grainCopyList.push(this._createFromGrainScheduled(grainScheduled));\r\n        }, this);\r\n\r\n        return grainCopyList;\r\n    };\r\n\r\n    private _createFromGrainScheduled = function(grainScheduled:IGrainScheduled):IGrainCopy {\r\n        var grainCopy = new GrainCopy();\r\n\r\n        grainCopy.grain_type_id = grainScheduled.grain_type_id;\r\n        grainCopy.grain_scheduled_id = grainScheduled.id;\r\n        grainCopy.order_by = grainScheduled.order_by;\r\n        grainCopy.grain_copy_data = new GrainCopyData();\r\n        grainCopy.grain_copy_data.title = grainScheduled.grain_data.title;\r\n        grainCopy.grain_copy_data.max_score = grainScheduled.grain_data.max_score;\r\n        grainCopy.grain_copy_data.statement = grainScheduled.grain_data.statement;\r\n        grainCopy.grain_copy_data.document_list = grainScheduled.grain_data.document_list;\r\n        grainCopy.grain_copy_data.answer_hint = grainScheduled.grain_data.answer_hint;\r\n        grainCopy.grain_copy_data.document_list = grainScheduled.grain_data.document_list;\r\n        \r\n      \r\n        switch (grainScheduled.grain_type_id) {\r\n            case 3:\r\n                grainCopy.grain_copy_data.custom_copy_data = new StatementCustomCopyData();\r\n                grainCopy.grain_copy_data.custom_copy_data.statement = grainScheduled.grain_data.custom_data.statement;\r\n                break;\r\n            case 4:\r\n                grainCopy.grain_copy_data.custom_copy_data = new SimpleAnswerCustomCopyData();\r\n                break;\r\n            case 5:\r\n                grainCopy.grain_copy_data.custom_copy_data = new OpenAnswerCustomCopyData();\r\n                break;\r\n            case 6:\r\n                grainCopy.grain_copy_data.custom_copy_data = new MultipleAnswerCustomCopyData();\r\n                if(grainScheduled.grain_data && grainScheduled.grain_data.custom_data){\r\n                    angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function(correct_answer){\r\n                        grainCopy.grain_copy_data.custom_copy_data.filled_answer_list.push({text : \"\"})\r\n                    });\r\n                }\r\n\r\n                break;\r\n            case 7:\r\n                // QCM\r\n                grainCopy.grain_copy_data.custom_copy_data = new QcmCustomCopyData();\r\n                if(grainScheduled.grain_data && grainScheduled.grain_data.custom_data) {\r\n                    angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function (correct_answer) {\r\n                        grainCopy.grain_copy_data.custom_copy_data.filled_answer_list.push({text: correct_answer.text})\r\n                    });\r\n                }\r\n                break;\r\n            case 8:\r\n                // Association\r\n                grainCopy.grain_copy_data.custom_copy_data = new AssociationCustomCopyData();\r\n                grainCopy.grain_copy_data.custom_copy_data.show_left_column = grainScheduled.grain_data.custom_data.show_left_column;\r\n                if(grainScheduled.grain_data && grainScheduled.grain_data.custom_data) {\r\n                    if (grainScheduled.grain_data.custom_data.show_left_column) {\r\n                        angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function (correct_answer) {\r\n                            grainCopy.grain_copy_data.custom_copy_data.filled_answer_list.push({\r\n                                text_left: correct_answer.text_left,\r\n                                text_right: null\r\n                            })\r\n                        });\r\n                        var rand,\r\n                            notSet,\r\n                            self = this,\r\n                            protectionCompteur;\r\n                        angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function (correct_answer) {\r\n                            notSet = true;\r\n                            protectionCompteur = 0;\r\n                            while (notSet) {\r\n                                rand = self._getRandomIntInclusive(0, grainScheduled.grain_data.custom_data.correct_answer_list.length - 1);\r\n                                if (grainCopy.grain_copy_data.custom_copy_data.possible_answer_list[rand]) {\r\n                                    // one more loop\r\n                                } else {\r\n                                    grainCopy.grain_copy_data.custom_copy_data.possible_answer_list[rand] = {\r\n                                        text_right: correct_answer.text_right\r\n                                    };\r\n                                    notSet = false;\r\n                                }\r\n                                if (protectionCompteur > 100) {\r\n                                    console.error(grainCopy.grain_copy_data.custom_copy_data);\r\n                                    throw \"infiny loop\"\r\n                                } else {\r\n                                    protectionCompteur++;\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        grainCopy.grain_copy_data.custom_copy_data.all_possible_answer = [];\r\n                        angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function (correct_answer) {\r\n                            grainCopy.grain_copy_data.custom_copy_data.filled_answer_list.push({\r\n                                text_left: null,\r\n                                text_right: null\r\n                            });\r\n                            grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.push({\r\n                                item: correct_answer.text_left,\r\n                                rank: 0.5 - Math.random()\r\n                            });\r\n                            grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.push({\r\n                                item: correct_answer.text_right,\r\n                                rank: 0.5 - Math.random()\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                break;\r\n            case 9:\r\n                // Order by\r\n                grainCopy.grain_copy_data.custom_copy_data = new OrderCustomCopyData();\r\n                var newOrder = [],\r\n                    rand,\r\n                    notSet,\r\n                    alreadySet,\r\n                    self = this;\r\n                if(grainScheduled.grain_data && grainScheduled.grain_data.custom_data) {\r\n\r\n                    angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function (correct_answer, key) {\r\n                        notSet = true;\r\n                        while (notSet) {\r\n                            rand = self._getRandomIntInclusive(1, grainScheduled.grain_data.custom_data.correct_answer_list.length);\r\n                            alreadySet = false;\r\n                            angular.forEach(newOrder, function (value) {\r\n                                if (value == rand) {\r\n                                    alreadySet = true;\r\n                                }\r\n                            });\r\n                            if (!alreadySet) {\r\n                                newOrder[key] = rand;\r\n                                notSet = false;\r\n                            }\r\n                        }\r\n                    });\r\n                    angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function (correct_answer, key) {\r\n                        grainCopy.grain_copy_data.custom_copy_data.filled_answer_list.push({\r\n                            text: correct_answer.text,\r\n                            order_by: newOrder[key],\r\n                            index: newOrder[key] - 1,\r\n\r\n                        })\r\n                    });\r\n                }\r\n                break;\r\n                case 10:\r\n                grainCopy.grain_copy_data.custom_copy_data = zonegrain.makeCopy(grainScheduled.grain_data.custom_data, filltext.CustomData);\r\n                break;\r\n                case 12:\r\n                grainCopy.grain_copy_data.custom_copy_data = zonegrain.makeCopy(grainScheduled.grain_data.custom_data, zoneimage.CustomData);\r\n                break;\r\n                case 11:\r\n                grainCopy.grain_copy_data.custom_copy_data = zonegrain.makeCopy(grainScheduled.grain_data.custom_data, zonetext.CustomData);\r\n                break;\r\n            default:\r\n                console.error('specific part of grain copy is not defined when creating from grain scheduled', grainScheduled);\r\n\r\n        }\r\n\r\n        return grainCopy;\r\n    };\r\n\r\n    // On renvoie un entier aléatoire entre une valeur min (incluse)\r\n    // et une valeur max (incluse).\r\n    // Attention : si on utilisait Math.round(), on aurait une distribution\r\n    // non uniforme !\r\n    private _getRandomIntInclusive(min, max) {\r\n        return Math.floor(Math.random() * (max - min +1)) + min;\r\n    }\r\n}\r\n","interface IGrainScheduledService {\r\n    persist(grainScheduled:IGrainScheduled, subject : ISubject):ng.IPromise<IGrainScheduled>;\r\n    getListBySubjectScheduled(subjectScheduled:ISubjectScheduled):ng.IPromise<IGrainScheduled[]>;\r\n    instantiateGrainScheduled(grainScheduledObject:any): IGrainScheduled;\r\n    createGrainScheduledList(grainList:IGrain[]):IGrainScheduled[];\r\n}\r\n\r\nclass GrainScheduledService implements IGrainScheduledService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http'\r\n    ];\r\n\r\n    private _listMappedBySubjectScheduledId:{[subjectScheduledId:number]:IGrainScheduled[]};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._listMappedBySubjectScheduledId = {};\r\n    }\r\n\r\n    public persist = function(grainScheduled:IGrainScheduled, subject : ISubject):ng.IPromise<IGrainScheduled> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/grain-scheduled/' + subject.id,\r\n                data: grainScheduled\r\n            };\r\n        this._$http(request).then(\r\n            function(response) {\r\n                var grainScheduled = self.instantiateGrainScheduled(response.data);\r\n                if(!grainScheduled.subject_scheduled_id){\r\n                    throw \"subject_scheduled_id missing in grain scheduled\";\r\n                }\r\n                if (angular.isUndefined(self._listMappedBySubjectScheduledId[grainScheduled.subject_scheduled_id])) {\r\n                    self._listMappedBySubjectScheduledId[grainScheduled.subject_scheduled_id] = [];\r\n                }\r\n                self._listMappedBySubjectScheduledId[grainScheduled.subject_scheduled_id].push(grainScheduled);\r\n\r\n                deferred.resolve(grainScheduled);\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la création d\\'un élément du sujet programmé.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getListBySubjectScheduled = function(subjectScheduled:ISubjectScheduled):ng.IPromise<IGrainScheduled[]> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/grains-scheduled',\r\n                data: subjectScheduled\r\n            };\r\n\r\n        if (!angular.isUndefined(self._listMappedBySubjectScheduledId[subjectScheduled.id])) {\r\n            deferred.resolve(self._listMappedBySubjectScheduledId[subjectScheduled.id]);\r\n        } else {\r\n            self._listMappedBySubjectScheduledId[subjectScheduled.id] = [];\r\n            this._$http(request).then(\r\n                function (response) {\r\n                    angular.forEach(response.data, function (grainScheduledObject) {\r\n                        self._listMappedBySubjectScheduledId[subjectScheduled.id].push(self.instantiateGrainScheduled(grainScheduledObject));\r\n                    });\r\n                    deferred.resolve(self._listMappedBySubjectScheduledId[subjectScheduled.id]);\r\n                },\r\n                function () {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des éléments du sujet programmé.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public instantiateGrainScheduled = function (grainScheduledObject:any):IGrainScheduled {\r\n        var grainScheduled = SerializationHelper.toInstance(new GrainScheduled(), JSON.stringify(grainScheduledObject));\r\n        grainScheduled.grain_data = SerializationHelper.toInstance(new GrainData(), grainScheduledObject.grain_data);\r\n        return grainScheduled;\r\n    };\r\n\r\n    public createGrainScheduledList = function(grainList:IGrain[]):IGrainScheduled[] {\r\n        var grainScheduledList = [];\r\n        angular.forEach(grainList, function(grain:IGrain) {\r\n            if (grain.grain_type_id > 2) {\r\n                grainScheduledList.push(this._createFromGrain(grain));\r\n            }\r\n        }, this);\r\n        return grainScheduledList;\r\n    };\r\n\r\n    private _createFromGrain = function(grain:IGrain):IGrainScheduled {\r\n        var grainScheduled = new GrainScheduled();\r\n\r\n        grainScheduled.grain_type_id = grain.grain_type_id;\r\n        grainScheduled.order_by = grain.order_by;\r\n        grainScheduled.grain_data = CloneObjectHelper.clone(grain.grain_data, true);\r\n\r\n        return grainScheduled;\r\n    };\r\n}\r\n","interface IGrainService {\r\n    persist(grain:IGrain): ng.IPromise<IGrain>;\r\n    update(grain:IGrain): ng.IPromise<IGrain>;\r\n    updateList(grainList:IGrain[]): ng.IPromise<boolean>;\r\n    remove(grain:IGrain): ng.IPromise<boolean>;\r\n    removeList(grain:IGrain[], subject:ISubject): ng.IPromise<boolean>;\r\n    duplicate(grain:IGrain, subject:ISubject): ng.IPromise<IGrain>;\r\n    duplicateList(grainList:IGrain[], subject:ISubject): ng.IPromise<boolean>;\r\n    getListBySubject(subject:ISubject): ng.IPromise<IGrain[]>;\r\n    instantiateGrain(grainObject:any): IGrain;\r\n}\r\n\r\nclass GrainService implements IGrainService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http',\r\n        'GrainTypeService'\r\n    ];\r\n\r\n    private _listMappedBySubjectId:{ [subjectId: number]: IGrain[] };\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService,\r\n        private _grainTypeService:IGrainTypeService\r\n    ) {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._grainTypeService = _grainTypeService;\r\n        this._listMappedBySubjectId = {};\r\n    }\r\n\r\n    public persist = function (grain:IGrain):ng.IPromise<IGrain> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        if (angular.isUndefined(grain.order_by)) {\r\n            grain = this._setOrderToGrain(grain);\r\n        }\r\n\r\n        var grainObject = angular.copy(grain);\r\n        grainObject.grain_data = JSON.stringify(grainObject.grain_data);\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: 'exercizer/grain/' + grain.subject_id,\r\n            data: grainObject\r\n        };\r\n\r\n        this._$http(request).then(\r\n            function (response) {\r\n                var grain = self.instantiateGrain(response.data);\r\n\r\n                if (angular.isUndefined(self._listMappedBySubjectId[grain.subject_id])) {\r\n                    self._listMappedBySubjectId[grain.subject_id] = [];\r\n                }\r\n\r\n                self._listMappedBySubjectId[grain.subject_id].push(grain);\r\n\r\n                deferred.resolve(grain);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la création de l\\'élément.')\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public update = function (grain:IGrain):ng.IPromise<IGrain> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            grainIndex = self._listMappedBySubjectId[grain.subject_id].indexOf(grain);\r\n\r\n        var grainObject = angular.copy(grain);\r\n        grainObject.grain_data = JSON.stringify(grainObject.grain_data);\r\n\r\n        var request = {\r\n            method: 'PUT',\r\n            url: 'exercizer/grain/' + grain.subject_id,\r\n            data: grainObject\r\n        };\r\n\r\n        this._$http(request).then(\r\n            function (response) {\r\n                var grain = self.instantiateGrain(response.data);\r\n                deferred.resolve(grain);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la mise à jour de l\\'élément.')\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public updateList = function(grainList:IGrain[]):ng.IPromise<boolean>{\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            promises = [];\r\n\r\n        angular.forEach(grainList, function(grain) {\r\n            promises.push(self.update(grain));\r\n        });\r\n\r\n        this._$q.all(promises).then(\r\n            function(data) {\r\n                deferred.resolve(data);\r\n            }, function(err) {\r\n                deferred.reject(err);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public remove = function (grain:IGrain):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        var grainObject = angular.copy(grain);\r\n        grainObject.grain_data = JSON.stringify(grainObject.grain_data);\r\n\r\n        var request = {\r\n            method: 'DELETE',\r\n            url: 'exercizer/grain/' + grain.subject_id,\r\n            data: grainObject\r\n        };\r\n\r\n        this._$http(request).then(\r\n            function () {\r\n                var grainIndex = self._listMappedBySubjectId[grain.subject_id].indexOf(grain);\r\n                \r\n                if (grainIndex !== -1) {\r\n                    self._listMappedBySubjectId[grain.subject_id].splice(grainIndex, 1);\r\n                }\r\n                deferred.resolve(true);\r\n            },\r\n            function () {\r\n                deferred.reject('Un erreur est survenue lors de la suppression de l\\'élément.')\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public removeList = function(grainList:IGrain[]):ng.IPromise<boolean>{\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            promises = [];\r\n\r\n        angular.forEach(grainList, function(grain) {\r\n            promises.push(self.remove(grain));\r\n        });\r\n\r\n        this._$q.all(promises).then(\r\n            function(data) {\r\n                deferred.resolve(data);\r\n            }, function(err) {\r\n                deferred.reject(err);\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public duplicate = function (grain:IGrain, subject:ISubject, rename: boolean = true):ng.IPromise<IGrain> {\r\n\r\n        var duplicatedGrain = CloneObjectHelper.clone(grain, true);\r\n\r\n        if (angular.isUndefined(grain.grain_data)) {\r\n            duplicatedGrain.grain_data = CloneObjectHelper.clone(grain.grain_data, true);\r\n        }\r\n\r\n        duplicatedGrain.id = undefined;\r\n        duplicatedGrain.subject_id = subject.id;\r\n\r\n        if (rename) { // duplicate action in edit subject page\r\n\r\n            if (duplicatedGrain.grain_type_id > 3) {\r\n                if (angular.isUndefined(duplicatedGrain.grain_data.title)) {\r\n                    duplicatedGrain.grain_data.title = this._grainTypeService.getById(duplicatedGrain.grain_type_id).public_name + '_copie';\r\n                } else {\r\n                    duplicatedGrain.grain_data.title += '_copie';\r\n                }\r\n            }\r\n\r\n            duplicatedGrain.order_by = undefined;\r\n            this._setOrderToGrain(duplicatedGrain);\r\n        }\r\n\r\n        return this.persist(duplicatedGrain);\r\n    };\r\n\r\n    public duplicateList = function(grainList:IGrain[], subject:ISubject, rename: boolean = true):ng.IPromise<boolean>{\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        if(grainList.length > 0){\r\n            self.duplicate(grainList[0], subject, rename).then(\r\n                function(){\r\n                    grainList.shift();\r\n                    return self.duplicateList(grainList, subject, rename).then(\r\n                        function(){\r\n                            deferred.resolve();\r\n                        }\r\n                    );\r\n                }\r\n            );\r\n        } else{\r\n            deferred.resolve();\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getListBySubject = function(subject:ISubject):ng.IPromise<IGrain[]> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: !subject.is_library_subject ? 'exercizer/grains/' + subject.id : 'exercizer/subject-library-grains',\r\n                data: subject\r\n            };\r\n\r\n        if (!angular.isUndefined(this._listMappedBySubjectId[subject.id])) {\r\n            deferred.resolve(this._listMappedBySubjectId[subject.id]);\r\n        } else {\r\n            this._listMappedBySubjectId[subject.id] = [];\r\n\r\n            this._$http(request).then(\r\n                function (response) {\r\n                    angular.forEach(response.data, function (grainObject) {\r\n                        self._listMappedBySubjectId[subject.id].push(self.instantiateGrain(grainObject));\r\n                    });\r\n\r\n                    deferred.resolve(self._listMappedBySubjectId[subject.id]);\r\n                },\r\n                function () {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des éléments du sujet.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public instantiateGrain = function (grainObject:any):IGrain {\r\n        var grain = SerializationHelper.toInstance(new Grain(), JSON.stringify(grainObject));\r\n        grain.grain_data = SerializationHelper.toInstance(new GrainData(), grainObject.grain_data);\r\n        return grain;\r\n    };\r\n\r\n    private _setOrderToGrain(grain:IGrain):IGrain {\r\n        var maxOrder:number = null,\r\n            newOrder:number;\r\n\r\n        angular.forEach(this._listMappedBySubjectId[grain.subject_id], function (currentGrain) {\r\n            if (!angular.isUndefined(currentGrain.order_by) && currentGrain.order_by > maxOrder) {\r\n                maxOrder = currentGrain.order_by;\r\n            }\r\n        });\r\n\r\n        if (!angular.isUndefined(maxOrder)) {\r\n            newOrder = Math.ceil(maxOrder) + 1;\r\n        } else {\r\n            newOrder = 1;\r\n        }\r\n\r\n        grain.order_by = newOrder;\r\n\r\n        return grain;\r\n    }\r\n}\r\n","interface IGrainTypeService {\r\n    getList():IGrainType[];\r\n    getById(id:number):IGrainType;\r\n    getPublicName(id:number):string;\r\n    getIllustrationIconName(id:number):string;\r\n    getIllustrationURL(id:number):string;\r\n    instantiateCustomData(grainObject:any, grainTypeId:number):any;\r\n    instantiateCustomCopyData(grainCopyObject:any, grainTypeId:number):any;\r\n}\r\n\r\nclass GrainTypeService implements IGrainTypeService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http'\r\n    ];\r\n\r\n    private _listMappedById: {[id:number]:IGrainType};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._resolve();\r\n    }\r\n\r\n    public getList = function():IGrainType[] {\r\n        return MapToListHelper.toList(this._listMappedById);\r\n    };\r\n    \r\n    public getById = function(id:number):IGrainType {\r\n        return this._listMappedById[id];\r\n    };\r\n\r\n    public getPublicName = function(id:number):string {\r\n        var grainType = this.getById(id);\r\n        \r\n        return grainType.public_name;\r\n    };\r\n\r\n    public getIllustrationIconName = function(id:number):string {\r\n        var illustrationIconName = '';\r\n\r\n        switch (id) {\r\n            case 3:\r\n                illustrationIconName = 'doc-text';\r\n                break;\r\n        }\r\n        \r\n        return illustrationIconName\r\n    };\r\n\r\n    public getIllustrationURL = function(id:number):string {\r\n        var illustrationUrl = '',\r\n            grainType = this.getById(id);\r\n\r\n        if (id > 3) {\r\n            return '/exercizer/public/assets/illustrations/' + grainType.illustration + '.html';\r\n        }\r\n\r\n        return illustrationUrl;\r\n    };\r\n    \r\n    public instantiateCustomData = function(grainObject:any, grainTypeId:number):any {\r\n        var customData = {};\r\n        \r\n        switch (grainTypeId) {\r\n            case 3:\r\n                customData = SerializationHelper.toInstance(new StatementCustomData(), grainObject.grain_data.custom_data);\r\n                break;\r\n            case 4:\r\n                customData = SerializationHelper.toInstance(new SimpleAnswerCustomData(), grainObject.grain_data.custom_data);\r\n                break;\r\n            case 6:\r\n                customData = SerializationHelper.toInstance(new MultipleAnswerCustomData(), grainObject.grain_data.custom_data);\r\n                break;\r\n            case 7:\r\n                customData = SerializationHelper.toInstance(new QcmCustomData(), grainObject.grain_data.custom_data);\r\n                break;\r\n            case 8:\r\n                customData = SerializationHelper.toInstance(new AssociationCustomData(), grainObject.grain_data.custom_data);\r\n                break;\r\n            case 9:\r\n                customData = SerializationHelper.toInstance(new OrderCustomData(), grainObject.grain_data.custom_data);\r\n                break;\r\n            case 10:\r\n                customData = new filltext.CustomData(grainObject.grain_data.custom_data);\r\n                break;\r\n            case 11:\r\n                customData = new zonetext.CustomData(grainObject.grain_data.custom_data);\r\n                break;\r\n            case 12:\r\n                customData = new zoneimage.CustomData(grainObject.grain_data.custom_data);\r\n                break;\r\n        }\r\n        \r\n        return customData;\r\n    };\r\n\r\n    public instantiateCustomCopyData = function(grainCopyObject:any, grainTypeId:number):any {\r\n        var customData = {};\r\n\r\n        switch (grainTypeId) {\r\n            case 3:\r\n                customData = SerializationHelper.toInstance(new StatementCustomCopyData(), grainCopyObject.grain_copy_data.custom_copy_data);\r\n                break;\r\n            case 4:\r\n                customData = SerializationHelper.toInstance(new SimpleAnswerCustomCopyData(), grainCopyObject.grain_copy_data.custom_copy_data);\r\n                break;\r\n            case 6:\r\n                customData = SerializationHelper.toInstance(new MultipleAnswerCustomCopyData(), grainCopyObject.grain_copy_data.custom_copy_data);\r\n                break;\r\n            case 7:\r\n                customData = SerializationHelper.toInstance(new QcmCustomCopyData(), grainCopyObject.grain_copy_data.custom_copy_data);\r\n                break;\r\n            case 8:\r\n                customData = SerializationHelper.toInstance(new AssociationCustomCopyData(), grainCopyObject.grain_copy_data.custom_copy_data);\r\n                break;\r\n            case 9:\r\n                customData = SerializationHelper.toInstance(new OrderCustomCopyData(), grainCopyObject.grain_copy_data.custom_copy_data);\r\n                break;\r\n            case 11:\r\n                customData = new zonetext.CustomData(grainCopyObject.grain_data.custom_data);\r\n                break;\r\n        }\r\n\r\n        return customData;\r\n    };\r\n\r\n    private _resolve = function():ng.IPromise<IGrainType[]> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: 'exercizer/grain-types'\r\n            };\r\n        \r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            deferred.resolve(this.getList());\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n                    \r\n                    angular.forEach(response.data, function (grainTypeObject) {\r\n                        var grainType = SerializationHelper.toInstance(new GrainType(), JSON.stringify(grainTypeObject));\r\n                        self._listMappedById[grainType.id] = grainType;\r\n                    });\r\n\r\n                    deferred.resolve(self.getList());\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des types des éléments du sujet.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n}\r\n","interface IGroupService {\r\n    getList(subject): ng.IPromise<any>;\r\n    getUserFromGroup(group) : ng.IPromise<any>;\r\n    getClassFromStructures(structureId : any) : ng.IPromise<any>;\r\n}\r\n\r\nclass GroupService implements IGroupService {\r\n\r\n    static $inject = [\r\n        '$http',\r\n        '$q'\r\n\r\n    ];\r\n\r\n    private _$http;\r\n    private _$q;\r\n    private _groupBySubjectId;\r\n    private _groupByStructureId;\r\n\r\n    constructor($http, $q){\r\n        this._$http = $http;\r\n        this._$q = $q;\r\n        this._groupBySubjectId = {};\r\n        this._groupByStructureId = {};\r\n    }\r\n\r\n    public getClassFromStructures(structureIdArray){\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            promises = [],\r\n            res = [];\r\n        angular.forEach(structureIdArray, function(structureId){\r\n            if(this._groupByStructureId[structureId]){\r\n                // TODO verifier si le retour est bien un array\r\n                angular.forEach(this._groupByStructureId[structureId], function(resItem){\r\n                    res.push(resItem);\r\n                })\r\n            } else {\r\n                var request = {\r\n                    method: 'GET',\r\n                    url: '/userbook/structure/'+structureId\r\n                };\r\n                promises.push(this._$http(request).then(\r\n                    function(http_response) {\r\n                        self._groupByStructureId[structureId] = http_response.data;\r\n                        angular.forEach(this._groupByStructureId[structureId], function(resItem){\r\n                            res.push(resItem);\r\n                        })\r\n                    }.bind(this),\r\n                    function(err){\r\n                        console.error(err);\r\n                    }\r\n                ));\r\n            }\r\n        }.bind(this));\r\n        this._$q.all(promises).then(function(value) {\r\n            // successCallback\r\n            deferred.resolve(res);\r\n\r\n        }, function(err) {\r\n            console.error(err);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    public getList = function(subject): ng.IPromise<any> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n        if(this._groupBySubjectId[subject.id]){\r\n            deferred.resolve(this._groupBySubjectId[subject.id]);\r\n        } else {\r\n                var request = {\r\n                    method: 'GET',\r\n                    url: 'exercizer/subject/share/json/'+subject.id\r\n                };\r\n            this._$http(request).then(\r\n                function(res) {\r\n                    self._groupBySubjectId[subject.id] = res.data;\r\n                    deferred.resolve(res.data);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récuperation des groupes');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getUserFromGroup(group) : ng.IPromise<any>{\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n            var request = {\r\n                method: 'GET',\r\n                url: '/userbook/visible/users/'+group._id\r\n            };\r\n            this._$http(request).then(\r\n                function(res) {\r\n                    deferred.resolve(res.data);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récuperation des groupes');\r\n                }\r\n            );\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n}\r\n","interface ISubjectCopyService {\r\n    resolve(isTeacher:boolean): ng.IPromise<boolean>;\r\n    persist(subjectCopy:ISubjectCopy):ng.IPromise<ISubjectCopy>;\r\n    update(subjectCopy:ISubjectCopy):ng.IPromise<ISubjectCopy>;\r\n    createFromSubjectScheduled(subjectScheduled:ISubjectScheduled):ISubjectCopy;\r\n    getList():ISubjectCopy[];\r\n    getById(id:number):ISubjectCopy;\r\n}\r\n\r\nclass SubjectCopyService implements ISubjectCopyService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http',\r\n        'GrainScheduledService',\r\n        'GrainCopyService',\r\n        'DateService',\r\n        'SubjectScheduledService',\r\n    ];\r\n\r\n    private _listMappedById:{[id:number]:ISubjectCopy;};\r\n    private _listBySubjectScheduled:ISubjectCopy[];\r\n    private _tmpPreviewData:{subjectScheduled:ISubjectScheduled, subjectCopy:ISubjectCopy, grainScheduledList:IGrainScheduled[], grainCopyList:IGrainCopy[]};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService,\r\n        private _grainScheduledService,\r\n        private _grainCopyService,\r\n        private _dateService,\r\n        private _subjectScheduledService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._grainScheduledService = _grainScheduledService;\r\n        this._grainCopyService = _grainCopyService;\r\n        this._dateService = _dateService;\r\n        this._subjectScheduledService = _subjectScheduledService;\r\n    }\r\n\r\n    public resolve = function(isTeacher:boolean):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: isTeacher ? 'exercizer/subjects-copy-by-subjects-scheduled' : 'exercizer/subjects-copy'\r\n            };\r\n\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n                    self._listBySubjectScheduled = [];\r\n                    var subjectCopy;\r\n                    angular.forEach(response.data, function(subjectCopyObject) {\r\n                        subjectCopy = SerializationHelper.toInstance(new SubjectCopy(), JSON.stringify(subjectCopyObject)) as any;\r\n                        if(!self._listBySubjectScheduled[subjectCopy.subject_scheduled_id]){\r\n                            self._listBySubjectScheduled[subjectCopy.subject_scheduled_id] = [];\r\n                        }\r\n                        self._listBySubjectScheduled[subjectCopy.subject_scheduled_id].push(subjectCopy);\r\n                        self._listMappedById[subjectCopy.id] = subjectCopy;\r\n                    });\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des copies.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public resolve_force = function(isTeacher:boolean):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: isTeacher ? 'exercizer/subjects-copy-by-subjects-scheduled' : 'exercizer/subjects-copy'\r\n            };\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n                    self._listBySubjectScheduled = [];\r\n                    var subjectCopy;\r\n                    angular.forEach(response.data, function(subjectCopyObject) {\r\n                        subjectCopy = SerializationHelper.toInstance(new SubjectCopy(), JSON.stringify(subjectCopyObject)) as any;\r\n                        if(!self._listBySubjectScheduled[subjectCopy.subject_scheduled_id]){\r\n                            self._listBySubjectScheduled[subjectCopy.subject_scheduled_id] = [];\r\n                        }\r\n                        self._listBySubjectScheduled[subjectCopy.subject_scheduled_id].push(subjectCopy);\r\n                        self._listMappedById[subjectCopy.id] = subjectCopy;\r\n                    });\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des copies.');\r\n                }\r\n            );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public resolveBySubjectScheduled_force = function(subjectScheduled: ISubjectScheduled):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subjects-copy-by-subject-scheduled/' + subjectScheduled.id,\r\n                data : subjectScheduled\r\n            };\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listBySubjectScheduled[subjectScheduled.id] = [];\r\n                    var subjectCopy;\r\n                    angular.forEach(response.data, function(subjectCopyObject) {\r\n                        subjectCopy = SerializationHelper.toInstance(new SubjectCopy(), JSON.stringify(subjectCopyObject)) as any;\r\n                        self._listBySubjectScheduled[subjectCopy.subject_scheduled_id].push(subjectCopy);\r\n\r\n                    });\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des copies.');\r\n                }\r\n            );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public persist = function(subjectCopy:ISubjectCopy):ng.IPromise<ISubjectCopy> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subject-copy/' + subjectCopy.subject_scheduled_id,\r\n                data: subjectCopy\r\n            };\r\n        this._$http(request).then(\r\n            function(response) {\r\n                var subjectCopy = SerializationHelper.toInstance(new SubjectCopy(), JSON.stringify(response.data)) as any;\r\n                if(angular.isUndefined(self._listMappedById)){\r\n                    self._listMappedById= {};\r\n                }\r\n                self._listMappedById[subjectCopy.id] = subjectCopy;\r\n                deferred.resolve(subjectCopy);\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la création d une copie.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public update = function(subjectCopy:ISubjectCopy):ng.IPromise<ISubjectCopy> {\r\n        var deferred = this._$q.defer(),\r\n            self = this,\r\n            request = {\r\n                method: 'PUT',\r\n                url: 'exercizer/subject-copy',\r\n                data: subjectCopy\r\n            };\r\n        \r\n            this._$http(request).then(\r\n                function(response) {\r\n                    subjectCopy = SerializationHelper.toInstance(new SubjectCopy(), JSON.stringify(response.data));\r\n                    self.replaceInList(subjectCopy, self._listMappedById, self._listBySubjectScheduled);\r\n                    deferred.resolve(subjectCopy);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la sauvegarde de la copie.');\r\n                }\r\n            );\r\n        \r\n        return deferred.promise;\r\n    };\r\n\r\n    private replaceInList(subjectCopy : ISubjectCopy, listMappedById, listBySubjectScheduled){\r\n        listMappedById[subjectCopy.id] = subjectCopy;\r\n        angular.forEach(listBySubjectScheduled[subjectCopy.subject_scheduled_id], function(copy, key){\r\n            if(copy.id == subjectCopy.id) {\r\n                listBySubjectScheduled[subjectCopy.subject_scheduled_id].splice(key, 1);\r\n            }\r\n        });\r\n        listBySubjectScheduled[subjectCopy.subject_scheduled_id].push(subjectCopy);\r\n    }\r\n\r\n    public createFromSubjectScheduled = function(subjectScheduled:ISubjectScheduled):ISubjectCopy {\r\n        var subjectCopy = new SubjectCopy();\r\n        subjectCopy.subject_scheduled_id = subjectScheduled.id;\r\n        subjectCopy.has_been_started = false;\r\n        return subjectCopy;\r\n    };\r\n\r\n    public getList = function():ISubjectCopy[] {\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            return MapToListHelper.toList(this._listMappedById);\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    public getListBySubjectScheduled = function(subjectScheduled : ISubjectScheduled){\r\n        if(this._listBySubjectScheduled && this._listBySubjectScheduled[subjectScheduled.id]){\r\n            return this._listBySubjectScheduled[subjectScheduled.id]\r\n        } else{\r\n            return [];\r\n        }\r\n    };\r\n\r\n    public copyState = function(copy){\r\n        if(copy.is_corrected){\r\n            return 'is_corrected';\r\n        } else if(copy.is_correction_on_going){\r\n            return 'is_correction_on_going';\r\n        } else if(copy.submitted_date){\r\n            return 'is_submitted';\r\n        } else if(copy.has_been_started){\r\n            return 'has_been_started'\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n\r\n    public copyStateColorClass = function(copy){\r\n        switch (this.copyState(copy)){\r\n            case 'is_corrected':\r\n                return \"color-corrected\";\r\n            case 'is_correction_on_going':\r\n                return \"color-is-correction-on-going\";\r\n            case 'is_submitted':\r\n                return \"color-is-submitted\";\r\n            case 'has_been_started':\r\n                return \"color-has-been-started\";\r\n            default:\r\n                return null;\r\n        }\r\n};\r\n\r\n    public copyStateBackGroundColorClass = function(copy){\r\n        switch (this.copyState(copy)){\r\n            case 'is_corrected':\r\n                return \"background-color-corrected\";\r\n            case 'is_correction_on_going':\r\n                return \"background-color-is-correction-on-going\";\r\n            case 'is_submitted':\r\n                return \"background-color-is-submitted\";\r\n            case 'has_been_started':\r\n                return \"background-color-has-been-started\";\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    public copyStateText = function(copy){\r\n        switch (this.copyState(copy)){\r\n            case 'is_corrected':\r\n                return \"Corrigé\";\r\n            case 'is_correction_on_going':\r\n                return \"En cours de correction\";\r\n            case 'is_submitted':\r\n                return \"Rendu\";\r\n            case 'has_been_started':\r\n                return \"Commencé\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    };\r\n\r\n    public canCorrectACopyAsTeacher = function(subjectScheduled, copy){\r\n        //  a teacher can start correction if\r\n        // the copy is submitted\r\n        // OR\r\n        // due date is past\r\n        // if today = dur_date, the teacher can not correct\r\n        if(subjectScheduled && copy){\r\n            return copy.submitted_date || this._dateService.compare_after(new Date, this._dateService.isoToDate(subjectScheduled.due_date), false);\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    public canPerformACopyAsStudent = function(subjectScheduled, copy){\r\n        // a student can not access to a copy if\r\n        // the subject is over\r\n        // OR\r\n        // the subject have been submitted AND the subject have option one_shot == true;\r\n        // OR\r\n        // the copy is corrected by the teacher;\r\n        if (this._subjectScheduledService.is_over(subjectScheduled) === true) {\r\n            return false;\r\n        } else {\r\n            if (subjectScheduled.is_one_shot_submit && copy.submitted_date) {\r\n                return false;\r\n            } else {\r\n                if(copy.is_correction_on_going || copy.is_corrected){\r\n                    return false\r\n                } else{\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    public canAccessViewAsStudent = function (subjectScheduled, copy) {\r\n        // a student can access to the view of a copy if\r\n        // quelque soit le statut, si la date de rendu est passée et que l'option \"Affichage du résultat automatique pour les élèves\" a été cochée\r\n        // OR\r\n        // le statut de la copie est \"Corrigé\" et la date de rendu est passée\r\n        if(this._subjectScheduledService.is_over(subjectScheduled) === true){\r\n            if(subjectScheduled.has_automatic_display){\r\n                return true;\r\n            } else{\r\n                if(copy.is_corrected){\r\n                    return true;\r\n                } else{\r\n                    return false;\r\n                }\r\n            }\r\n        } else{\r\n            return false\r\n        }\r\n    };\r\n\r\n\r\n\r\n    public getById = function(id:number):ISubjectCopy {\r\n        return this._listMappedById[id];\r\n    };\r\n\r\n    get tmpPreviewData():{subjectScheduled:ISubjectScheduled; subjectCopy:ISubjectCopy; grainScheduledList:IGrainScheduled[]; grainCopyList:IGrainCopy[]} {\r\n        return this._tmpPreviewData;\r\n    }\r\n\r\n    set tmpPreviewData(value:{subjectScheduled:ISubjectScheduled; subjectCopy:ISubjectCopy; grainScheduledList:IGrainScheduled[]; grainCopyList:IGrainCopy[]}) {\r\n        this._tmpPreviewData = value;\r\n    }\r\n\r\n    get listMappedById():{} {\r\n        return this._listMappedById;\r\n    }\r\n}\r\n","interface ISubjectLessonLevelService {\r\n    resolve(): ng.IPromise<boolean>;\r\n    getList(): ISubjectLessonLevel[];\r\n    resolveBySubjectIdList(subjectIds:number[]):ng.IPromise<boolean>;\r\n    getBySubjectId(subjectId:number): ISubjectLessonLevel;\r\n}\r\n\r\nclass SubjectLessonLevelService implements ISubjectLessonLevelService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http'\r\n    ];\r\n\r\n    private _listMappedById: {[id:number]:ISubjectLessonLevel};\r\n    private _listMappedBySubjectId: {[subjectId:number]:ISubjectLessonLevel};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n    }\r\n\r\n    public resolve = function():ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: 'exercizer/subject-lesson-levels'\r\n            };\r\n        \r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n\r\n                    angular.forEach(response.data, function (subjectLessonLevelObject) {\r\n                        var subjectLessonLevel = SerializationHelper.toInstance(new SubjectLessonLevel(), JSON.stringify(subjectLessonLevelObject));\r\n                        self._listMappedById[subjectLessonLevel.id] = subjectLessonLevel;\r\n                    });\r\n\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des niveaux des sujets de la bibliothèque.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getList = function():ISubjectLessonLevel[] {\r\n        return MapToListHelper.toList(this._listMappedById);\r\n    };\r\n    \r\n    public resolveBySubjectIdList = function(subjectIds:number[]):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n        \r\n        \r\n        if (subjectIds.length === 0) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            \r\n            // the resulting ajax result is sorted by subject id\r\n            subjectIds = subjectIds.sort(function (id1:number, id2:number) {\r\n                return id1 - id2;\r\n            });\r\n            \r\n            var request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subject-lesson-levels-by-subject-ids',\r\n                data: {\r\n                    subject_id_list: subjectIds\r\n                }\r\n            };\r\n\r\n            var callBackend = false;\r\n\r\n            if (angular.isUndefined(this._listMappedBySubjectId)) {\r\n                this._listMappedBySubjectId = {};\r\n                callBackend = true;\r\n            } else {\r\n                angular.forEach(subjectIds, function (subjectId:number) {\r\n                    if (!callBackend && angular.isUndefined(this._listMappedBySubjectId[subjectId])) {\r\n                        callBackend = true;\r\n                    }\r\n                }, this);\r\n            }\r\n\r\n            if (!callBackend) {\r\n                deferred.resolve(true);\r\n            } else {\r\n                this._$http(request).then(\r\n                    function (response) {\r\n                        for (var i = 0; i < subjectIds.length; ++i) {\r\n                            var subjectLessonLevelObject = response.data[i];\r\n                            self._listMappedBySubjectId[subjectIds[i]] = SerializationHelper.toInstance(new SubjectLessonLevel(), JSON.stringify(subjectLessonLevelObject));\r\n                        }\r\n\r\n                        deferred.resolve(true);\r\n                    },\r\n                    function () {\r\n                        deferred.reject('Une erreur est survenue lors de la récupération des niveaux des sujets de la bibliothèque.');\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        \r\n        return deferred.promise;\r\n    };\r\n\r\n    public getBySubjectId = function(subjectId:number): ISubjectLessonLevel {\r\n        return this._listMappedBySubjectId[subjectId];\r\n    };\r\n}\r\n","interface ISubjectLessonTypeService {\r\n    resolve(): ng.IPromise<boolean>;\r\n    getList(): ISubjectLessonType[];\r\n    resolveBySubjectIdList(subjectIds:number[]):ng.IPromise<boolean>;\r\n    getBySubjectId(subjectId:number): ISubjectLessonType;\r\n}\r\n\r\nclass SubjectLessonTypeService implements ISubjectLessonTypeService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http'\r\n    ];\r\n\r\n    private _listMappedById: {[id:number]:ISubjectLessonType};\r\n    private _listMappedBySubjectId: {[subjectId:number]:ISubjectLessonType};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n    }\r\n\r\n    public resolve = function():ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: 'exercizer/subject-lesson-types'\r\n            };\r\n\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n\r\n                    angular.forEach(response.data, function (subjectLessonTypeObject) {\r\n                        var subjectLessonType = SerializationHelper.toInstance(new SubjectLessonType(), JSON.stringify(subjectLessonTypeObject));\r\n                        self._listMappedById[subjectLessonType.id] = subjectLessonType;\r\n                    });\r\n\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des matières des sujets de la bibliothèque.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getList = function():ISubjectLessonType[] {\r\n        return MapToListHelper.toList(this._listMappedById);\r\n    };\r\n\r\n    public resolveBySubjectIdList = function(subjectIds:number[]):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        if (subjectIds.length === 0) {\r\n            deferred.resolve(true);\r\n        } else {\r\n\r\n            // the resulting ajax result is sorted by subject id\r\n            subjectIds = subjectIds.sort(function (id1:number, id2:number) {\r\n                return id1 - id2;\r\n            });\r\n\r\n            var request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subject-lesson-types-by-subject-ids',\r\n                data: {\r\n                    subject_id_list: subjectIds\r\n                }\r\n            };\r\n\r\n            var callBackend = false;\r\n\r\n            if (angular.isUndefined(this._listMappedBySubjectId)) {\r\n                this._listMappedBySubjectId = {};\r\n                callBackend = true;\r\n            } else {\r\n                angular.forEach(subjectIds, function (subjectId:number) {\r\n                    if (!callBackend && angular.isUndefined(this._listMappedBySubjectId[subjectId])) {\r\n                        callBackend = true;\r\n                    }\r\n                }, this);\r\n            }\r\n\r\n            if (!callBackend) {\r\n                deferred.resolve(true);\r\n            } else {\r\n                this._$http(request).then(\r\n                    function (response) {\r\n\r\n                        for (var i = 0; i < subjectIds.length; ++i) {\r\n                            var subjectLessonTypeObject = response.data[i];\r\n                            self._listMappedBySubjectId[subjectIds[i]] = SerializationHelper.toInstance(new SubjectLessonType(), JSON.stringify(subjectLessonTypeObject));\r\n                        }\r\n\r\n                        deferred.resolve(true);\r\n                    },\r\n                    function () {\r\n                        deferred.reject('Une erreur est survenue lors de la récupération des niveaux des sujets de la bibliothèque.');\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getBySubjectId = function(subjectId:number): ISubjectLessonType {\r\n        return this._listMappedBySubjectId[subjectId];\r\n    };\r\n}\r\n","interface ISubjectLibraryService {\r\n    publish(subject:ISubject, authorsContributors:string, subjectLessonTypeId:number, subjectLessonLevelId:number, subjectTagList:ISubjectTag[]): ng.IPromise<boolean>;\r\n    search(/*filters:{title:string/*, subjectLessonType:ISubjectLessonType, subjectLessonLevel:ISubjectLessonLevel, subjectTagList:ISubjectTag[]}*/): ng.IPromise<ISubject[]>;\r\n    count(/*filters:{title:string, subjectLessonType:ISubjectLessonType, subjectLessonLevel:ISubjectLessonLevel, subjectTagList:ISubjectTag[]}*/): ng.IPromise<Number>;\r\n    tmpSubjectForPreview:ISubject;\r\n}\r\n\r\nclass SubjectLibraryService implements ISubjectLibraryService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http',\r\n        'GrainService',\r\n        'SubjectTagService'\r\n    ];\r\n    \r\n    private _tmpSubjectForPreview:ISubject;\r\n\r\n    constructor\r\n    (\r\n        private _$q: ng.IQService,\r\n        private _$http: ng.IHttpService,\r\n        private _grainService: IGrainService,\r\n        private _subjectTagService: ISubjectTagService\r\n    ) {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._grainService = _grainService;\r\n        this._subjectTagService = _subjectTagService;\r\n    }\r\n    \r\n    public publish = function(subject:ISubject, authorsContributors:string, subjectLessonTypeId:number, subjectLessonLevelId:number, subjectTagList:ISubjectTag[]): ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        var publishedSubject = CloneObjectHelper.clone(subject, true);\r\n        publishedSubject.id = undefined;\r\n        publishedSubject.owner = undefined;\r\n        publishedSubject.authors_contributors = authorsContributors;\r\n        publishedSubject.is_library_subject = true;\r\n\r\n        var subjectRequest = {\r\n            method: 'POST',\r\n            url: 'exercizer/subject',\r\n            data: publishedSubject\r\n        };\r\n\r\n        this._$http(subjectRequest).then(\r\n            function(response) {\r\n                publishedSubject = SerializationHelper.toInstance(new Subject(), JSON.stringify(response.data));\r\n\r\n                self._grainService.getListBySubject(subject).then(\r\n                    function(grainList: IGrain[]) {\r\n                        var grainListCopy = angular.copy(grainList);\r\n                        self._grainService.duplicateList(grainListCopy, publishedSubject, false).then(\r\n                            function() {\r\n\r\n                                var subjectLibraryMainInformationRequest = {\r\n                                    method: 'POST',\r\n                                    url: 'exercizer/subject-library-main-information/' + publishedSubject.id,\r\n                                    data : {\r\n                                        subject_id: publishedSubject.id,\r\n                                        subject_lesson_type_id: subjectLessonTypeId,\r\n                                        subject_lesson_level_id: subjectLessonLevelId\r\n                                    }\r\n                                };\r\n\r\n                                self._$http(subjectLibraryMainInformationRequest).then(\r\n                                    function() {\r\n\r\n                                        if (subjectTagList.length > 0) {\r\n\r\n                                            var promises = [],\r\n                                                subjectLibraryTagRequest = {\r\n                                                    method: 'POST',\r\n                                                    url: 'exercizer/subject-library-tag/' + publishedSubject.id,\r\n                                                    data: {\r\n                                                        subject_id: publishedSubject.id,\r\n                                                        subject_tag_id: undefined\r\n                                                    }\r\n                                                };\r\n\r\n                                            angular.forEach(subjectTagList, function (subjectTag:ISubjectTag) {\r\n\r\n                                                if (angular.isUndefined(subjectTag.id)) {\r\n                                                    promises.push(self._subjectTagService.persist(subjectTag));\r\n                                                }\r\n\r\n                                            });\r\n\r\n                                            if (promises.length > 0) {\r\n                                                self._$q.all(promises).then(\r\n                                                    function (createdSubjectTagList:ISubjectTag[]) {\r\n\r\n                                                        promises = [];\r\n\r\n                                                        angular.forEach(subjectTagList, function (subjectTag:ISubjectTag) {\r\n                                                            if (!angular.isUndefined(subjectTag.id)) {\r\n                                                                var newSubjectLibraryTagRequest = angular.copy(subjectLibraryTagRequest);\r\n                                                                newSubjectLibraryTagRequest.data.subject_tag_id = subjectTag.id;\r\n\r\n                                                                promises.push(self._$http(newSubjectLibraryTagRequest));\r\n                                                            }\r\n                                                        });\r\n\r\n                                                        angular.forEach(createdSubjectTagList, function (subjectTag:ISubjectTag) {\r\n                                                            var newSubjectLibraryTagRequest = angular.copy(subjectLibraryTagRequest);\r\n                                                            newSubjectLibraryTagRequest.data.subject_tag_id = subjectTag.id;\r\n\r\n                                                            promises.push(self._$http(newSubjectLibraryTagRequest));\r\n                                                        });\r\n\r\n                                                        self._$q.all(promises).then(\r\n                                                            function () {\r\n                                                                deferred.resolve(true);\r\n                                                            },\r\n                                                            function () {\r\n                                                                deferred.reject('Une erreur est survenue lors de la publication du sujet : impossible d\\'associer les tags.');\r\n                                                            }\r\n                                                        );\r\n\r\n                                                    }, function (err) {\r\n                                                        deferred.reject(err);\r\n                                                    }\r\n                                                );\r\n                                            } else {\r\n                                                promises = [];\r\n\r\n                                                angular.forEach(subjectTagList, function (subjectTag:ISubjectTag) {\r\n                                                    if (!angular.isUndefined(subjectTag.id)) {\r\n                                                        var newSubjectLibraryTagRequest = angular.copy(subjectLibraryTagRequest);\r\n                                                        newSubjectLibraryTagRequest.data.subject_tag_id = subjectTag.id;\r\n\r\n                                                        promises.push(self._$http(newSubjectLibraryTagRequest));\r\n                                                    }\r\n                                                });\r\n\r\n                                                self._$q.all(promises).then(\r\n                                                    function () {\r\n                                                        deferred.resolve(true);\r\n                                                    },\r\n                                                    function () {\r\n                                                        deferred.reject('Une erreur est survenue lors de la publication du sujet : impossible d\\'associer les tags.');\r\n                                                    }\r\n                                                );\r\n                                            }\r\n                                        } else {\r\n                                            deferred.resolve(true);\r\n                                        }\r\n                                    },\r\n                                    function() {\r\n                                        deferred.reject('Une erreur est survenue lors de la publication du sujet : impossible d\\'associer la matière ou le niveau.');\r\n                                    }\r\n                                );\r\n\r\n                            },\r\n                            function() {\r\n                                deferred.reject('Une erreur est survenue lors de la duplication des éléments du sujet à publier.');\r\n                            }\r\n                        );\r\n                    },\r\n                    function() {\r\n                        deferred.reject('Une erreur est survenue lors de la récupération des éléments du sujet à publier.')\r\n                    }\r\n                );\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la publication du sujet.');\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public search = function(/*filters:{title:string, subjectLessonType:ISubjectLessonType, subjectLessonLevel:ISubjectLessonLevel, subjectTagList:ISubjectTag[]}*/): ng.IPromise<ISubject[]> {\r\n        var deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subjects-for-library', \r\n                data: /*this._buildRequestData(filters)*/ {}\r\n            };\r\n\r\n        this._$http(request).then(\r\n            function(response) {\r\n                var subjectList = [];\r\n                angular.forEach(response.data, function(subjectObject) {\r\n                    subjectList.push(SerializationHelper.toInstance(new Subject(), JSON.stringify(subjectObject)));\r\n                });\r\n                deferred.resolve(subjectList);\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la récupération des sujets de la bibliothèque.');\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public count = function(/*filters:{title:string, subjectLessonType:ISubjectLessonType, subjectLessonLevel:ISubjectLessonLevel, subjectTagList:ISubjectTag[]}*/): ng.IPromise<Number> {\r\n        var deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/count-subjects-for-library',\r\n                data: /*this._buildRequestData(filters)*/ {}\r\n            };\r\n\r\n        this._$http(request).then(\r\n            function(response) {\r\n                deferred.resolve(parseInt(response.data));\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la récupération des sujets de la bibliothèque.');\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    private _buildRequestData(filters:{title:string, subjectLessonType:ISubjectLessonType, subjectLessonLevel:ISubjectLessonLevel, subjectTagList:ISubjectTag[]}) {\r\n        var requestData = {};\r\n        \r\n        if (!angular.isUndefined(filters)) {\r\n\r\n            if (!angular.isUndefined(filters.title)) {\r\n                requestData['subject_title'] = filters.title;\r\n            }\r\n\r\n            if (!angular.isUndefined(filters.subjectLessonType)) {\r\n                requestData['subject_lesson_type_id'] = filters.subjectLessonType.id;\r\n            }\r\n\r\n            if (!angular.isUndefined(filters.subjectLessonLevel)) {\r\n                requestData['subject_lesson_level_id'] = filters.subjectLessonLevel.id;\r\n            }\r\n\r\n            if (!angular.isUndefined(filters.subjectTagList) && filters.subjectTagList.length > 0) {\r\n                requestData['subject_tags'] = [];\r\n\r\n                angular.forEach(filters.subjectTagList, function (subjectTag:ISubjectTag) {\r\n                    requestData['subject_tags'].push(subjectTag.id)\r\n                });\r\n            }\r\n        }\r\n\r\n        return requestData;\r\n    };\r\n    \r\n    get tmpSubjectForPreview():ISubject {\r\n        return this._tmpSubjectForPreview;\r\n    }\r\n\r\n    set tmpSubjectForPreview(value:ISubject) {\r\n        this._tmpSubjectForPreview = value;\r\n    }\r\n}\r\n","interface ISubjectScheduledService {\r\n    resolve(isTeacher:boolean): ng.IPromise<boolean>;\r\n    persist(subjectScheduled:ISubjectScheduled):ng.IPromise<ISubjectScheduled>;\r\n    createFromSubject(subject:ISubject):ISubjectScheduled;\r\n    getList():ISubjectScheduled[];\r\n    getById(id:number):ISubjectScheduled;\r\n    currentSubjectScheduledId:number;\r\n}\r\n\r\nclass SubjectScheduledService implements ISubjectScheduledService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http',\r\n        'GrainService',\r\n        'GrainScheduledService',\r\n        'DateService'\r\n    ];\r\n\r\n    private _listMappedById:{[id:number]:ISubjectScheduled;};\r\n    private _currentSubjectScheduledId:number;\r\n    private _today;\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService,\r\n        private _grainService:IGrainService,\r\n        private _grainScheduledService:IGrainScheduledService,\r\n        private _dateService : IDateService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._grainService = _grainService;\r\n        this._grainScheduledService = _grainScheduledService;\r\n        this._dateService = _dateService;\r\n        this._today = new Date()\r\n    }\r\n\r\n    public resolve = function(isTeacher:boolean):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: isTeacher ? 'exercizer/subjects-scheduled' : 'exercizer/subjects-scheduled-by-subjects-copy'\r\n            };\r\n\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n                    var subjectScheduled;\r\n                    angular.forEach(response.data, function(subjectScheduledObject) {\r\n                        subjectScheduled = SerializationHelper.toInstance(new SubjectScheduled(), JSON.stringify(subjectScheduledObject)) as any;\r\n                        subjectScheduled.scheduled_at = JSON.parse(subjectScheduled.scheduled_at);\r\n                        self._listMappedById[subjectScheduled.id] = subjectScheduled;\r\n                    });\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des sujets programmés.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public persist = function(subjectScheduled:ISubjectScheduled):ng.IPromise<ISubjectScheduled> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subject-scheduled/'+ subjectScheduled.subject_id,\r\n                data: subjectScheduled\r\n            };\r\n\r\n        this._$http(request).then(\r\n            function(response) {\r\n                var subjectScheduled = SerializationHelper.toInstance(new SubjectScheduled(), JSON.stringify(response.data)) as any;\r\n                subjectScheduled.scheduled_at = JSON.parse(subjectScheduled.scheduled_at);\r\n                if(angular.isUndefined(self._listMappedById)){\r\n                    self._listMappedById= {};\r\n                }\r\n                self._listMappedById[subjectScheduled.id] = subjectScheduled;\r\n                deferred.resolve(subjectScheduled);\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la sauvegarde du sujet programmé.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public createFromSubject = function(subject:ISubject):ISubjectScheduled {\r\n        var subjectScheduled = new SubjectScheduled();\r\n\r\n        subjectScheduled.subject_id = subject.id;\r\n        subjectScheduled.title = subject.title;\r\n        subjectScheduled.description = subject.description;\r\n        subjectScheduled.picture = subject.picture;\r\n        subjectScheduled.max_score = subject.max_score;\r\n\r\n        return subjectScheduled;\r\n    };\r\n\r\n    public getList = function():ISubjectScheduled[] {\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            return MapToListHelper.toList(this._listMappedById);\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    public getById = function(id:number):ISubjectScheduled {\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            return this._listMappedById[id];\r\n        }\r\n    };\r\n\r\n    get currentSubjectScheduledId():number {\r\n        return this._currentSubjectScheduledId;\r\n    }\r\n\r\n    set currentSubjectScheduledId(value:number) {\r\n        this._currentSubjectScheduledId = value;\r\n    }\r\n\r\n    get listMappedById():{} {\r\n        return this._listMappedById;\r\n    }\r\n\r\n    public is_over(subjectScheduled : ISubjectScheduled) : boolean {\r\n        // false (3) means if the date is equal, the subject is not over\r\n        return this._dateService.compare_after(this._today, this._dateService.isoToDate(subjectScheduled.due_date), false)\r\n    }\r\n}\r\n","interface ISubjectService {\r\n    resolve(force?:boolean): ng.IPromise<boolean>;\r\n    persist(subject: ISubject): ng.IPromise<ISubject>;\r\n    update(subject: ISubject, updateMaxScore:boolean): ng.IPromise<ISubject>;\r\n    remove(subject: ISubject): ng.IPromise<boolean>;\r\n    removeList(subjectList: ISubject[]):ng.IPromise<boolean>\r\n    duplicate(subject: ISubject): ng.IPromise<ISubject>;\r\n    getById(id: number): ISubject;\r\n    deleteSubjectChildrenOfFolder(folder: IFolder);\r\n    getList(): ISubject[];\r\n    getListByFolderId(folderId);\r\n    getById(id: number): ISubject;\r\n    getByIdEvenDeleted (id:number) : ng.IPromise<any>\r\n}\r\n\r\nclass SubjectService implements ISubjectService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http',\r\n        'GrainService'\r\n    ];\r\n\r\n    private _listMappedById: { [id: number]: ISubject; };\r\n\r\n    constructor\r\n    (\r\n        private _$q: ng.IQService,\r\n        private _$http: ng.IHttpService,\r\n        private _grainService: IGrainService\r\n    ) {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n        this._grainService = _grainService;\r\n    }\r\n\r\n    public resolve = function(force:boolean = false): ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: 'exercizer/subjects'\r\n            };\r\n\r\n        if (!angular.isUndefined(this._listMappedById) && !force) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n                    var subject;\r\n                    angular.forEach(response.data, function(subjectObject) {\r\n                        subject = SerializationHelper.toInstance(new Subject(), JSON.stringify(subjectObject)) as any;\r\n                        self._afterPullBack(subject);\r\n                        self._listMappedById[subject.id] = subject;\r\n                    });\r\n                    deferred.resolve(true);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération de vos sujets.');\r\n                }\r\n            );\r\n        }\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public persist = function(subject: ISubject): ng.IPromise<ISubject> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subject',\r\n                data: subject\r\n            };\r\n\r\n        if (angular.isUndefined(this._listMappedById)) {\r\n            this._listMappedById = {};\r\n        }\r\n\r\n        if(subject.id){\r\n            self._beforePushBack(subject);\r\n        }\r\n        this._$http(request).then(\r\n            function(response) {\r\n                var subject = SerializationHelper.toInstance(new Subject(), JSON.stringify(response.data)) as any;\r\n                self._afterPullBack(subject);\r\n\r\n                self._listMappedById[subject.id] = subject;\r\n                deferred.resolve(subject);\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la création du sujet.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public update = function(subject: ISubject, updateMaxScore:boolean = false): ng.IPromise<ISubject> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'PUT',\r\n                url: 'exercizer/subject/' + subject.id,\r\n                data: subject\r\n            };\r\n\r\n        this._grainService.getListBySubject(subject).then(\r\n            function(grainList){\r\n                if (updateMaxScore) {\r\n                    subject.max_score = 0;\r\n                    angular.forEach(grainList, function (grain:IGrain) {\r\n                        if (grain.grain_type_id > 3) {\r\n                            subject.max_score += grain.grain_data.max_score;\r\n                        }\r\n                    })\r\n                }\r\n                if(self._beforePushBack(subject)){\r\n\r\n                    self._$http(request).then(\r\n                        function(response) {\r\n                            //var newSubject = SerializationHelper.toInstance(new Subject(), JSON.stringify(response.data));\r\n                            self._afterPullBack(subject);\r\n                            deferred.resolve(subject);\r\n                        },\r\n                        function() {\r\n                            deferred.reject('Une erreur est survenue lors de la sauvegarde du sujet.');\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        );\r\n        return deferred.promise;\r\n\r\n    };\r\n\r\n    public remove = function(subject: ISubject): ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'DELETE',\r\n                url: 'exercizer/subject/' + subject.id,\r\n                data: subject\r\n            };\r\n        self. _beforePushBack(subject);\r\n        this._grainService.getListBySubject(subject).then(\r\n            function(grainList) {\r\n                var grainListCopy = angular.copy(grainList);\r\n                self._grainService.removeList(grainListCopy, subject).then(\r\n                    function() {\r\n                        self._$http(request).then(\r\n                            function() {\r\n                                delete self._listMappedById[subject.id];\r\n                                deferred.resolve(true);\r\n                            },\r\n                            function() {\r\n                                deferred.reject('Une erreur est survenue lors de la suppression du sujet.');\r\n                            }\r\n                        );\r\n                    },\r\n                    function() {\r\n                        deferred.reject('Une erreur est survenue lors de la suppression des éléments sujet.');\r\n                    });\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la récupération des éléments du sujets.');\r\n            });\r\n\r\n\r\n        return deferred.promise;\r\n    };\r\n\r\n    public removeList = function(subjectList: ISubject[]):ng.IPromise<boolean> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n        if (subjectList.length === 0) {\r\n            deferred.resolve(true);\r\n        } else {\r\n            var subject = subjectList[0];\r\n            this.remove(subject).then(\r\n                function () {\r\n                    subjectList.splice(0, 1);\r\n                    if (subjectList.length > 0) {\r\n                        self.removeList(subjectList, subject);\r\n                    } else {\r\n                        deferred.resolve(true);\r\n                    }\r\n                },\r\n                function () {\r\n                    deferred.reject('Une erreur est survenue lors de la suppression des sujets.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public duplicate = function(subject: ISubject, folder: IFolder = undefined): ng.IPromise<ISubject> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n        // duplicate subject\r\n        var duplicatedSubject = CloneObjectHelper.clone(subject, true);\r\n        //clean subject\r\n        duplicatedSubject.id = undefined;\r\n        duplicatedSubject.owner = undefined;\r\n        duplicatedSubject.owner_username = undefined;\r\n        duplicatedSubject.authors_contributors = undefined;\r\n        duplicatedSubject.is_library_subject = false;\r\n        if(folder){\r\n            duplicatedSubject.folder_id = folder.id;\r\n        } else{\r\n            duplicatedSubject.folder_id = null;\r\n        }\r\n        duplicatedSubject.title += '_copie';\r\n        // persist subject\r\n        this._beforePushBack(duplicatedSubject);\r\n        this.persist(duplicatedSubject).then(\r\n            // after persist subject, duplicate grain\r\n            function(duplicatedSubject: ISubject) {\r\n                self._grainService.getListBySubject(subject).then(\r\n                    function(grainList: IGrain[]) {\r\n                        var grainListCopy = angular.copy(grainList);\r\n                        self._grainService.duplicateList(grainListCopy, duplicatedSubject, false).then(\r\n                            function() {\r\n                                deferred.resolve(duplicatedSubject);\r\n                            },\r\n                            function() {\r\n                                deferred.reject('Une erreur est survenue lors de la duplication des éléments du sujet à copier');\r\n                            }\r\n                        )\r\n                    },\r\n                    function() {\r\n                        deferred.reject('Une erreur est survenue lors de la récupération des éléments du sujet à copier.')\r\n                    }\r\n                )},\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la duplication du sujet à copier.');\r\n            });\r\n        return deferred.promise;\r\n    };\r\n\r\n    public duplicateList = function(list,parentFolder){\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            promises = [];\r\n        angular.forEach(list, function(value) {\r\n            promises.push(self.duplicate(value, parentFolder));\r\n        });\r\n        this._$q.all(promises).then(\r\n            function(data) {\r\n                deferred.resolve(data);\r\n            }, function(err) {\r\n                console.error(err);\r\n                deferred.reject(err);\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getList = function(): ISubject[] {\r\n        if (!angular.isUndefined(this._listMappedById)) {\r\n            return MapToListHelper.toList(this._listMappedById);\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    public getListByFolderId(folderId:number): { [id: number]: ISubject; } {\r\n        var self = this,\r\n            listByFolderId:{ [id: number]: ISubject; } = {};\r\n        angular.forEach(self._listMappedById, function(subject:ISubject) {\r\n            if (subject.folder_id == folderId) {\r\n                listByFolderId[subject.id] = subject;\r\n            }\r\n        });\r\n        return listByFolderId;\r\n    }\r\n\r\n    public getById = function(id:number):ISubject {\r\n        return this._listMappedById[id];\r\n    };\r\n\r\n    public getByIdEvenDeleted = function(id:number) : ng.IPromise<any> {\r\n        var deferred = this._$q.defer(), res;\r\n        this.getSubjectListEvenDeleted().then(function(subjectList){\r\n            angular.forEach(subjectList, function(subjectObject){\r\n                if(id == subjectObject.id){\r\n                    res = SerializationHelper.toInstance(new Subject(), JSON.stringify(subjectObject)) as any;\r\n                }\r\n            });\r\n            if(res){\r\n                deferred.resolve(res);\r\n            } else{\r\n                deferred.reject(\"subject non trouvé\");\r\n            }\r\n\r\n        }.bind(this));\r\n        return deferred.promise;\r\n\r\n    };\r\n\r\n    private getSubjectListEvenDeleted = function() : ng.IPromise<any> {\r\n        var deferred = this._$q.defer(),\r\n        request = {\r\n            method: 'GET',\r\n            url: 'exercizer/subjects-all'\r\n        };\r\n        this._$http(request).then(\r\n            function(data) {\r\n                deferred.resolve(data.data);\r\n            },\r\n            function() {\r\n                deferred.reject('Une erreur est survenue lors de la reciperation de tous les sujets.');\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    /**\r\n     * remove all subject in a folder\r\n     * @param folder\r\n     */\r\n    public deleteSubjectChildrenOfFolder = function(folder: IFolder) {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n        var promises = [];\r\n        angular.forEach(this._listMappedById, function(value, key) {\r\n            if (value.folder_id === folder.id) {\r\n                promises.push(self.remove(value));\r\n            }\r\n        });\r\n        this._$q.all(promises).then(\r\n            // success\r\n            // results: an array of data objects from each deferred.resolve(data) call\r\n            function(results) {\r\n                deferred.resolve();\r\n            }\r\n        );\r\n        return deferred.promise;\r\n    };\r\n\r\n    /**\r\n     * set folder id to a subject and update the subject\r\n     * @param subject\r\n     * @param folderId\r\n     */\r\n    public setFolderId = function(subject :ISubject,folderId: number){\r\n        subject.folder_id = folderId;\r\n        this.update(subject);\r\n    };\r\n\r\n    private _beforePushBack(subject){\r\n        delete subject.myRights;\r\n        if(subject.owner && subject.owner.userId){\r\n            subject.owner = subject.owner.userId;\r\n            return true\r\n        } else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private _afterPullBack(subject){\r\n        subject.owner = { userId: subject.owner };\r\n        Behaviours.findRights('exercizer', subject);\r\n\r\n    }\r\n}","interface ISubjectTagService {\r\n    resolve(): ng.IPromise<ISubjectTag[]>;\r\n    persist(subjectTag:ISubjectTag): ng.IPromise<ISubjectTag>;\r\n    resolveBySubjectId(subjectId:number): ng.IPromise<ISubjectTag[]>;\r\n    getListBySubjectId(subjectId:number): ISubjectTag[];\r\n}\r\n\r\nclass SubjectTagService implements ISubjectTagService {\r\n\r\n    static $inject = [\r\n        '$q',\r\n        '$http'\r\n    ];\r\n\r\n    private _listMappedById: {[id:number]:ISubjectTag};\r\n    private _listMappedBySubjectId: {[subjectId:number]:ISubjectTag[]};\r\n\r\n    constructor\r\n    (\r\n        private _$q:ng.IQService,\r\n        private _$http:ng.IHttpService\r\n    )\r\n    {\r\n        this._$q = _$q;\r\n        this._$http = _$http;\r\n    }\r\n\r\n    public resolve = function():ng.IPromise<ISubjectTag[]> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'GET',\r\n                url: 'exercizer/subject-tags'\r\n            };\r\n\r\n        // force the reloads of subjects tags (cause of weid issue when persisting a tag -> the local list is not updated, even if the code tell so).\r\n        /*if (!angular.isUndefined(this._listMappedById)) {\r\n            deferred.resolve(MapToListHelper.toList(this._listMappedById));\r\n        } else {*/\r\n            this._$http(request).then(\r\n                function(response) {\r\n                    self._listMappedById = {};\r\n\r\n                    angular.forEach(response.data, function (subjectTagObject) {\r\n                        var subjectTag = SerializationHelper.toInstance(new SubjectTag(), JSON.stringify(subjectTagObject));\r\n                        self._listMappedById[subjectTag.id] = subjectTag;\r\n                    });\r\n\r\n                    deferred.resolve(MapToListHelper.toList(self._listMappedById));\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des tags des sujets de la bibliothèque.');\r\n                }\r\n            );\r\n        //}\r\n        return deferred.promise;\r\n    };\r\n\r\n    public persist = function(subjectTag:ISubjectTag):ng.IPromise<ISubjectTag> {\r\n        var self = this,\r\n            deferred = this._$q.defer();\r\n\r\n        var subjectTagObject = angular.copy(subjectTag);\r\n\r\n        var request = {\r\n            method: 'POST',\r\n            url: 'exercizer/subject-tag',\r\n            data: subjectTagObject\r\n        };\r\n\r\n        this._$http(request).then(\r\n            function (response) {\r\n                var subjectTag = SerializationHelper.toInstance(new SubjectTag(), JSON.stringify(response.data));\r\n\r\n                if (angular.isUndefined(self._listMappedById[subjectTag.id])) {\r\n                    self._listMappedById[subjectTag.id] = [];\r\n                }\r\n\r\n                self._listMappedById[subjectTag.id].push(subjectTag);\r\n\r\n                deferred.resolve(subjectTag);\r\n            },\r\n            function () {\r\n                deferred.reject('Une erreur est survenue lors de la création du tag.')\r\n            }\r\n        );\r\n\r\n        return deferred.promise;\r\n    };\r\n    \r\n    public resolveBySubjectId(subjectId:number):ng.IPromise<ISubjectTag[]> {\r\n        var self = this,\r\n            deferred = this._$q.defer(),\r\n            request = {\r\n                method: 'POST',\r\n                url: 'exercizer/subject-tags-by-subject-id',\r\n                data: {\r\n                    subject_id: subjectId\r\n                }\r\n            };\r\n\r\n        if (angular.isUndefined(this._listMappedBySubjectId)) {\r\n            this._listMappedBySubjectId = {};\r\n        }\r\n\r\n        if (!angular.isUndefined(this._listMappedBySubjectId[subjectId])) {\r\n            deferred.resolve(this._listMappedBySubjectId[subjectId]);\r\n        } else {\r\n            this._$http(request).then(\r\n                function(response) {\r\n\r\n                    self._listMappedBySubjectId[subjectId] = [];\r\n\r\n                    angular.forEach(response.data, function (subjectTagObject) {\r\n                        var subjectTag = SerializationHelper.toInstance(new SubjectTag(), JSON.stringify(subjectTagObject));\r\n                        self._listMappedBySubjectId[subjectId].push(subjectTag);\r\n                    });\r\n\r\n                    deferred.resolve(self._listMappedBySubjectId[subjectId]);\r\n                },\r\n                function() {\r\n                    deferred.reject('Une erreur est survenue lors de la récupération des tags des sujets de la bibliothèque.');\r\n                }\r\n            );\r\n        }\r\n        return deferred.promise;\r\n    };\r\n\r\n    public getListBySubjectId = function(subjectId:number):ISubjectTag[] {\r\n        return this._listMappedBySubjectId[subjectId] ? this._listMappedBySubjectId[subjectId] : [];\r\n    };\r\n}\r\n\r\n","interface IFolder {\r\n    id: number;\r\n    parent_folder_id: number;\r\n    owner: string;\r\n    created: string;\r\n    modified: string;\r\n    label: string;\r\n}\r\n\r\nclass Folder implements IFolder {\r\n\r\n    id: number;\r\n    parent_folder_id: number;\r\n    owner: string;\r\n    created: string;\r\n    modified: string;\r\n    label: string;\r\n\r\n    constructor\r\n        (\r\n        id?: number,\r\n        parent_folder_id?: number,\r\n        owner?: string,\r\n        created?: string,\r\n        modified?: string,\r\n        label?: string\r\n        ) {\r\n        this.id = id;\r\n        this.parent_folder_id = parent_folder_id;\r\n        this.owner = owner;\r\n        this.created = created;\r\n        this.modified = modified;\r\n        this.label = label;\r\n    }\r\n}\r\n","interface IGrain {\r\n    id: number;\r\n    subject_id: number;\r\n    grain_type_id: number;\r\n    created: string;\r\n    modified: string;\r\n    order_by: number;\r\n    grain_data: IGrainData;\r\n}\r\n\r\nclass Grain implements IGrain {\r\n\r\n    id: number;\r\n    subject_id: number;\r\n    grain_type_id: number;\r\n    created: string;\r\n    modified: string;\r\n    order_by: number;\r\n    grain_data: IGrainData;\r\n\r\n    constructor\r\n    (\r\n        id?: number,\r\n        subject_id?: number,\r\n        grain_type_id?: number,\r\n        created?: string,\r\n        modified?: string,\r\n        order_by?: number,\r\n        grain_data?: IGrainData\r\n    ) {\r\n        this.id = id;\r\n        this.subject_id = subject_id;\r\n        this.grain_type_id = grain_type_id;\r\n        this.created = created;\r\n        this.modified = modified;\r\n        this.order_by = order_by;\r\n        this.grain_data = grain_data;\r\n    }\r\n}\r\n","interface IGrainCopy {\r\n    id:number;\r\n    subject_copy_id:number;\r\n    grain_type_id:number;\r\n    grain_scheduled_id:number;\r\n    created:string;\r\n    modified:string;\r\n    order_by:number;\r\n    final_score:number;\r\n    calculated_score:number;\r\n    comment:string;\r\n    grain_copy_data:IGrainCopyData;\r\n}\r\n\r\nclass GrainCopy implements IGrainCopy {\r\n\r\n    id:number;\r\n    subject_copy_id:number;\r\n    grain_type_id:number;\r\n    grain_scheduled_id:number;\r\n    created:string;\r\n    modified:string;\r\n    order_by:number;\r\n    final_score:number;\r\n    calculated_score:number;\r\n    comment:string;\r\n    grain_copy_data:IGrainCopyData;\r\n\r\n\r\n    constructor\r\n    (\r\n        id?:number, \r\n        subject_copy_id?:number, \r\n        grain_type_id?:number, \r\n        grain_scheduled_id?:number, \r\n        created?:string, \r\n        modified?:string, \r\n        order_by?:number, \r\n        final_score?:number, \r\n        calculated_score?:number, \r\n        comment?:string, \r\n        grain_copy_data?:IGrainCopyData\r\n    ) \r\n    {\r\n        this.id = id;\r\n        this.subject_copy_id = subject_copy_id;\r\n        this.grain_type_id = grain_type_id;\r\n        this.grain_scheduled_id = grain_scheduled_id;\r\n        this.created = created;\r\n        this.modified = modified;\r\n        this.order_by = order_by;\r\n        this.final_score = final_score;\r\n        this.calculated_score = calculated_score;\r\n        this.comment = comment;\r\n        this.grain_copy_data = grain_copy_data;\r\n    }\r\n}","interface IGrainCopyData {\r\n    title:string;\r\n    max_score:number;\r\n    statement:string;\r\n    document_list:IGrainDocument[];\r\n    answer_hint:string;\r\n    custom_copy_data:any;\r\n}\r\n\r\nclass GrainCopyData implements IGrainCopyData {\r\n\r\n    title:string;\r\n    max_score:number;\r\n    statement:string;\r\n    document_list:IGrainDocument[];\r\n    answer_hint:string;\r\n    custom_copy_data:any;\r\n\r\n    constructor\r\n    (\r\n        title?:string,\r\n        max_score?:number,\r\n        statement?:string,\r\n        document_list?:IGrainDocument[],\r\n        answer_hint?:string,\r\n        custom_copy_data?:any\r\n    )\r\n    {\r\n        this.title = title;\r\n        this.max_score = max_score;\r\n        this.statement = statement;\r\n        this.document_list = document_list;\r\n        this.answer_hint = answer_hint;\r\n        this.custom_copy_data = custom_copy_data;\r\n    }\r\n}\r\n","interface IGrainData {\r\n    title:string;\r\n    max_score:number;\r\n    statement:string;\r\n    document_list:IGrainDocument[];\r\n    answer_hint:string;\r\n    answer_explanation:string;\r\n    custom_data:any;\r\n}\r\n\r\nclass GrainData implements IGrainData {\r\n\r\n    title:string;\r\n    max_score:number;\r\n    statement:string;\r\n    document_list:IGrainDocument[];\r\n    answer_hint:string;\r\n    answer_explanation:string;\r\n    custom_data:any;\r\n\r\n    constructor\r\n    (\r\n        title?:string,\r\n        max_score?:number,\r\n        statement?:string,\r\n        document_list?:IGrainDocument[],\r\n        answer_hint?:string,\r\n        answer_explanation?:string,\r\n        custom_data?:any\r\n    )\r\n    {\r\n        this.title = title;\r\n        this.max_score = max_score;\r\n        this.statement = statement;\r\n        this.document_list = document_list;\r\n        this.answer_hint = answer_hint;\r\n        this.answer_explanation = answer_explanation;\r\n        this.custom_data = custom_data;\r\n    }\r\n}","interface IGrainDocument {\r\n    id:number;\r\n    owner:string;\r\n    ownerName:string;\r\n    created:string;\r\n    title:string;\r\n    name:string;\r\n    path:string;\r\n}\r\n\r\nclass GrainDocument implements IGrainDocument {\r\n\r\n    id:number;\r\n    owner:string;\r\n    ownerName:string;\r\n    created:string;\r\n    title:string;\r\n    name:string;\r\n    path:string;\r\n\r\n    constructor\r\n    (\r\n        id?:number,\r\n        owner?:string,\r\n        ownerName?:string,\r\n        created?:string,\r\n        title?:string,\r\n        name?:string,\r\n        path?:string\r\n    )\r\n    {\r\n        this.id = id;\r\n        this.owner = owner;\r\n        this.ownerName = ownerName;\r\n        this.created = created;\r\n        this.title = title;\r\n        this.name = name;\r\n        this.path = path;\r\n    }\r\n}","interface IGrainScheduled {\r\n    id:number;\r\n    subject_scheduled_id:number;\r\n    grain_type_id:number;\r\n    created:string;\r\n    order_by:number;\r\n    grain_data:IGrainData;\r\n}\r\n\r\nclass GrainScheduled implements IGrainScheduled {\r\n\r\n    id:number;\r\n    subject_scheduled_id:number;\r\n    grain_type_id:number;\r\n    created:string;\r\n    order_by:number;\r\n    grain_data:IGrainData;\r\n\r\n    constructor\r\n    (\r\n        id?:number,\r\n        subject_scheduled_id?:number,\r\n        grain_type_id?:number,\r\n        order_by?:number,\r\n        created?:string,\r\n        grain_data?:IGrainData\r\n    )\r\n    {\r\n        this.id = id;\r\n        this.subject_scheduled_id = subject_scheduled_id;\r\n        this.grain_type_id = grain_type_id;\r\n        this.created = created;\r\n        this.order_by = order_by;\r\n        this.grain_data = grain_data;\r\n    }\r\n\r\n}","interface IGrainType {\r\n    id:number;\r\n    name:string;\r\n    public_name:string;\r\n    illustration:string;\r\n    is_in_list:boolean;\r\n}\r\n\r\nclass GrainType implements IGrainType {\r\n\r\n    id:number;\r\n    name:string;\r\n    public_name:string;\r\n    illustration:string;\r\n    is_in_list:boolean;\r\n\r\n    constructor\r\n    (\r\n        id?:number,\r\n        name?:string,\r\n        public_name?:string,\r\n        illustration?:string,\r\n        is_in_list?:boolean\r\n    )\r\n    {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.public_name = public_name;\r\n        this.illustration = illustration;\r\n        this.is_in_list = is_in_list;\r\n    }\r\n}","interface ISubject {\r\n    id:number;\r\n    folder_id:number;\r\n    original_subject_id:number;\r\n    owner:string;\r\n    owner_username:string;\r\n    created:string;\r\n    modified:string;\r\n    title:string;\r\n    description:string;\r\n    picture:string;\r\n    max_score:number;\r\n    authors_contributors:string;\r\n    is_library_subject:boolean;\r\n    is_deleted:boolean;\r\n}\r\n\r\nclass Subject implements ISubject {\r\n\r\n    id:number;\r\n    folder_id:number;\r\n    original_subject_id:number;\r\n    owner:string;\r\n    owner_username:string;\r\n    created:string;\r\n    modified:string;\r\n    title:string;\r\n    description:string;\r\n    picture:string;\r\n    max_score:number;\r\n    authors_contributors:string;\r\n    is_library_subject:boolean;\r\n    is_deleted:boolean;\r\n\r\n    constructor\r\n    (\r\n        id?:number,\r\n        folder_id?:number,\r\n        original_subject_id?:number,\r\n        owner?:string,\r\n        owner_username?:string,\r\n        created?:string,\r\n        modified?:string,\r\n        title?:string,\r\n        description?:string,\r\n        picture?:string,\r\n        max_score?:number,\r\n        authors_contributors?:string,\r\n        is_library_subject?:boolean,\r\n        is_deleted?:boolean\r\n    )\r\n    {\r\n        this.id = id;\r\n        this.folder_id = folder_id;\r\n        this.original_subject_id = original_subject_id;\r\n        this.owner = owner;\r\n        this.owner_username = owner_username;\r\n        this.created = created;\r\n        this.modified = modified;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.picture = picture;\r\n        this.max_score = max_score;\r\n        this.authors_contributors = authors_contributors;\r\n        this.is_library_subject = is_library_subject;\r\n        this.is_deleted = is_deleted;\r\n    }\r\n}","interface ISubjectCopy {\r\n    id:number;\r\n    subject_scheduled_id:number;\r\n    owner:string;\r\n    owner_username:string;\r\n    created:string;\r\n    modified:string;\r\n    final_score:number;\r\n    calculated_score:number;\r\n    comment:string;\r\n    has_been_started:boolean;\r\n    submitted_date:string;\r\n    is_correction_on_going:boolean;\r\n    is_corrected:boolean;\r\n    is_deleted:boolean;\r\n}\r\n\r\nclass SubjectCopy implements  ISubjectCopy {\r\n\r\n    id:number;\r\n    subject_scheduled_id:number;\r\n    owner:string;\r\n    owner_username:string;\r\n    created:string;\r\n    modified:string;\r\n    final_score:number;\r\n    calculated_score:number;\r\n    comment:string;\r\n    has_been_started:boolean;\r\n    submitted_date:string;\r\n    is_correction_on_going:boolean;\r\n    is_corrected:boolean;\r\n    is_deleted:boolean;\r\n\r\n    constructor\r\n    (\r\n        id?:number,\r\n        subject_scheduled_id?:number,\r\n        owner?:string,\r\n        owner_username?:string,\r\n        created?:string,\r\n        modified?:string,\r\n        final_score?:number,\r\n        calculated_score?:number,\r\n        comment?:string,\r\n        has_been_started?:boolean,\r\n        submitted_date?:string,\r\n        is_correction_on_going?:boolean,\r\n        is_corrected?:boolean,\r\n        is_deleted?:boolean\r\n    )\r\n    {\r\n        this.id = id;\r\n        this.subject_scheduled_id = subject_scheduled_id;\r\n        this.owner = owner;\r\n        this.owner_username = owner_username;\r\n        this.created = created;\r\n        this.modified = modified;\r\n        this.final_score = final_score;\r\n        this.calculated_score = calculated_score;\r\n        this.comment = comment;\r\n        this.has_been_started = has_been_started;\r\n        this.submitted_date = submitted_date;\r\n        this.is_correction_on_going = is_correction_on_going;\r\n        this.is_corrected = is_corrected;\r\n        this.is_deleted = is_deleted;\r\n    }\r\n}","interface ISubjectLessonLevel {\r\n    id: number;\r\n    label: string;\r\n}\r\n\r\nclass SubjectLessonLevel implements ISubjectLessonLevel {\r\n\r\n    id: number;\r\n    label: string;\r\n\r\n    constructor\r\n    (\r\n        id?: number,\r\n        label?: string\r\n    ) {\r\n        this.id = id;\r\n        this.label = label;\r\n    }\r\n}\r\n","interface ISubjectLessonType {\r\n    id: number;\r\n    label: string;\r\n}\r\n\r\nclass SubjectLessonType implements ISubjectLessonType {\r\n\r\n    id: number;\r\n    label: string;\r\n\r\n    constructor\r\n    (\r\n        id?: number,\r\n        label?: string\r\n    ) {\r\n        this.id = id;\r\n        this.label = label;\r\n    }\r\n}\r\n","interface ISubjectScheduled {\r\n    id:number;\r\n    subject_id:number;\r\n    owner:string;\r\n    owner_username:string;\r\n    created:string;\r\n    modified: string;\r\n    title:string;\r\n    description:string;\r\n    picture:string;\r\n    max_score:number;\r\n    begin_date:string;\r\n    due_date:string;\r\n    estimated_duration:string;\r\n    is_over:boolean;\r\n    is_one_shot_submit:boolean;\r\n    has_automatic_display: boolean;\r\n    is_deleted:boolean;\r\n    scheduled_at : string[];\r\n}\r\n\r\nclass SubjectScheduled implements ISubjectScheduled {\r\n\r\n    id:number;\r\n    subject_id:number;\r\n    owner:string;\r\n    owner_username:string;\r\n    created:string;\r\n    modified: string;\r\n    title:string;\r\n    description:string;\r\n    picture:string;\r\n    max_score:number;\r\n    begin_date:string;\r\n    due_date:string;\r\n    estimated_duration:string;\r\n    is_over:boolean;\r\n    has_automatic_display: boolean;\r\n    is_one_shot_submit:boolean;\r\n    is_deleted:boolean;\r\n    scheduled_at: string[];\r\n    \r\n    constructor\r\n    (\r\n        id?:number,\r\n        subject_id?:number,\r\n        owner?:string,\r\n        owner_username?:string,\r\n        created?:string,\r\n        modified?: string,\r\n        title?:string,\r\n        description?:string,\r\n        picture?:string,\r\n        max_score?:number,\r\n        begin_date?:string,\r\n        due_date?:string,\r\n        estimated_duration?:string,\r\n        is_over?:boolean,\r\n        has_automatic_display?:boolean,\r\n        is_one_shot_submit?:boolean,\r\n        is_deleted?:boolean,\r\n        scheduled_at? : string[]\r\n    )\r\n    {\r\n        this.id = id;\r\n        this.subject_id = subject_id;\r\n        this.owner = owner;\r\n        this.owner_username = owner_username;\r\n        this.created = created;\r\n        this.modified = modified;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.picture = picture;\r\n        this.max_score = max_score;\r\n        this.begin_date = begin_date;\r\n        this.due_date = due_date;\r\n        this.estimated_duration = estimated_duration;\r\n        this.is_over = is_over;\r\n        this.has_automatic_display = has_automatic_display;\r\n        this.is_one_shot_submit = is_one_shot_submit;\r\n        this.is_deleted = is_deleted;\r\n        this.scheduled_at = scheduled_at || [];\r\n    }\r\n}","interface ISubjectTag {\r\n    id: number;\r\n    label: string;\r\n}\r\n\r\nclass SubjectTag implements ISubjectTag {\r\n\r\n    id: number;\r\n    label: string;\r\n\r\n    constructor\r\n    (\r\n        id?: number,\r\n        label?: string\r\n    ) {\r\n        this.id = id;\r\n        this.label = label;\r\n    }\r\n}\r\n","class CloneObjectHelper {\r\n    static clone( originalObject , circular, withAshKey = false) {\r\n        // First persist an empty object with\r\n        // same prototype of our original source\r\n\r\n        var propertyIndex, descriptor, keys, current, nextSource, indexOf,\r\n            copies = [{source: originalObject, target: Object.create(Object.getPrototypeOf(originalObject))}],\r\n            cloneObject = copies[0].target,\r\n            sourceReferences = [originalObject],\r\n            targetReferences = [cloneObject];\r\n\r\n        // First in, first out\r\n        while (current = copies.shift())\t// jshint ignore:line\r\n        {\r\n            keys = Object.getOwnPropertyNames(current.source);\r\n\r\n            for (propertyIndex = 0; propertyIndex < keys.length; propertyIndex++) {\r\n\r\n                // Save the source's descriptor\r\n                descriptor = Object.getOwnPropertyDescriptor(current.source, keys[propertyIndex]);\r\n\r\n                // angular hack\r\n                if (keys[propertyIndex] === '$$hashKey' && !withAshKey) {\r\n                    continue;\r\n                }\r\n\r\n                if (!descriptor.value || typeof descriptor.value !== 'object') {\r\n                    Object.defineProperty(current.target, keys[propertyIndex], descriptor);\r\n                    continue;\r\n                }\r\n\r\n                nextSource = descriptor.value;\r\n                descriptor.value = Array.isArray(nextSource) ? [] : Object.create(Object.getPrototypeOf(nextSource));\r\n\r\n                if (circular) {\r\n                    indexOf = sourceReferences.indexOf(nextSource);\r\n\r\n                    if (indexOf !== -1) {\r\n                        // The source is already referenced, just assign reference\r\n                        descriptor.value = targetReferences[indexOf];\r\n                        Object.defineProperty(current.target, keys[propertyIndex], descriptor);\r\n                        continue;\r\n                    }\r\n\r\n                    sourceReferences.push(nextSource);\r\n                    targetReferences.push(descriptor.value);\r\n                }\r\n\r\n                Object.defineProperty(current.target, keys[propertyIndex], descriptor);\r\n\r\n                copies.push({source: nextSource, target: descriptor.value});\r\n            }\r\n        }\r\n\r\n        return cloneObject;\r\n    }\r\n}","class CompareStringHelper {\r\n    static compare(string1:string, string2:string):boolean {\r\n        var result = false;\r\n        \r\n        if (typeof string1 !=='undefined' && typeof string2 !== 'undefined' && string1 && string2) {\r\n            string1 = string1.replace(/\\s/g, '').toLowerCase();\r\n            string2 = string2.replace(/\\s/g, '').toLowerCase();\r\n            \r\n            result = string1 === string2;\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}","class MapToListHelper {\r\n    static toList(map) {\r\n        return Object.keys(map).map(function (v) {\r\n            return map[v];\r\n        });\r\n    }\r\n}","class ScoreHelper {\r\n    static format(score:number):number {\r\n        if(typeof score !== 'undefined') {\r\n            return Math.round(score * 100)/100;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}","class SerializationHelper {\r\n    static toInstance<T>(obj:T, json:string):T {\r\n        var jsonObj = JSON.parse(json);\r\n\r\n        if (typeof obj['fromJSON'] === 'function') {\r\n            obj['fromJSON'](jsonObj);\r\n        }\r\n        else {\r\n            for (var propName in jsonObj) {\r\n                obj[propName] = jsonObj[propName]\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    }\r\n}","class StringISOHelper {\r\n    static toISO(str:string):string {\r\n        if (typeof str !== 'undefined' && str) {\r\n            str = str.trim();\r\n\r\n            if (!str.replace(/\\s/g, '').length) {\r\n                str = undefined;\r\n            }\r\n        } else if (!str) {\r\n            str = undefined;\r\n        }\r\n\r\n        return str;\r\n    }\r\n}\r\n","directives.push(\r\n    {\r\n        name: 'digitsInputRestrict',\r\n        injections: [ () => {\r\n            return {\r\n                restrict: 'A',\r\n                link:(scope:any, element:any) => {\r\n                  var inputElement = element[0], \r\n                      inputValue = inputElement.value;\r\n\r\n                    inputElement.addEventListener('keyup', function() {\r\n\r\n                        var digits = inputElement.value.replace(/[^0-9.]/g, '');\r\n\r\n                        if (digits.split('.').length > 2) {\r\n                            digits = digits.substring(0, digits.length - 1);\r\n                        }\r\n                        \r\n                        if (digits.indexOf('.') !== -1 && digits.indexOf('.') === digits.length -1) {\r\n                            return;\r\n                        }\r\n\r\n                        if (digits !== inputValue) {\r\n                            inputElement.value = digits;\r\n                            inputValue = inputElement.value;\r\n                        } else {\r\n                            inputElement.value = inputValue;\r\n                        }\r\n                    });\r\n\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'editAssociation',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/association/templates/edit-association.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.addAnswer = function(text_left = '', text_right = '') {\r\n                        var newAnswer = {\r\n                            text_left : text_left,\r\n                            text_right : text_right\r\n                        };\r\n\r\n                        scope.grain.grain_data.custom_data.correct_answer_list.push(newAnswer);\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    if (angular.isUndefined(scope.grain.grain_data.custom_data)) {\r\n                        scope.grain.grain_data.custom_data = new AssociationCustomData();\r\n                        scope.addAnswer('Réponse Gauche', 'Réponse Droite');\r\n                    }\r\n\r\n                    scope.deleteAnswer = function(answer){\r\n                        var index = scope.grain.grain_data.custom_data.correct_answer_list.indexOf(answer);\r\n                        if(index !== -1){\r\n                            scope.grain.grain_data.custom_data.correct_answer_list.splice(index, 1);\r\n                        }\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.updateGrain = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performAssociation',\r\n        injections: ['DragService', (DragService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/association/templates/perform-association.html',\r\n                link: (scope:any) => {\r\n\r\n                    scope.data = {\r\n                        hover : []\r\n                    };\r\n\r\n                    scope.setHover = function(index , right = false, left = false){\r\n                        angular.forEach(scope.data.hover, function(current_hover, key){\r\n                            current_hover.bool = (key == index);\r\n                            current_hover.left = left && (key == index);\r\n                            current_hover.right = right && (key == index);\r\n                        });\r\n                        scope.$apply();\r\n\r\n                    };\r\n\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n\r\n\r\n                    scope.drag = function (possible_answer, $originalEvent) {\r\n                        try {\r\n                            $originalEvent.dataTransfer.setData('application/json', JSON.stringify(possible_answer));\r\n                        } catch (e) {\r\n                            $originalEvent.dataTransfer.setData('Text', JSON.stringify(possible_answer));\r\n                        }\r\n                    };\r\n\r\n                    scope.dropTo = function (targetItem, $originalEvent) {\r\n                        scope.setHover(null);\r\n                        var dataField = DragService.dropConditionFunction(targetItem, $originalEvent);\r\n                        var originalItem = JSON.parse($originalEvent.dataTransfer.getData(dataField));\r\n                        targetItem.text_right = angular.copy(originalItem.text_right);\r\n                        scope.resetPossibleAnswerLeftList();\r\n                        scope.$apply();\r\n                        scope.updateGrainCopy();\r\n                    };\r\n\r\n                    scope.dropToLeft = function (targetItem, $originalEvent) {\r\n                        scope.setHover(null);\r\n                        if(targetItem.text_left){\r\n                            scope.grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.push({\r\n                                item : angular.copy(targetItem.text_left),\r\n                                rank : 0.5 - Math.random()\r\n                            });\r\n                        }\r\n                        var dataField = DragService.dropConditionFunction(targetItem, $originalEvent);\r\n                        var originalItem = JSON.parse($originalEvent.dataTransfer.getData(dataField));\r\n                        targetItem.text_left = angular.copy(originalItem.item);\r\n                        //scope.resetPossibleAnswerLeftList();\r\n                        scope.$apply();\r\n                        scope.all_possible_answer_pop(targetItem.text_left);\r\n                        scope.updateGrainCopy();\r\n                    };\r\n\r\n                    scope.dropToRight = function (targetItem, $originalEvent) {\r\n                        scope.setHover(null);\r\n                        if(targetItem.text_right){\r\n                            scope.grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.push({\r\n                                item : angular.copy(targetItem.text_right),\r\n                                rank : 0.5 - Math.random()\r\n                            });\r\n                        }\r\n                        var dataField = DragService.dropConditionFunction(targetItem, $originalEvent);\r\n                        var originalItem = JSON.parse($originalEvent.dataTransfer.getData(dataField));\r\n                        targetItem.text_right = angular.copy(originalItem.item);\r\n                        //scope.resetPossibleAnswerLeftList();\r\n                        scope.$apply();\r\n                        scope.all_possible_answer_pop(targetItem.text_right);\r\n                        scope.updateGrainCopy();\r\n                    };\r\n\r\n                    scope.all_possible_answer_pop = function(item, left, right){\r\n                        var index = null;\r\n                        angular.forEach(scope.grainCopy.grain_copy_data.custom_copy_data.all_possible_answer, function(current, key){\r\n                            if(item == current.item){\r\n                                index = key;\r\n                            }\r\n                        });\r\n                        if(index !== null){\r\n                            scope.grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.splice(index, 1);\r\n                            scope.$apply();\r\n                        } else{\r\n                            console.error('not found');\r\n                        }\r\n                    };\r\n\r\n                    scope.dropConditionFunction = function (targetItem, $originalEvent, index, right , left ) {\r\n                        scope.setHover(index, right, left);\r\n                        return DragService.dropConditionFunction(targetItem, $originalEvent);\r\n                    };\r\n\r\n                    scope.deleteFilledAnswer = function(filled_answer){\r\n                        filled_answer.text_right = null;\r\n                        scope.resetPossibleAnswerLeftList();\r\n                    };\r\n\r\n                    scope.deleteFilledAnswerLeft = function(filled_answer){\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.push({\r\n                            item : angular.copy(filled_answer.text_left),\r\n                            rank : 0.5 - Math.random()\r\n                        });\r\n                        filled_answer.text_left= null;\r\n\r\n                    };\r\n\r\n                    scope.deleteFilledAnswerRight = function(filled_answer){\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data.all_possible_answer.push({\r\n                            item : angular.copy(filled_answer.text_right),\r\n                            rank : 0.5 - Math.random()\r\n                        });\r\n                        filled_answer.text_right = null;\r\n\r\n                    };\r\n\r\n                    scope.resetPossibleAnswerLeftList = function(){\r\n                        scope.possible_answer_left_list = angular.copy(scope.grainCopy.grain_copy_data.custom_copy_data.possible_answer_list);\r\n                        var indexToRemove;\r\n                        angular.forEach(scope.grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function(current_filled_answer){\r\n                            if(current_filled_answer.text_right){\r\n                                indexToRemove = null;\r\n                                angular.forEach(scope.possible_answer_left_list, function(current_possible_left_answer, index){\r\n                                    if(current_filled_answer.text_right == current_possible_left_answer.text_right){\r\n                                        indexToRemove = index;\r\n                                    }\r\n                                });\r\n                                if(indexToRemove !== null){\r\n                                    scope.possible_answer_left_list.splice(indexToRemove, 1);\r\n                                }\r\n                            }\r\n                        });\r\n                    };\r\n                    scope.resetPossibleAnswerLeftList();\r\n\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewAssociation',\r\n        injections: ['AssociationService', (AssociationService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/association/templates/view-association.html',\r\n                link: (scope:any) => {\r\n\r\n                    var result = AssociationService.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.isCorrect = result.answers_result;\r\n                    if (angular.isUndefined(scope.grainCopy.calculated_score) || scope.grainCopy.calculated_score === null) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","class AssociationService implements IAutomaticCorrection {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public automaticCorrection(grainScheduled:IGrainScheduled, grainCopy:IGrainCopy):{calculated_score:number, answers_result:{}} {\r\n        var numberGoodAnswer:number = 0,\r\n            atLeastOneError = false,\r\n            isCorrectReturnArray = {},\r\n            correct_answer;\r\n\r\n        console.log('grainScheduled', grainScheduled);\r\n        console.log('grainCopy', grainCopy);\r\n\r\n        if (grainScheduled.grain_data.custom_data.show_left_column) {\r\n            angular.forEach(grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function (filled_answer, key) {\r\n                correct_answer = grainScheduled.grain_data.custom_data.correct_answer_list[key];\r\n                if (\r\n                    CompareStringHelper.compare(filled_answer.text_left, correct_answer.text_left)\r\n                    &&\r\n                    CompareStringHelper.compare(filled_answer.text_right, correct_answer.text_right)\r\n                ) {\r\n                    isCorrectReturnArray[key] = true;\r\n                    if (grainScheduled.grain_data.custom_data.no_error_allowed && atLeastOneError) {\r\n                        // do not incremented\r\n                    } else {\r\n                        numberGoodAnswer++\r\n                    }\r\n                } else {\r\n                    isCorrectReturnArray[key] = false;\r\n                    atLeastOneError = true;\r\n                    if (grainScheduled.grain_data.custom_data.no_error_allowed) {\r\n                        numberGoodAnswer = 0;\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n\r\n            angular.forEach(grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function(correct_answer, key){\r\n                var isGood = false;\r\n                angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function(filled_answer){\r\n\r\n                    if(CompareStringHelper.compare(filled_answer.text_left, correct_answer.text_left)\r\n                        && CompareStringHelper.compare(filled_answer.text_right, correct_answer.text_right)\r\n                        ||\r\n                        CompareStringHelper.compare(filled_answer.text_right, correct_answer.text_left)\r\n                        && CompareStringHelper.compare(filled_answer.text_left, correct_answer.text_right)\r\n                    ){\r\n                        isGood = true;\r\n                    }\r\n                });\r\n\r\n                if (\r\n                    isGood\r\n                ) {\r\n                    isCorrectReturnArray[key] = true;\r\n                    if (grainScheduled.grain_data.custom_data.no_error_allowed && atLeastOneError) {\r\n                        // do not incremented\r\n                    } else {\r\n                        numberGoodAnswer++\r\n                    }\r\n                } else {\r\n                    isCorrectReturnArray[key] = false;\r\n                    atLeastOneError = true;\r\n                    if (grainScheduled.grain_data.custom_data.no_error_allowed) {\r\n                        numberGoodAnswer = 0;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        // computation score\r\n        var numberPossibleAnswer:number = grainScheduled.grain_data.custom_data.correct_answer_list.length;\r\n        var calculated_score = (numberGoodAnswer / numberPossibleAnswer) * grainScheduled.grain_data.max_score;\r\n        if (isNaN(calculated_score)) {\r\n            throw \"calculated score is not a number\"\r\n        }\r\n        return {\r\n            calculated_score: calculated_score,\r\n            answers_result: isCorrectReturnArray\r\n\r\n        };\r\n    }\r\n}","interface IAssociationCustomCopyData {\r\n    filled_answer_list:any[];\r\n    possible_answer_list:any[];\r\n    show_left_column:boolean;\r\n}\r\n\r\nclass AssociationCustomCopyData implements IAssociationCustomCopyData {\r\n\r\n    filled_answer_list:any[];\r\n    possible_answer_list: any[];\r\n    show_left_column: boolean;\r\n\r\n    constructor\r\n    (\r\n        filled_answer_list?:any[],\r\n        possible_answer_list?:any[],\r\n        show_left_column?:boolean\r\n    )\r\n    {\r\n        this.filled_answer_list = filled_answer_list || [];\r\n        this.possible_answer_list = possible_answer_list || [];\r\n        this.show_left_column = show_left_column !== false;\r\n    }\r\n}","interface IAssociationCustomData {\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n    show_left_column:boolean;\r\n}\r\n\r\nclass AssociationCustomData implements IAssociationCustomData {\r\n\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n    show_left_column:boolean;\r\n\r\n    constructor\r\n    (\r\n        correct_answer_list?:any[],\r\n        no_error_allowed?:boolean,\r\n        show_left_column?:boolean\r\n    )\r\n    {\r\n        this.correct_answer_list = correct_answer_list || [];\r\n        this.no_error_allowed = no_error_allowed || false;\r\n        this.show_left_column = show_left_column || true;\r\n    }\r\n}","let addEditorOption = () => {\r\n    let RTE = (window as any).RTE;\r\n\r\n    RTE.baseToolbarConf.option('filltext', function (instance) {\r\n        return {\r\n            template: '<i ng-click=\"editZone();\" tooltip=\"editor.option.filltext\"></i>' +\r\n            '<lightbox show=\"displayState.editZone\" on-close=\"displayState.editZone = false;\">' +\r\n            '<div ng-include=\"path\"></div>' +\r\n            '</lightbox>',\r\n            link: function (scope, element, attributes) {\r\n                scope.$watch(() => {\r\n                    return scope.$eval('customData.answersType');\r\n                }, (newVal) => {\r\n                    scope.path = '/exercizer/public/app/components/grain/filltext/templates/editor/' + newVal + '.html';\r\n                });\r\n\r\n                scope.addElement = function (zone: filltext.TextZone) {\r\n                    instance.addState(instance.editZone.html());\r\n\r\n                    let el = $(\r\n                        instance.compile(\r\n                            $('<span><fill-zone zone-id=\"' + zone.id + '\"></fill-zone>&nbsp;</span>')[0].outerHTML\r\n                        )(scope)\r\n                    );\r\n\r\n                    if (instance.selection.range) {\r\n                        instance.selection.range.deleteContents();\r\n                        instance.selection.range.insertNode(el[0]);\r\n                    }\r\n                    else {\r\n                        instance.selection.editZone.append(el);\r\n                    }\r\n\r\n                    instance.trigger('contentupdated');\r\n                    setTimeout(() => $('editor').trigger('save'), 500);\r\n                };\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\ndirectives.push(\r\n    {\r\n        name: 'editFillText',\r\n        injections: [() => {\r\n            addEditorOption();\r\n\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/filltext/templates/edit.html',\r\n                link:(scope:any, element: any) => {\r\n                    scope.displayState = {\r\n                        editZone: false,\r\n                        editedTextZone: {\r\n                            options: []\r\n                        } as filltext.TextZone\r\n                    };\r\n\r\n                    element.on('editor-blur, save', 'editor', () => {\r\n                        var dropZones = [];\r\n\r\n                        element.find('[contenteditable] fill-zone').each((i, zoneEl) => {\r\n                            if ($(zoneEl).find('input').length === 0) {\r\n                                zoneEl.remove();\r\n                            }\r\n                        });\r\n\r\n                        scope.customData.zones.forEach((zone) => {\r\n                            let found = false;\r\n                            element.find('[contenteditable] fill-zone').each((i, zoneEl) => {\r\n                                if (parseInt($(zoneEl).attr('zone-id')) === zone.id) {\r\n                                    found = true;\r\n                                }\r\n                            });\r\n                            if (!found) {\r\n                                dropZones.push(zone);\r\n                            }\r\n                        });\r\n                        dropZones.forEach((zone) => {\r\n                            scope.customData.removeZone(zone);\r\n                        });\r\n                        \r\n                        scope.updateGrain();\r\n                    });\r\n\r\n                    if (!scope.grain.grain_data.custom_data) {\r\n                        scope.grain.grain_data.custom_data = new filltext.CustomData();\r\n                    }\r\n                    else {\r\n                        scope.grain.grain_data.custom_data = new filltext.CustomData(scope.grain.grain_data.custom_data);\r\n                    }\r\n\r\n                    scope.customData = scope.grain.grain_data.custom_data;\r\n\r\n                    scope.updateGrain = () => {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.editZone = (zone: number) => {\r\n                        scope.displayState.editZone = true;\r\n                        if(zone !== undefined){\r\n                            scope.displayState.editedTextZone = _.findWhere(scope.customData.zones, { id: zone });\r\n                        }\r\n                        else{\r\n                            scope.displayState.editedTextZone = {\r\n                                answer: '',\r\n                                options: []\r\n                            };\r\n                        }\r\n                    };\r\n\r\n                    scope.addZone = () => {\r\n                        scope.grain.grain_data.custom_data.addZone(scope.displayState.editedTextZone);\r\n                        scope.displayState.editZone = false;\r\n                        scope.updateGrain();\r\n                        return scope.displayState.editedTextZone;\r\n                    };\r\n\r\n                    scope.addOption = (container: zonetext.CustomData | zonetext.TextZone) => {\r\n                        container.options.push(scope.displayState.newOption);\r\n                        scope.displayState.editedTextZone.answer = scope.displayState.newOption;\r\n                        scope.updateGrain();\r\n                        scope.displayState.newOption = '';\r\n                    };\r\n\r\n                    scope.removeOption = (container: zonetext.CustomData | zonetext.TextZone, option: string) => {\r\n                        let i = container.options.indexOf(option);\r\n                        container.options.splice(i, 1);\r\n                    };\r\n\r\n                    scope.switchTo = (newType: string) => {\r\n                        let customData = scope.grain.grain_data.custom_data as zonetext.CustomData;\r\n                        if (newType === 'drag') {\r\n                            customData.options = [];\r\n                            customData.zones.forEach((zone) => {\r\n                                customData.options.push(zone.answer);\r\n                            });\r\n                        }\r\n                        if (newType === 'list') {\r\n                            if(customData.options.length > 0){\r\n                                customData.zones.forEach((zone) => {\r\n                                    zone.options = JSON.parse(JSON.stringify(customData.options));\r\n                                });\r\n                            }\r\n                            else{\r\n                                customData.zones.forEach((zone) => {\r\n                                    zone.options = [zone.answer];\r\n                                });\r\n                            }\r\n                        }\r\n                        scope.updateGrain();\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push({\r\n        name: 'fillZone',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    zoneId: '@'\r\n                },\r\n                template: '<text-zone ng-class=\"{ success: optionData.correction && optionData.isCorrect, error: optionData.correction && !optionData.isCorrect }\">' +\r\n                '<div ng-if=\"optionData.mode === \\'view\\'\"><span>[[optionData.zone.answer]]</span></div>' +\r\n                '<input type=\"text\" disabled placeholder=\"[[optionData.zone.answer]]\" ng-if=\"optionData.mode === \\'edit\\'\" />' +\r\n                '<input type=\"text\" ng-if=\"optionData.mode === \\'perform-text\\'\" ng-model=\"optionData.zone.answer\" />' +\r\n                '<select ng-if=\"optionData.mode === \\'perform-list\\'\" ng-options=\"o as o for o in optionData.zone.options\" ng-model=\"optionData.zone.answer\"></select>' +\r\n                '<div drag-item=\"optionData.zone\" drop-item=\"answer($item)\" ng-if=\"optionData.mode === \\'perform-drag\\'\"><span>[[optionData.zone.answer]]</span></div>' +\r\n                '</text-zone>',\r\n                link: function (scope, element, attributes) {\r\n                    scope.optionData = {\r\n                        zoneId: parseInt(scope.zoneId),\r\n                        zone: _.findWhere(scope.$parent.$eval('customData.zones'), { id: parseInt(scope.zoneId) }),\r\n                        correction: scope.$parent.$eval('correction')\r\n                    }\r\n\r\n                    if (scope.optionData.correction) {\r\n                        let index = scope.$parent.$eval('customData.zones').indexOf(scope.optionData.zone);\r\n                        scope.optionData.isCorrect = scope.optionData.correction[index];\r\n                    }\r\n\r\n                    setTimeout(() => {\r\n                        scope.optionData.mode = 'view';\r\n                        if (element.parents('edit-fill-text').length > 0) {\r\n                            scope.optionData.mode = 'edit';\r\n                        }\r\n                        if (element.parents('perform-fill-text').length > 0) {\r\n                            scope.optionData.mode = 'perform-' + scope.$parent.$eval('customData.answersType');\r\n                        }\r\n                        scope.$apply();\r\n                    }, 50);\r\n                    \r\n                    element.on('click', (e) => {\r\n                        scope.$parent.$eval('editZone(' + scope.optionData.zoneId + ')');\r\n                        e.preventDefault();\r\n                        scope.$apply();\r\n                    });\r\n                    \r\n\r\n                    scope.answer = ($item) => {\r\n                        scope.$parent.removeAnswer(scope.optionData.zone);\r\n                        scope.optionData.zone.answer = $item;\r\n                        scope.$parent.usedAnswers.push($item);\r\n                    };\r\n                }\r\n            }\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'performFillText',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/filltext/templates/perform.html',\r\n                link: (scope: any) => {\r\n                    scope.$watch(function () {\r\n                        return scope.grainCopy;\r\n                    }, function () {\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data = new filltext.CustomData(scope.grainCopy.grain_copy_data.custom_copy_data);\r\n                        scope.customData = scope.grainCopy.grain_copy_data.custom_copy_data;\r\n                    });\r\n                    \r\n                    scope.usedAnswers = [];\r\n\r\n                    scope.updateGrainCopy = () => {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n\r\n                    scope.answer = (textZone, $item: string) => {\r\n                        scope.removeAnswer(textZone);\r\n                        textZone.answer = $item;\r\n                        scope.usedAnswers.push($item);\r\n                    };\r\n\r\n                    scope.removeAnswer = ($item: filltext.TextZone) => {\r\n                        if (!$item.answer) {\r\n                            return;\r\n                        }\r\n                        var i = scope.usedAnswers.indexOf($item.answer);\r\n                        scope.usedAnswers.splice(i, 1);\r\n                        $item.answer = '';\r\n                    };\r\n\r\n                    scope.availableOption = (option) => scope.usedAnswers.indexOf(option) === -1;\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewFillText',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/filltext/templates/view.html',\r\n                link: (scope: any) => {\r\n                    var result = zonegrain.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.correction = result.answers_result.correction;\r\n                    scope.customData = scope.grainCopy.grain_copy_data.custom_copy_data;\r\n                    if (!scope.grainCopy.calculated_score) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","declare var _: any;\r\n\r\nmodule filltext {\r\n    export interface TextZone extends zonegrain.Zone {\r\n        options: string[];\r\n        id: number;\r\n    }\r\n\r\n    export class CustomData implements zonegrain.CustomData {\r\n        zones: TextZone[];\r\n        answersType: string;\r\n        options: string[];\r\n        htmlContent: string;\r\n\r\n        constructor(copyFrom?: CustomData) {\r\n            if (!copyFrom.htmlContent) {\r\n                this.zones = [];\r\n                this.options = [];\r\n                this.answersType = 'text';\r\n            }\r\n            else{\r\n                this.zones = JSON.parse(JSON.stringify(copyFrom.zones));\r\n                this.options = JSON.parse(JSON.stringify(copyFrom.options));\r\n                this.htmlContent = copyFrom.htmlContent;\r\n                this.answersType = copyFrom.answersType;\r\n            }\r\n        }\r\n\r\n        addZone(zone: filltext.TextZone) {\r\n            zone.id = 0;\r\n            if (this.zones.length > 0) {\r\n                zone.id = this.zones[this.zones.length - 1].id + 1;\r\n            }\r\n\r\n            this.zones.push(zone);\r\n        }\r\n\r\n        removeZone(zone: filltext.TextZone) {\r\n            let i = this.zones.indexOf(zone);\r\n            this.zones.splice(i, 1);\r\n        }\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'customEditor',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                replace : true,\r\n                scope : {\r\n                    text :\"=\",\r\n                    grain : \"=\"\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/common/editor/editor.html',\r\n                link:(scope:any, element) => {\r\n\r\n                    scope.textEditor = scope.text;\r\n\r\n\r\n                    var isEditorFocus = false;\r\n\r\n                    /**\r\n                     * Event JQuery because no ng-blur on editor\r\n                     */\r\n                    element.find('editor').on('editor-focus', function() {\r\n                        isEditorFocus = true;\r\n                    });\r\n\r\n                    /**\r\n                     * Event JQuery because no ng-blur on editor\r\n                     */\r\n                    element.find('editor').on('editor-blur', function() {\r\n                        if (isEditorFocus) {\r\n                            isEditorFocus = false;\r\n                            scope.text = StringISOHelper.toISO(scope.textEditor);\r\n                            scope.$apply();\r\n                            scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","module zonegrain {\r\n    export interface Zone {\r\n        answer: string\r\n    }\r\n\r\n    export interface CustomData {\r\n        zones: Zone[]\r\n    }\r\n\r\n    export function automaticCorrection(grainScheduled: IGrainScheduled, grainCopy: IGrainCopy): {\r\n        calculated_score: number, answers_result: { correction: boolean[] }\r\n    } {\r\n        var customCopyData = grainCopy.grain_copy_data.custom_copy_data as CustomData;\r\n        var customData = grainScheduled.grain_data.custom_data as CustomData;\r\n\r\n        var textZonesCorrection = [];\r\n        customData.zones.forEach((textZone, i) => {\r\n            textZonesCorrection.push(\r\n                textZone.answer.toLowerCase() === customCopyData.zones[i].answer.toLowerCase()\r\n            );\r\n        });\r\n\r\n        var nbPoints = (_.filter(textZonesCorrection).length / textZonesCorrection.length) * grainScheduled.grain_data.max_score;\r\n\r\n        return {\r\n            calculated_score: nbPoints,\r\n            answers_result: {\r\n                correction: textZonesCorrection\r\n            }\r\n        };\r\n    }\r\n\r\n    export function makeCopy(customData: CustomData, type: any) {\r\n        var copy = new type(customData);\r\n        copy.zones.forEach((textZone) => {\r\n            textZone.answer = '';\r\n        });\r\n        return copy;\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editMultipleAnswer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/multiple_answer/templates/edit-multiple-answer.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.addAnswer = function(text = ''){\r\n                        var newAnswer = {\r\n                            text : text\r\n                        };\r\n                        scope.grain.grain_data.custom_data.correct_answer_list.push(newAnswer);\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    if (angular.isUndefined(scope.grain.grain_data.custom_data)) {\r\n                        scope.grain.grain_data.custom_data = new MultipleAnswerCustomData();\r\n                        scope.addAnswer( 'Réponse 1');\r\n                        scope.addAnswer( 'Réponse 2');\r\n                    }\r\n\r\n                    scope.deleteAnswer = function(answer){\r\n                        var index = scope.grain.grain_data.custom_data.correct_answer_list.indexOf(answer);\r\n                        if(index !== -1){\r\n                            scope.grain.grain_data.custom_data.correct_answer_list.splice(index, 1);\r\n                        }\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.updateGrain = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performMultipleAnswer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/multiple_answer/templates/perform-multiple-answer.html',\r\n                link:(scope:any) => {\r\n                    scope.updateGrainCopy = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewMultipleAnswer',\r\n        injections: ['MultipleAnswerService', (MultipleAnswerService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/multiple_answer/templates/view-multiple-answer.html',\r\n                link: (scope:any) => {\r\n\r\n                    var result = MultipleAnswerService.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.isCorrect = result.answers_result;\r\n                    if (angular.isUndefined(scope.grainCopy.calculated_score) || scope.grainCopy.calculated_score === null) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","interface IMultipleAnswerCustomCopyData {\r\n    filled_answer_list:any[];\r\n}\r\n\r\nclass MultipleAnswerCustomCopyData implements IMultipleAnswerCustomCopyData {\r\n\r\n    filled_answer_list:any[];\r\n\r\n    constructor\r\n    (\r\n        filled_answer_list?:any[]\r\n    )\r\n    {\r\n        this.filled_answer_list = filled_answer_list || [];\r\n    }\r\n}","interface IMultipleAnswerCustomData {\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n}\r\n\r\nclass MultipleAnswerCustomData implements IMultipleAnswerCustomData {\r\n\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n\r\n    constructor\r\n    (\r\n        correct_answer_list?:any[],\r\n        no_error_allowed?:boolean\r\n    )\r\n    {\r\n        this.correct_answer_list = correct_answer_list || [];\r\n        this.no_error_allowed = no_error_allowed || false;\r\n    }\r\n}","class MultipleAnswerService implements IAutomaticCorrection {\r\n\r\n    constructor() {}\r\n\r\n    public automaticCorrection(grainScheduled:IGrainScheduled, grainCopy:IGrainCopy):{calculated_score:number, answers_result:{}} {\r\n        var numberGoodAnswer : number = 0,\r\n            atLeastOneError =  false,\r\n            answerCorrect,\r\n            isCorrectReturnArray = {},\r\n            grainScheduled_correct_answer_list = angular.copy(grainScheduled.grain_data.custom_data.correct_answer_list);\r\n        angular.forEach(grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function(filled_answer, key){\r\n            answerCorrect = false;\r\n           angular.forEach(grainScheduled_correct_answer_list, function(correct_answer){\r\n               if(!correct_answer.alreadyMatch){\r\n                   if(CompareStringHelper.compare\r\n                       (\r\n                           correct_answer.text,\r\n                           filled_answer.text\r\n                       ) === true){\r\n                       answerCorrect = true;\r\n                       correct_answer.alreadyMatch = true;\r\n                   }\r\n               }\r\n           });\r\n            if(answerCorrect){\r\n                isCorrectReturnArray[key] = true;\r\n                if(grainScheduled.grain_data.custom_data.no_error_allowed && atLeastOneError){\r\n                    // do not incremented\r\n                } else{\r\n                    numberGoodAnswer++\r\n                }\r\n            } else {\r\n                isCorrectReturnArray[key] = false;\r\n                atLeastOneError = true;\r\n                if(grainScheduled.grain_data.custom_data.no_error_allowed){\r\n                    numberGoodAnswer = 0;\r\n                }\r\n            }\r\n        });\r\n        // computation score\r\n        var numberPossibleAnswer : number = grainScheduled.grain_data.custom_data.correct_answer_list.length;\r\n        var calculated_score = (numberGoodAnswer / numberPossibleAnswer) * grainScheduled.grain_data.max_score;\r\n        if(isNaN(calculated_score)){\r\n            throw \"calculated score is not a number\"\r\n        }\r\n        return {\r\n            calculated_score: calculated_score,\r\n            answers_result: isCorrectReturnArray\r\n\r\n        };\r\n    }\r\n}","interface IOpenAnswerCustomCopyData {\r\n    filled_answer:string;\r\n}\r\n\r\nclass OpenAnswerCustomCopyData implements IOpenAnswerCustomCopyData {\r\n\r\n    filled_answer:string;\r\n\r\n    constructor\r\n    (\r\n        filled_answer?:string\r\n    )\r\n    {\r\n        this.filled_answer = filled_answer;\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editOpenAnswer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/open_answer/templates/edit-open-answer.html'\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performOpenAnswer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/open_answer/templates/perform-open-answer.html',\r\n                link:(scope:any, element:any) => {\r\n\r\n                    var isEditorFocus = false;\r\n\r\n                    scope.updateGrainCopy = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n\r\n                    /**\r\n                     * Event JQuery because no ng-blur on editor\r\n                     */\r\n                    element.find('editor').on('editor-focus', function(){\r\n                        isEditorFocus = true;\r\n                    });\r\n\r\n                    /**\r\n                     * Event JQuery because no ng-blur on editor\r\n                     */\r\n                    element.find('editor').on('editor-blur', function(){\r\n                        if(isEditorFocus){\r\n                            isEditorFocus = false;\r\n                            scope.grainCopy.grain_copy_data.custom_copy_data.filled_answer = StringISOHelper.toISO(scope.grainCopy.grain_copy_data.custom_copy_data.filled_answer);\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewOpenAnswer',\r\n        injections: ['$sce', 'OpenAnswerService', ($sce, OpenAnswerService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/open_answer/templates/view-open-answer.html',\r\n                link: (scope:any) => {\r\n\r\n                    var result = OpenAnswerService.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    if (angular.isUndefined(scope.grainCopy.calculated_score) || scope.grainCopy.calculated_score === null) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.openAnswerHtml = $sce.trustAsHtml(scope.grainCopy.grain_copy_data.custom_copy_data.filled_answer);\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","class OpenAnswerService implements IAutomaticCorrection {\r\n\r\n    constructor() {}\r\n\r\n    public automaticCorrection(grainScheduled:IGrainScheduled, grainCopy:IGrainCopy):{calculated_score:number, answers_result:{}} {\r\n        return {\r\n            calculated_score: 0,\r\n            answers_result: {\r\n                filled_answer: null\r\n            }\r\n        };\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editOrder',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/order/templates/edit-order.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.addAnswer = function(text = ''){\r\n                        var newOrder = parseFloat(getLastOrder()) + 1;\r\n                        var newAnswer = {\r\n                            order_by : newOrder,\r\n                            index : newOrder - 1,\r\n                            text : text\r\n                        };\r\n                        scope.grain.grain_data.custom_data.correct_answer_list.push(newAnswer);\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    if (angular.isUndefined(scope.grain.grain_data.custom_data)) {\r\n                        scope.grain.grain_data.custom_data = new OrderCustomData();\r\n                        scope.addAnswer( 'Réponse 1');\r\n                        scope.addAnswer( 'Réponse 2');\r\n                    }\r\n\r\n                    scope.deleteAnswer = function(answer){\r\n                        var indexDeleted = answer.index;\r\n                        var index = scope.grain.grain_data.custom_data.correct_answer_list.indexOf(answer);\r\n                        if(index !== -1){\r\n                            scope.grain.grain_data.custom_data.correct_answer_list.splice(index, 1);\r\n                        }\r\n                        angular.forEach(scope.grain.grain_data.custom_data.correct_answer_list, function(value){\r\n                            if(value.index > indexDeleted){\r\n                                value.index = parseFloat(value.index) - 1;\r\n                            }\r\n                        });\r\n                        scope.reOrder();\r\n                    };\r\n\r\n                    function getLastOrder(){\r\n                        var maxOrder = null;\r\n                        angular.forEach(scope.grain.grain_data.custom_data.correct_answer_list, function(value){\r\n                            if(maxOrder === null || value.order_by > maxOrder){\r\n                                maxOrder = value.order_by;\r\n                            }\r\n                        });\r\n                        if(maxOrder === null){\r\n                            return 0;\r\n                        }\r\n                        return maxOrder;\r\n\r\n                    }\r\n\r\n                    scope.reOrder = function(){\r\n                        angular.forEach(scope.grain.grain_data.custom_data.correct_answer_list, function(value){\r\n                            if(value.order_by != parseFloat(value.index) + 1){\r\n                                value.order_by = parseFloat(value.index) + 1;\r\n                            }\r\n                        });\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.updateGrain = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performOrder',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/order/templates/perform-order.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.updateGrainCopy = function() {\r\n                        scope.$emit(\"E_UPDATE_GRAIN_COPY\", scope.grainCopy);\r\n                    };\r\n\r\n                    scope.reOrder = function () {\r\n                        angular.forEach(scope.grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function (filled_answer) {\r\n                            if (filled_answer.order_by != parseInt(filled_answer.index) + 1) {\r\n                                filled_answer.order_by = parseInt(filled_answer.index) + 1;\r\n                                scope.$emit(\"E_UPDATE_GRAIN_COPY\", scope.grainCopy);\r\n                            }\r\n                        });\r\n                    };\r\n\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewOrder',\r\n        injections: ['OrderService', (OrderService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/order/templates/view-order.html',\r\n                link: (scope:any) => {\r\n\r\n                    var result = OrderService.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.isCorrect = result.answers_result;\r\n                    if (angular.isUndefined(scope.grainCopy.calculated_score) || scope.grainCopy.calculated_score === null) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","interface IOrderCustomCopyData {\r\n    filled_answer_list:any[];\r\n}\r\n\r\nclass OrderCustomCopyData implements IOrderCustomCopyData {\r\n\r\n    filled_answer_list:any[];\r\n\r\n    constructor\r\n    (\r\n        filled_answer_list?:any[]\r\n    )\r\n    {\r\n        this.filled_answer_list = filled_answer_list || [];\r\n    }\r\n}","interface IOrderCustomData {\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n}\r\n\r\nclass OrderCustomData implements IOrderCustomData {\r\n\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n\r\n    constructor\r\n    (\r\n        correct_answer_list?:any[],\r\n        no_error_allowed?:boolean\r\n    )\r\n    {\r\n        this.correct_answer_list = correct_answer_list || [];\r\n        this.no_error_allowed = no_error_allowed || false;\r\n    }\r\n}","class OrderService implements IAutomaticCorrection {\r\n\r\n    constructor() {}\r\n\r\n    public automaticCorrection(grainScheduled:IGrainScheduled, grainCopy:IGrainCopy):{calculated_score:number, answers_result:{}} {\r\n        var numberGoodAnswer : number = 0,\r\n            atLeastOneError =  false,\r\n            answerCorrect,\r\n            correspondingAnswer,\r\n            isCorrectReturnArray = {};\r\n        angular.forEach(grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function(filled_answer, key){\r\n                answerCorrect = false;\r\n            angular.forEach(grainScheduled.grain_data.custom_data.correct_answer_list, function(correct_answer){\r\n                if(correct_answer.order_by ===  filled_answer.order_by){\r\n                    correspondingAnswer = correct_answer;\r\n                }\r\n            });\r\n            if(CompareStringHelper.compare\r\n                (\r\n                    filled_answer.text,\r\n                    correspondingAnswer.text\r\n                ) === true){\r\n                answerCorrect = true;\r\n            }\r\n            if(answerCorrect){\r\n                isCorrectReturnArray[key] = true;\r\n                if(grainScheduled.grain_data.custom_data.no_error_allowed && atLeastOneError){\r\n                    // do not incremented\r\n                } else{\r\n                    numberGoodAnswer++\r\n                }\r\n            } else {\r\n                isCorrectReturnArray[key] = false;\r\n                atLeastOneError = true;\r\n                if(grainScheduled.grain_data.custom_data.no_error_allowed){\r\n                    numberGoodAnswer = 0;\r\n                }\r\n            }\r\n        });\r\n        // computation score\r\n        var numberPossibleAnswer : number = grainScheduled.grain_data.custom_data.correct_answer_list.length;\r\n        var calculated_score = (numberGoodAnswer / numberPossibleAnswer) * grainScheduled.grain_data.max_score;\r\n        if(isNaN(calculated_score)){\r\n            throw \"calculated score is not a number\"\r\n        }\r\n        return {\r\n            calculated_score: calculated_score,\r\n            answers_result: isCorrectReturnArray\r\n\r\n        };\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editQcm',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/qcm/templates/edit-qcm.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.addAnswer = function(isChecked = false, text = '') {\r\n                        var newAnswer = {\r\n                            isChecked : isChecked,\r\n                            text : text\r\n                        };\r\n                        scope.grain.grain_data.custom_data.correct_answer_list.push(newAnswer);\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    if (angular.isUndefined(scope.grain.grain_data.custom_data)) {\r\n                        scope.grain.grain_data.custom_data = new QcmCustomData();\r\n                        scope.addAnswer(true, 'Réponse 1');\r\n                        scope.addAnswer(false, 'Réponse 2');\r\n                    }\r\n\r\n                    scope.deleteAnswer = function(answer){\r\n                        var index = scope.grain.grain_data.custom_data.correct_answer_list.indexOf(answer);\r\n                        if (index !== -1) {\r\n                            scope.grain.grain_data.custom_data.correct_answer_list.splice(index, 1);\r\n                        }\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.updateGrain = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performQcm',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/qcm/templates/perform-qcm.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.updateGrainCopy = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewQcm',\r\n        injections: ['QcmService', (QcmService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/qcm/templates/view-qcm.html',\r\n                link: (scope:any) => {\r\n\r\n                    var result = QcmService.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.isCorrect = result.answers_result;\r\n                    if (angular.isUndefined(scope.grainCopy.calculated_score) || scope.grainCopy.calculated_score === null) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","interface IQcmCustomCopyData {\r\n    filled_answer_list:any[];\r\n}\r\n\r\nclass QcmCustomCopyData implements IQcmCustomCopyData {\r\n\r\n    filled_answer_list:any[];\r\n\r\n    constructor\r\n    (\r\n        filled_answer_list?:any[]\r\n    )\r\n    {\r\n        this.filled_answer_list = filled_answer_list || [];\r\n    }\r\n}","interface IQcmCustomData {\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n}\r\n\r\nclass QcmCustomData implements IQcmCustomData {\r\n\r\n    correct_answer_list:any[];\r\n    no_error_allowed:boolean;\r\n\r\n    constructor\r\n    (\r\n        correct_answer_list?:any[],\r\n        no_error_allowed?:boolean\r\n    )\r\n    {\r\n        this.correct_answer_list = correct_answer_list || [];\r\n        this.no_error_allowed = no_error_allowed || false;\r\n    }\r\n}","class QcmService implements IAutomaticCorrection {\r\n\r\n    constructor() {}\r\n\r\n    public automaticCorrection(grainScheduled:IGrainScheduled, grainCopy:IGrainCopy):{calculated_score:number, answers_result:{}} {\r\n\r\n        console.log('debug');\r\n        var numberGoodAnswer : number = 0,\r\n            numberRecognizedAnswer : number = 0,\r\n            atLeastOneError =  false,\r\n            isCorrectReturnArray = {};\r\n        angular.forEach(grainCopy.grain_copy_data.custom_copy_data.filled_answer_list, function(filled_answer, key){\r\n            if(angular.isUndefined(filled_answer.isChecked)){\r\n                filled_answer.isChecked = false;\r\n            }\r\n            if(angular.isUndefined(grainScheduled.grain_data.custom_data.correct_answer_list[key].isChecked)){\r\n                grainScheduled.grain_data.custom_data.correct_answer_list[key].isChecked = false;\r\n            }\r\n            if(filled_answer.isChecked === grainScheduled.grain_data.custom_data.correct_answer_list[key].isChecked){\r\n                if(grainScheduled.grain_data.custom_data.correct_answer_list[key].isChecked){\r\n                    // response is check and good\r\n                    // in this case numberGoodAnswer++\r\n                    numberRecognizedAnswer++;\r\n                    isCorrectReturnArray[key] = true;\r\n                    if(grainScheduled.grain_data.custom_data.no_error_allowed && atLeastOneError){\r\n                        // do not incremented\r\n                    } else{\r\n                        numberGoodAnswer++\r\n                    }\r\n\r\n                } else {\r\n                    // response is not check and good\r\n                    // in this case the answer is not good\r\n                    isCorrectReturnArray[key] = undefined;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                isCorrectReturnArray[key] = false;\r\n                atLeastOneError = true;\r\n                numberRecognizedAnswer++;\r\n                if(grainScheduled.grain_data.custom_data.no_error_allowed){\r\n                    numberGoodAnswer = 0;\r\n                }\r\n\r\n                if(grainScheduled.grain_data.custom_data.correct_answer_list[key].isChecked){\r\n                    // response is check and not good\r\n                    isCorrectReturnArray[key] = true;\r\n                } else {\r\n                    // response is not check and not good\r\n                    isCorrectReturnArray[key] = false;\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        var calculated_score;\r\n        if(numberRecognizedAnswer == 0){\r\n            if(atLeastOneError){\r\n                calculated_score = 0\r\n            } else{\r\n                calculated_score = grainScheduled.grain_data.max_score;\r\n            }\r\n\r\n        } else {\r\n            // computation score\r\n            calculated_score = (numberGoodAnswer / numberRecognizedAnswer) * grainScheduled.grain_data.max_score;\r\n        }\r\n\r\n\r\n\r\n        if(isNaN(calculated_score)){\r\n            throw \"calculated score is not a number\"\r\n        }\r\n        return {\r\n            calculated_score: calculated_score,\r\n            answers_result: isCorrectReturnArray\r\n\r\n        };\r\n    }\r\n}","interface ISimpleAnswerCustomCopyData {\r\n    filled_answer:string;\r\n}\r\n\r\nclass SimpleAnswerCustomCopyData implements ISimpleAnswerCustomCopyData {\r\n\r\n    filled_answer:string;\r\n\r\n    constructor\r\n    (\r\n        filled_answer?:string\r\n    )\r\n    {\r\n        this.filled_answer = filled_answer;\r\n    }\r\n}","interface ISimpleAnswerCustomData {\r\n    correct_answer:string;\r\n}\r\n\r\nclass SimpleAnswerCustomData implements ISimpleAnswerCustomData {\r\n\r\n    correct_answer:string;\r\n\r\n    constructor\r\n    (\r\n        correct_answer?:string\r\n    )\r\n    {\r\n        this.correct_answer = correct_answer;\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editSimpleAnswer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/simple_answer/templates/edit-simple-answer.html',\r\n                link:(scope:any) => {\r\n\r\n                    if (angular.isUndefined(scope.grain.grain_data.custom_data)) {\r\n                        scope.grain.grain_data.custom_data = new SimpleAnswerCustomData();\r\n                    }\r\n\r\n                    scope.updateGrain = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performSimpleAnswer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/simple_answer/templates/perform-simple-answer.html',\r\n                link:(scope:any) => {\r\n                    scope.updateGrainCopy = function() {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewSimpleAnswer',\r\n        injections: ['SimpleAnswerService', (SimpleAnswerService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/simple_answer/templates/view-simple-answer.html',\r\n                link: (scope:any) => {\r\n\r\n                    var result = SimpleAnswerService.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.isCorrect = result.answers_result.filled_answer;\r\n                    if (angular.isUndefined(scope.grainCopy.calculated_score) || scope.grainCopy.calculated_score === null) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","class SimpleAnswerService implements IAutomaticCorrection {\r\n\r\n    constructor() {}\r\n\r\n    public automaticCorrection(grainScheduled:IGrainScheduled, grainCopy:IGrainCopy):{calculated_score:number, answers_result:{}} {\r\n\r\n        var isCorrect = CompareStringHelper.compare\r\n        (\r\n            grainScheduled.grain_data.custom_data.correct_answer,\r\n            grainCopy.grain_copy_data.custom_copy_data.filled_answer\r\n        );\r\n\r\n        return {\r\n            calculated_score: isCorrect ? grainScheduled.grain_data.max_score : 0,\r\n            answers_result: {\r\n                filled_answer: isCorrect\r\n            }\r\n\r\n        };\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editStatement',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/statement/templates/edit-statement.html',\r\n                link:(scope:any, element:any) => {\r\n\r\n                    if (angular.isUndefined(scope.grain.grain_data.custom_data)) {\r\n                        scope.grain.grain_data.custom_data = new StatementCustomData();\r\n                        scope.grain.grain_data.custom_data.statement = '';\r\n                    }\r\n                    \r\n                    var isEditorFocus = false;\r\n\r\n                    /**\r\n                     * Event JQuery because no ng-blur on editor\r\n                     */\r\n                    element.find('editor').on('editor-focus', function() {\r\n                        isEditorFocus = true;\r\n                    });\r\n\r\n                    /**\r\n                     * Event JQuery because no ng-blur on editor\r\n                     */\r\n                    element.find('editor').on('editor-blur', function() {\r\n                        if (isEditorFocus) {\r\n                            isEditorFocus = false;\r\n                            scope.grain.grain_data.custom_data.statement = StringISOHelper.toISO(scope.grain.grain_data.custom_data.statement);\r\n                            scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performStatement',\r\n        injections: ['$sce', ($sce) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/statement/templates/perform-statement.html',\r\n                link:(scope:any) => {\r\n                    if (angular.isUndefined(scope.grainCopy.grain_copy_data.custom_copy_data)) {\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data = new StatementCustomCopyData();\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data.statement = '';\r\n                        scope.statementHtml = $sce.trustAsHtml(scope.grainCopy.grain_copy_data.custom_copy_data.statement);\r\n                    } else if (angular.isUndefined(scope.grainCopy.grain_copy_data.custom_copy_data.statement)) {\r\n                        scope.statementHtml = '';\r\n                    } else {\r\n                        scope.statementHtml = $sce.trustAsHtml(scope.grainCopy.grain_copy_data.custom_copy_data.statement);\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewStatement',\r\n        injections: ['$sce', ($sce) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/statement/templates/view-statement.html',\r\n                link:(scope:any) => {\r\n                    if (angular.isUndefined(scope.grainCopy.grain_copy_data.custom_copy_data)) {\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data = new StatementCustomCopyData();\r\n                        scope.grainCopy.grain_copy_data.custom_copy_data.statement = '';\r\n                        scope.statementHtml = $sce.trustAsHtml(scope.grainCopy.grain_copy_data.custom_copy_data.statement);\r\n                    } else if (angular.isUndefined(scope.grainCopy.grain_copy_data.custom_copy_data.statement)) {\r\n                        scope.statementHtml = '';\r\n                    } else {\r\n                        scope.statementHtml = $sce.trustAsHtml(scope.grainCopy.grain_copy_data.custom_copy_data.statement);\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","interface IStatementCustomCopyData {\r\n    statement:string;\r\n}\r\n\r\nclass StatementCustomCopyData implements IStatementCustomCopyData {\r\n\r\n    statement:string;\r\n\r\n    constructor\r\n    (\r\n        statement?:string\r\n    )\r\n    {\r\n        this.statement = statement;\r\n    }\r\n}","interface IStatementCustomData {\r\n    statement:string;\r\n}\r\n\r\nclass StatementCustomData implements IStatementCustomData {\r\n\r\n    statement:string;\r\n    \r\n    constructor\r\n    (\r\n        statement?:string\r\n    )\r\n    {\r\n        this.statement = statement;\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'choose',\r\n        injections: ['GrainTypeService', (GrainTypeService:IGrainTypeService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/undefined/templates/choose.html',\r\n                link:(scope:any) => {\r\n                    \r\n                    scope.displayNextStep = function(grainTypeId) {\r\n                        scope.grain.grain_type_id = grainTypeId;\r\n                        scope.grain.grain_data.title = GrainTypeService.getById(grainTypeId).public_name;\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n","directives.push(\r\n    {\r\n        name: 'chooseAnswer',\r\n        injections: ['GrainTypeService', (GrainTypeService:IGrainTypeService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/undefined/templates/choose-answer.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.grainTypeList = GrainTypeService.getList();\r\n\r\n                    scope.getGrainIllustrationURL = function(grainTypeId:number) {\r\n                        return GrainTypeService.getIllustrationURL(grainTypeId);\r\n                    };\r\n\r\n                    scope.displayNextStep = function(grainTypeId:number) {\r\n                        scope.grain.grain_type_id = grainTypeId;\r\n                        scope.grain.grain_data.title = '';\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        ]\r\n    }\r\n);\r\n\r\n","directives.push(\r\n    {\r\n        name: 'performSummary',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    previewing: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/undefined/templates/perform-summary.html',\r\n                link(scope: any){\r\n                }\r\n            };\r\n        }\r\n        ]\r\n    }\r\n);\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewSummary',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    subjectCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/undefined/templates/view-summary.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.formatNumber = function(score:number): any {\r\n                        return ScoreHelper.format(score)\r\n                    };\r\n                    \r\n                    scope.updateSubjectCopy = function() {\r\n                        scope.$emit('E_UPDATE_SUBJECT_COPY', scope.subjectCopy, false);\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'editZoneImage',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/zoneimage/templates/edit.html',\r\n                link:(scope:any, element) => {\r\n\r\n                    element.on('stopDrag', '[draggable]', () => {\r\n                        scope.updateGrain();\r\n                    });\r\n\r\n                    scope.displayState = {\r\n                        editedIcon: {} as zoneimage.IconZone\r\n                    };\r\n\r\n                    if (!scope.grain.grain_data.custom_data) {\r\n                        scope.grain.grain_data.custom_data = new zoneimage.CustomData();\r\n                    }\r\n                    else {\r\n                        scope.grain.grain_data.custom_data = new zoneimage.CustomData(scope.grain.grain_data.custom_data);\r\n                    }\r\n\r\n                    scope.updateGrain = () => {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.editZone = (zone: zoneimage.IconZone) => {\r\n                        scope.displayState.editZone = true;\r\n                        if(zone){\r\n                            scope.displayState.editedIcon = zone;\r\n                        }\r\n                        else{\r\n                            scope.displayState.editedIcon = {\r\n                                answer: ''\r\n                            };\r\n                        }\r\n                    };\r\n\r\n                    scope.addZone = (option?: string) => {\r\n                        if(!option){\r\n                            option = scope.displayState.editedIcon;\r\n                        }\r\n                        scope.grain.grain_data.custom_data.addZone(scope.displayState.editedIcon);\r\n                        scope.displayState.editZone = false;\r\n                        scope.updateGrain();\r\n                    };\r\n\r\n                    scope.addOption = (container: zoneimage.CustomData) => {\r\n                        var option = '/workspace/document/' + scope.displayState.newOption._id;\r\n                        if(!scope.displayState.editZone){\r\n                            container.addZone({ answer: option });\r\n                        }\r\n                        else{\r\n                            var i = container.options.indexOf(scope.displayState.editedIcon.answer);\r\n                            container.options.splice(i, 1);\r\n                            scope.displayState.editedIcon.answer = option;\r\n                        }\r\n                        if(container.options.indexOf(option) === -1){\r\n                            container.options.push(option);\r\n                        }\r\n                        \r\n                        scope.updateGrain();\r\n                    };\r\n\r\n                    scope.removeOption = (container: zoneimage.CustomData, option: string) => {\r\n                        let i = container.options.indexOf(option);\r\n                        container.options.splice(i, 1);\r\n                        let iconsZone = _.filter(container.zones, { answer: option });\r\n                        iconsZone.forEach((icon) => {\r\n                            let j = container.zones.indexOf(icon);\r\n                            container.zones.splice(j, 1);\r\n                        });\r\n                        \r\n                        scope.updateGrain();\r\n                    };\r\n\r\n                    scope.removeZone = (zone: zoneimage.IconZone) => {\r\n                        let container = scope.grain.grain_data.custom_data as zoneimage.CustomData;\r\n                        let i = container.zones.indexOf(zone);\r\n                        container.zones.splice(i, 1);\r\n                        \r\n                        scope.updateGrain();\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'performZoneImage',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/zoneimage/templates/perform.html',\r\n                link: (scope: any) => {\r\n                    scope.grainCopy.grain_copy_data.custom_copy_data = new zoneimage.CustomData(scope.grainCopy.grain_copy_data.custom_copy_data);\r\n\r\n                    scope.usedAnswers = [];\r\n\r\n                    scope.updateGrainCopy = () => {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n\r\n                    scope.answer = (iconZone: zoneimage.IconZone, $item: string) => {\r\n                        scope.removeAnswer(iconZone);\r\n                        iconZone.answer = $item;\r\n                        scope.usedAnswers.push($item);\r\n                    };\r\n\r\n                    scope.removeAnswer = ($item: zoneimage.IconZone) => {\r\n                        if (!$item.answer) {\r\n                            return;\r\n                        }\r\n                        var i = scope.usedAnswers.indexOf($item.answer);\r\n                        scope.usedAnswers.splice(i, 1);\r\n                        $item.answer = '';\r\n                    };\r\n\r\n                    scope.availableOption = (option) => scope.usedAnswers.indexOf(option) === -1;\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewZoneImage',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/zoneimage/templates/view.html',\r\n                link: (scope: any) => {\r\n                    var result = zonegrain.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.correction = result.answers_result.correction;\r\n                    if (!scope.grainCopy.calculated_score) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","declare var _: any;\r\n\r\nmodule zoneimage {\r\n    export interface IconZone extends zonegrain.Zone {\r\n        position?: {\r\n            x: number,\r\n            y: number,\r\n            z: number\r\n        };\r\n    }\r\n\r\n    export class CustomData implements zonegrain.CustomData {\r\n        zones: IconZone[];\r\n        _guideImage: string;\r\n        options: string[];\r\n\r\n        constructor(copyFrom?: CustomData) {\r\n            if(!copyFrom){\r\n                this.zones = [];\r\n                this.options = [];\r\n            }\r\n            else{\r\n                this.zones = JSON.parse(JSON.stringify(copyFrom.zones));\r\n                this.options = JSON.parse(JSON.stringify(copyFrom.options));\r\n                this._guideImage = copyFrom._guideImage;\r\n            }\r\n        }\r\n\r\n        addZone(zone: IconZone){\r\n            if(!zone.position){\r\n                zone.position = {\r\n                    x: this.zones.length * 15,\r\n                    y: this.zones.length * 15,\r\n                    z: this.zones.length\r\n                };\r\n            }\r\n            \r\n            this.zones.push(zone);\r\n        }\r\n\r\n        set guideImageFile(file: { _id: string }){\r\n            this._guideImage = '/workspace/document/' + file._id;\r\n        }\r\n\r\n        get guideImage(): string {\r\n            return this._guideImage || (window as any).skin.theme + '../img/illustrations/image-default.svg';\r\n        }\r\n\r\n        set guideImage(value: string) {\r\n            this._guideImage = value;\r\n        }\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'editZoneText',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grain: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/zonetext/templates/edit.html',\r\n                link:(scope:any, element: any) => {\r\n                    element.on('stopDrag', '[draggable]', () => {\r\n                        scope.updateGrain();\r\n                    });\r\n\r\n                    scope.displayState = {\r\n                        editedTextZone: {\r\n                            options: []\r\n                        } as zonetext.TextZone\r\n                    };\r\n\r\n                    if (!scope.grain.grain_data.custom_data) {\r\n                        scope.grain.grain_data.custom_data = new zonetext.CustomData();\r\n                    }\r\n                    else {\r\n                        scope.grain.grain_data.custom_data = new zonetext.CustomData(scope.grain.grain_data.custom_data);\r\n                    }\r\n\r\n                    scope.updateGrain = () => {\r\n                        scope.$emit('E_UPDATE_GRAIN', scope.grain);\r\n                    };\r\n\r\n                    scope.editZone = (zone: zonetext.TextZone) => {\r\n                        scope.displayState.editZone = true;\r\n                        if(zone){\r\n                            scope.displayState.editedTextZone = zone;\r\n                        }\r\n                        else{\r\n                            scope.displayState.editedTextZone = {\r\n                                answer: '',\r\n                                options: []\r\n                            };\r\n                        }\r\n                    };\r\n\r\n                    scope.addZone = () => {\r\n                        scope.grain.grain_data.custom_data.addZone(scope.displayState.editedTextZone);\r\n                        scope.displayState.editZone = false;\r\n                        scope.updateGrain();\r\n                    };\r\n\r\n                    scope.removeZone = (zone: zonetext.TextZone) => {\r\n                        let container = scope.grain.grain_data.custom_data as zonetext.CustomData;\r\n                        let i = container.zones.indexOf(zone);\r\n                        container.zones.splice(i, 1);\r\n\r\n                        scope.updateGrain();\r\n                    };\r\n\r\n                    scope.addOption = (container: zonetext.CustomData | zonetext.TextZone) => {\r\n                        container.options.push(scope.displayState.newOption);\r\n                        scope.displayState.editedTextZone.answer = scope.displayState.newOption;\r\n                        scope.updateGrain();\r\n                        scope.displayState.newOption = '';\r\n                    };\r\n\r\n                    scope.removeOption = (container: zonetext.CustomData | zonetext.TextZone, option: string) => {\r\n                        let i = container.options.indexOf(option);\r\n                        container.options.splice(i, 1);\r\n\r\n                        if (container instanceof zonetext.CustomData) {\r\n                            let zones = _.filter(container.zones, { answer: option });\r\n                            zones.forEach((zone) => {\r\n                                let j = container.zones.indexOf(zone);\r\n                                container.zones.splice(j, 1);\r\n                            });\r\n                        }\r\n\r\n                        scope.updateGrain();\r\n                    };\r\n\r\n                    scope.switchTo = (newType: string) => {\r\n                        let customData = scope.grain.grain_data.custom_data as zonetext.CustomData;\r\n                        if (newType === 'drag') {\r\n                            customData.options = [];\r\n                            customData.zones.forEach((zone) => {\r\n                                customData.options.push(zone.answer);\r\n                            });\r\n                        }\r\n                        if (newType === 'list') {\r\n                            customData.zones.forEach((zone) => {\r\n                                zone.options = JSON.parse(JSON.stringify(customData.options));\r\n                            });\r\n                        }\r\n                        scope.updateGrain();\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'performZoneText',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/zonetext/templates/perform.html',\r\n                link: (scope: any) => {\r\n                    scope.grainCopy.grain_copy_data.custom_copy_data = new zonetext.CustomData(scope.grainCopy.grain_copy_data.custom_copy_data);\r\n\r\n                    scope.usedAnswers = [];\r\n\r\n                    scope.updateGrainCopy = () => {\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    };\r\n\r\n                    scope.answer = (textZone, $item: string) => {\r\n                        scope.removeAnswer(textZone);\r\n                        textZone.answer = $item;\r\n                        scope.usedAnswers.push($item);\r\n                    };\r\n\r\n                    scope.removeAnswer = ($item: zonetext.TextZone) => {\r\n                        if (!$item.answer) {\r\n                            return;\r\n                        }\r\n                        var i = scope.usedAnswers.indexOf($item.answer);\r\n                        scope.usedAnswers.splice(i, 1);\r\n                        $item.answer = '';\r\n                    };\r\n\r\n                    scope.availableOption = (option) => scope.usedAnswers.indexOf(option) === -1;\r\n\r\n                    scope.apply = () => {\r\n                        scope.$apply();\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'viewZoneText',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/zonetext/templates/view.html',\r\n                link: (scope: any) => {\r\n                    var result = zonegrain.automaticCorrection(scope.grainScheduled, scope.grainCopy);\r\n                    scope.correction = result.answers_result.correction;\r\n                    if (!scope.grainCopy.calculated_score) {\r\n                        scope.grainCopy.calculated_score = result.calculated_score;\r\n                        scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                    }\r\n\r\n                    scope.updateGrainCopy = function () {\r\n                        if (scope.isTeacher) {\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","declare var _: any;\r\n\r\nmodule zonetext {\r\n    export interface TextZone extends zonegrain.Zone {\r\n        position: {\r\n            x: number,\r\n            y: number,\r\n            z: number\r\n        };\r\n        options: string[];\r\n    }\r\n\r\n    export class CustomData implements zonegrain.CustomData {\r\n        zones: TextZone[];\r\n        _guideImage: string;\r\n        answersType: string;\r\n        options: string[];\r\n\r\n        constructor(copyFrom?: CustomData) {\r\n            if(!copyFrom){\r\n                this.zones = [];\r\n                this.options = [];\r\n                this.answersType = 'text';\r\n            }\r\n            else{\r\n                this.zones = JSON.parse(JSON.stringify(copyFrom.zones));\r\n                this.options = JSON.parse(JSON.stringify(copyFrom.options));\r\n                this._guideImage = copyFrom._guideImage;\r\n                this.answersType = copyFrom.answersType;\r\n            }\r\n        }\r\n\r\n        addZone(zone: zonetext.TextZone){\r\n            if(!zone.position){\r\n                zone.position = {\r\n                    x: this.zones.length * 15,\r\n                    y: this.zones.length * 15,\r\n                    z: this.zones.length\r\n                };\r\n            }\r\n            \r\n            this.zones.push(zone);\r\n        }\r\n\r\n        removeZone(zone: zonetext.TextZone) {\r\n            let i = this.zones.indexOf(zone);\r\n            this.zones.splice(i, 1);\r\n        }\r\n\r\n        set guideImageFile(file: { _id: string }){\r\n            this._guideImage = '/workspace/document/' + file._id;\r\n        }\r\n\r\n        get guideImage(): string {\r\n            return this._guideImage || (window as any).skin.theme + '../img/illustrations/image-default.svg';\r\n        }\r\n\r\n        set guideImage(value: string) {\r\n            this._guideImage = value;\r\n        }\r\n    }\r\n}","directives.push(\r\n    {\r\n        name: 'subjectEditSubjectList',\r\n        injections: [\r\n            'FolderService','SubjectService','GrainService','GrainTypeService',\r\n            (FolderService, SubjectService, GrainService, GrainTypeService\r\n             ) => {\r\n                return {\r\n                    restrict: 'E',\r\n                    templateUrl: 'exercizer/public/app/components/subject/subject_edit/templates/subject-edit-subject-list.html',\r\n                    link: (scope:any) => {\r\n\r\n                        scope.autocomplete = {\r\n                            subjectList: null\r\n                        };\r\n\r\n                        scope.grainList = [];\r\n                        scope.isFolded = false;\r\n                        \r\n                        scope.subjectList = function () {\r\n                            return SubjectService.getList();\r\n                        };\r\n\r\n                        scope.getGrainIllustrationURL = function(grainTypeId:number) {\r\n                            return GrainTypeService.getIllustrationURL(grainTypeId);\r\n                        };\r\n                        \r\n                        scope.getGrainName = function (grain:IGrain) {\r\n                            if (grain.grain_data && grain.grain_data.title) {\r\n                                return grain.grain_data.title;\r\n                            } else {\r\n                                var grainType = GrainTypeService.getById(grain.grain_type_id);\r\n                                return grainType.public_name;\r\n                            }\r\n                        };\r\n\r\n                        scope.toggle = function () {\r\n                            scope.isFolded = !scope.isFolded;\r\n                        };\r\n                        \r\n\r\n                        /**\r\n                         * AUTOCOMPLETE\r\n                         */\r\n\r\n                        scope.clickOnAutoComplete = function () {\r\n                            if (scope.subjectList()) {\r\n                                scope.autocomplete.subjectList = createListAutoComplete();\r\n                            }\r\n                        };\r\n\r\n                        scope.clickOnItem = function(subjectFromAutoComplete){\r\n                            scope.subject = SubjectService.getById(subjectFromAutoComplete.id);\r\n                            GrainService.getListBySubject(scope.subject).then(\r\n                                function(data){\r\n                                    scope.grainList = data;\r\n                                }\r\n                            )\r\n\r\n                        };\r\n\r\n                        function createListAutoComplete() {\r\n                            var array = [];\r\n                            angular.forEach(scope.subjectList(), function (value) {\r\n                                var folder = null,\r\n                                    folderString = \"\";\r\n                                if (value.folder_id) {\r\n                                    folder = FolderService.folderById(value.folder_id);\r\n                                    if (folder) {\r\n                                        folderString = \" (\" + folder.label + \")\";\r\n                                    }\r\n                                }\r\n                                var obj = {\r\n                                    title: value.title,\r\n                                    name: value.title + folderString,\r\n                                    id: value.id,\r\n                                    toString: function () {\r\n                                        return this.name;\r\n                                    }\r\n                                };\r\n                                array.push(obj);\r\n                            });\r\n                            return array;\r\n                        }\r\n\r\n                        /**\r\n                         * DRAG\r\n                         */\r\n\r\n                        scope.drag = function (item, $originalEvent) {\r\n                            try {\r\n                                $originalEvent.dataTransfer.setData('application/json', JSON.stringify(item));\r\n                            } catch (e) {\r\n                                $originalEvent.dataTransfer.setData('Text', JSON.stringify(item));\r\n                            }\r\n                        };\r\n                    }\r\n                };\r\n            }\r\n        ]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'subjectPerformCopyBottomNav',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    'grainCopyList': '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_perform_copy/templates/subject-perform-copy-bottom-nav.html',\r\n                link:(scope:any) => {\r\n                    scope.currentGrainCopy = undefined;\r\n                    scope.currentGrainCopyIndex = undefined;\r\n                    \r\n                    scope.grainCopyList = scope.grainCopyList.sort(function (grainCopyA:IGrainCopy, grainCopyB:IGrainCopy) {\r\n                        return (grainCopyA.order_by > grainCopyB.order_by ? 1 : -1);\r\n                    });\r\n\r\n                    scope.hasPrevious = function() {\r\n                        return !angular.isUndefined(scope.currentGrainCopy);\r\n                    };\r\n                    \r\n                    scope.hasNext = function() {\r\n                        return (angular.isUndefined(scope.currentGrainCopy) && (!angular.isUndefined(scope.grainCopyList) && scope.grainCopyList.length > 0))\r\n                            || scope.currentGrainCopyIndex < scope.grainCopyList.length - 1;\r\n                    };\r\n                    \r\n                    scope.navigateToPrevious = function() {\r\n                        if (scope.hasPrevious()) {\r\n                            _navigateTo(scope.grainCopyList[scope.currentGrainCopyIndex - 1]);\r\n                        }\r\n                    };\r\n                    \r\n                    scope.navigateToNext = function() {\r\n                        if (scope.hasNext()) {\r\n                            _navigateTo(scope.grainCopyList[angular.isUndefined(scope.currentGrainCopy) ? 0 : scope.currentGrainCopyIndex + 1]);\r\n                        }\r\n                    };\r\n                    \r\n                    function _navigateTo(grainCopy:IGrainCopy = undefined) {\r\n                        scope.$emit('E_CURRENT_GRAIN_COPY_CHANGED', grainCopy);\r\n                    }\r\n\r\n                    scope.$on('E_CURRENT_GRAIN_COPY_CHANGE' , function(event, grainCopy:IGrainCopy) {\r\n                        scope.currentGrainCopy = grainCopy;\r\n                        scope.currentGrainCopyIndex = angular.isUndefined(grainCopy) ? undefined : scope.grainCopyList.indexOf(grainCopy);\r\n                    });\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n","directives.push(\r\n    {\r\n        name: 'subjectPerformCopyDisplayCurrentGrainCopy',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    subjectScheduled : \"=\",\r\n                    previewing: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_perform_copy/templates/subject-perform-copy-display-current-grain-copy.html',\r\n                link:(scope:any) => {\r\n                    scope.currentGrainCopy = undefined;\r\n\r\n                    scope.$on('E_CURRENT_GRAIN_COPY_CHANGE', function(event, grainCopy:IGrainCopy) {\r\n                        scope.currentGrainCopy = grainCopy;\r\n                    });\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n","directives.push(\r\n    {\r\n        name: 'subjectPerformCopyPreviewHeader',\r\n        injections: ['$location', 'SubjectCopyService', 'SubjectLibraryService', 'SubjectService', ($location, SubjectCopyService, SubjectLibraryService, SubjectService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    subjectCopy: '=',\r\n                    grainScheduledList: '=',\r\n                    grainCopyList: '=',\r\n                    previewingFromLibrary: '=',\r\n                    previewingReader: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_perform_copy/templates/subject-perform-copy-preview-header.html',\r\n                link:(scope:any) => {\r\n                    \r\n                    scope.displayModalCopyPaste = function() {\r\n                        if (scope.previewingFromLibrary) {\r\n                            var subjectTmpArray = [];\r\n                            subjectTmpArray.push(SubjectLibraryService.tmpSubjectForPreview);\r\n                            scope.$broadcast('E_DISPLAY_DASHBOARD_MODAL_COPY_PASTE', subjectTmpArray, [], true);\r\n                        }\r\n                    };\r\n\r\n                    scope.$on('E_CONFIRM_COPY_PASTE', function(event, folder:IFolder) {\r\n                        if (scope.previewingFromLibrary) {\r\n                            SubjectService.duplicate(SubjectLibraryService.tmpSubjectForPreview, folder).then(\r\n                                function() {\r\n                                    notify.info('Le sujet a bien été ajouté dans votre liste des sujets.');\r\n                                    $location.path('/dashboard/teacher/library');\r\n                                },\r\n                                function(err) {\r\n                                    notify.error(err);\r\n                                }\r\n                            );\r\n                        }\r\n                    });\r\n\r\n                    scope.redirectToDashBoard = function() {\r\n                        $location.path('/dashboard');\r\n                    };\r\n\r\n                    scope.redirectToTeacherDashboardLibraryTab = function() {\r\n                        if (scope.previewingFromLibrary) {\r\n                            $location.path('/dashboard/teacher/library');\r\n                        }\r\n                    };\r\n\r\n                    scope.redirectToSubjectEdit = function() {\r\n                        if (!scope.previewingFromLibrary) {\r\n                            $location.path('/subject/edit/' + scope.subjectScheduled.subject_id + '/');\r\n                        }\r\n                    };\r\n                    \r\n                    scope.redirectToSubjectPreviewViewCopy = function() {\r\n                        SubjectCopyService.tmpPreviewData = {\r\n                            subjectScheduled: scope.subjectScheduled,\r\n                            subjectCopy: scope.subjectCopy,\r\n                            grainScheduledList: scope.grainScheduledList,\r\n                            grainCopyList: scope.grainCopyList,\r\n                        };\r\n\r\n                        $location.path('/subject/copy/view/preview/' + scope.subjectScheduled.subject_id + '/');\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'subjectPerformCopyStudentHeader',\r\n        injections: ['$location', ($location) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    subjectCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_perform_copy/templates/subject-perform-copy-student-header.html',\r\n                link:(scope:any) => {\r\n                    \r\n                    scope.isModalDisplayed = false;\r\n\r\n                    scope.redirectToDashboard = function(submit:boolean) {\r\n                        if (submit) {\r\n                            scope.isModalDisplayed = true;\r\n                        } else {\r\n                            $location.path('/dashboard');\r\n                        }\r\n                    };\r\n                    \r\n                    scope.closeModal = function() {\r\n                        scope.isModalDisplayed = false;\r\n                    };\r\n                    \r\n                    scope.submitSubjectCopy = function() {\r\n                        scope.$emit('E_SUBJECT_COPY_SUBMITTED', scope.subjectCopy);\r\n                    };\r\n                    \r\n                    scope.$on('E_SUBMIT_SUBJECT_COPY', function() {\r\n                        $location.path('/dashboard');\r\n                    })\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'subjectSchedule',\r\n        injections: ['GroupService', '$q', 'SubjectScheduledService', 'GrainScheduledService', 'SubjectCopyService', 'GrainCopyService', 'GrainService', 'DateService', (GroupService, $q, SubjectScheduledService, GrainScheduledService, SubjectCopyService, GrainCopyService, GrainService, DateService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_schedule/templates/subject-schedule.html',\r\n                link: (scope:any, element, attrs) => {\r\n\r\n                    /**\r\n                     * INIT\r\n                     */\r\n                    scope.isDisplayed = false;\r\n                    scope.subject = null;\r\n                    scope.scheduleSubjectInProgress = false;\r\n\r\n                    /**\r\n                     * RESET\r\n                     * http://localhost:8090/userbook/visible/users/562-1454432933262\r\n                     */\r\n\r\n                    function reset() {\r\n                        scope.state = 'assignSubject';\r\n                        scope.data = {};\r\n                        scope.data.groupList = [];\r\n                        scope.data.userList = [];\r\n                        scope.option = {\r\n                            begin_date: new Date(),\r\n                            due_date: DateService.addDays(new Date, 7)\r\n                        };\r\n                    }\r\n\r\n                    /**\r\n                     * EVENT\r\n                     */\r\n\r\n                    scope.clickOnItem = function (selectedItem) {\r\n                        if (selectedItem.groupOrUser == 'group') {\r\n                            addInList(scope.data.groupList, selectedItem);\r\n                        } else {\r\n                            addInList(scope.data.userList, selectedItem);\r\n                        }\r\n                    };\r\n\r\n                    scope.removeItem = function (selectedItem) {\r\n                        if (selectedItem.groupOrUser == 'group') {\r\n                            removeInList(scope.data.groupList, selectedItem);\r\n                        } else {\r\n                            removeInList(scope.data.userList, selectedItem);\r\n                        }\r\n                    };\r\n\r\n                    scope.scheduleSubject = function () {\r\n                        scope.scheduleSubjectInProgress = true;\r\n                        canSchedule(scope.option, scope.subject).then(function(data){\r\n                            createIdList(scope.data.userList, scope.data.groupList).then(\r\n                                function (users) {\r\n                                    if (users.length !== 0) {\r\n                                        createSubjectScheduled(scope.subject, scope.option, scope.data).then(\r\n                                            function (subjectScheduled) {\r\n                                                //console.info('subjectScheduled',subjectScheduled);\r\n                                                var promises = [];\r\n                                                angular.forEach(users, function (user) {\r\n                                                    promises.push(createSubjectCopy(subjectScheduled, user).then(\r\n                                                        function (subjectCopy) {\r\n                                                            //console.info('subjectCopy',subjectCopy);\r\n                                                        }\r\n                                                    ));\r\n                                                });\r\n                                                $q.all(promises).then(\r\n                                                    // success\r\n                                                    // results: an array of data objects from each deferred.resolve(data) call\r\n                                                    function (results) {\r\n                                                        reset();\r\n                                                        scope.isDisplayed = false;\r\n                                                        scope.scheduleSubjectInProgress = false;\r\n                                                        notify.info(\"Le sujet a bien été programmé\");\r\n                                                    }\r\n                                                );\r\n\r\n                                            }\r\n                                        )\r\n                                    } else {\r\n                                        scope.scheduleSubjectInProgress = false;\r\n                                        notify.error(\"Aucun utilisateur ou groupe sélectionné\");\r\n                                    }\r\n                                }\r\n                            );\r\n                        }, function(err){\r\n                            scope.scheduleSubjectInProgress = false;\r\n                            console.error(err);\r\n                            notify.error(err);\r\n                        });\r\n                    };\r\n\r\n\r\n                    function canSchedule(option, subject) {\r\n                        var deferred = $q.defer();\r\n                        if (option.begin_date && option.due_date) {\r\n                            if (DateService.compare_after(option.due_date, option.begin_date, true)) {\r\n                                // shchedule options is correct , now check subject itself\r\n                                GrainService.getListBySubject(subject).then(\r\n                                    function (data) {\r\n                                        // create grain list scheduled\r\n                                        console.log('grain list');\r\n                                        if(data.length == 0 ){\r\n                                            deferred.reject(\"Il est impossible de programmer un sujet vide\");\r\n                                        } else {\r\n                                            // question : all grain exept statement\r\n                                            var validationGrain = true;\r\n                                            var numberQuestion  = 0;\r\n                                            angular.forEach(data, function(grain){\r\n                                                    switch (grain.grain_type_id){\r\n                                                        case 1 :\r\n                                                            break;\r\n                                                        case 2 :\r\n                                                            break;\r\n                                                        case 3 :\r\n                                                            break;\r\n                                                        case 4 :\r\n                                                            numberQuestion++;\r\n                                                            break;\r\n                                                        case 5 :\r\n                                                            numberQuestion++;\r\n                                                            break;\r\n                                                        case 6 :\r\n                                                            if(!grain.grain_data.custom_data.correct_answer_list || grain.grain_data.custom_data.correct_answer_list.length === 0){\r\n                                                                validationGrain =  false;\r\n                                                            }\r\n                                                            numberQuestion++;\r\n                                                            break;\r\n                                                        case 7 :\r\n                                                            numberQuestion++;\r\n                                                            if(!grain.grain_data.custom_data.correct_answer_list || grain.grain_data.custom_data.correct_answer_list.length === 0){\r\n                                                                validationGrain =  false;\r\n                                                            } else{\r\n                                                                var allFalse = true;\r\n                                                                angular.forEach(grain.grain_data.custom_data.correct_answer_list, function(current){\r\n                                                                    if(current.isChecked){\r\n                                                                        allFalse = false;\r\n                                                                    }\r\n                                                                });\r\n                                                                if(allFalse){\r\n                                                                    validationGrain = false;\r\n                                                                }\r\n                                                            }\r\n                                                            break;\r\n                                                        case 8 :\r\n                                                            numberQuestion++;\r\n                                                            if(!grain.grain_data.custom_data.correct_answer_list || grain.grain_data.custom_data.correct_answer_list.length === 0){\r\n                                                                validationGrain =  false;\r\n                                                            }\r\n                                                            break;\r\n                                                        case 9 :\r\n                                                            numberQuestion++;\r\n                                                            if(!grain.grain_data.custom_data.correct_answer_list || grain.grain_data.custom_data.correct_answer_list.length === 0){\r\n                                                                validationGrain =  false;\r\n                                                            }\r\n                                                            break;\r\n                                                        case 10 :\r\n                                                            numberQuestion++;\r\n                                                            // TODO\r\n                                                            break;\r\n                                                        case 11 :\r\n                                                            numberQuestion++;\r\n                                                            // TODO\r\n                                                            break;\r\n                                                        default :\r\n                                                            console.error(\"switch default for grain_type_id = \", grain.grain_type_id);\r\n                                                    }\r\n\r\n                                            });\r\n                                            if(numberQuestion === 0){\r\n                                                deferred.reject(\"Il est impossible de programmer un sujet vide\");\r\n                                            } else {\r\n                                                if(validationGrain === true){\r\n                                                    deferred.resolve();\r\n                                                } else{\r\n                                                    deferred.reject(\"Le sujet ne peut pas être programmé car des questions sans réponses renseignées subsistent\");\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    },\r\n                                    function (err){\r\n                                        deferred.reject(err);\r\n                                    }\r\n                                );\r\n                            } else {\r\n                                deferred.reject(\"Les dates de programmation ne sont pas cohérentes\")\r\n                            }\r\n                        } else {\r\n                            scope.scheduleSubjectInProgress = false;\r\n                            deferred.reject(\"Toutes les options de programmation ne sont pas remplies\")\r\n                        }\r\n                        return deferred.promise;\r\n                    }\r\n\r\n\r\n                    function createIdList(userList, groupList) {\r\n                        // get user target by the subject scheduled\r\n                        var deferred = $q.defer();\r\n                        var users = [];\r\n                        // part 1 : user\r\n                        angular.forEach(userList, function (user) {\r\n                            users.push({\r\n                                id: user._id,\r\n                                name: user.title\r\n                            });\r\n                        });\r\n                        // part 2 : group\r\n                        var promises = [];\r\n                        angular.forEach(groupList, function (group) {\r\n                            promises.push(GroupService.getUserFromGroup(group));\r\n                        });\r\n                        $q.all(promises).then(\r\n                            function (data) {\r\n                                angular.forEach(data, function (userList) {\r\n                                    angular.forEach(userList, function (user) {\r\n                                        users.push({\r\n                                            id: user.id,\r\n                                            name: user.displayName\r\n                                        });\r\n                                    });\r\n                                });\r\n                                var filtered_array = [], bool;\r\n                                angular.forEach(users, function (current_user) {\r\n                                    bool = true;\r\n                                    angular.forEach(filtered_array, function (filtered_current_user) {\r\n                                        if (filtered_current_user.id == current_user.id) {\r\n                                            bool = false;\r\n                                        }\r\n                                    });\r\n                                    if (bool) {\r\n                                        filtered_array.push(current_user);\r\n                                    }\r\n                                });\r\n                                deferred.resolve(filtered_array);\r\n                            }\r\n                        );\r\n                        return deferred.promise;\r\n                    }\r\n\r\n                    function createSubjectScheduled(subject, option, data) {\r\n                        var deferred = $q.defer();\r\n                        // create scheduled subject from subject\r\n                        var subjectScheduled = SubjectScheduledService.createFromSubject(subject);\r\n                        // add attributes from option\r\n                        subjectScheduled.begin_date = option.begin_date;\r\n                        subjectScheduled.due_date = option.due_date;\r\n                        subjectScheduled.estimated_duration = option.estimated_duration;\r\n                        subjectScheduled.is_one_shot_submit = !option.allow_students_to_update_copy;\r\n                        //subjectScheduled.has_automatic_display = option.has_automatic_display;\r\n                        // persist scheduled subject\r\n                        subjectScheduled.scheduled_at = createSubjectScheduledAt(data);\r\n                        SubjectScheduledService.persist(subjectScheduled).then(\r\n                            function (subjectScheduled) {\r\n                                // create grainScheduled\r\n                                createGrainListScheduled(subjectScheduled, subject).then(\r\n                                    function (data) {\r\n                                        // resolve\r\n                                        deferred.resolve(subjectScheduled);\r\n                                    }\r\n                                );\r\n\r\n                            },\r\n                            function (err) {\r\n                                deferred.reject(err);\r\n                            }\r\n                        );\r\n\r\n                        return deferred.promise;\r\n                    }\r\n\r\n                    function createSubjectScheduledAt(data) {\r\n                        if (!data) {\r\n                            throw \"data missing\";\r\n                        }\r\n                        var res = {\r\n                            groupList: [],\r\n                            userList: []\r\n                        };\r\n                        angular.forEach(data.groupList, function (group) {\r\n                            res.groupList.push({\r\n                                _id: group._id,\r\n                                name: group.title\r\n                            })\r\n                        });\r\n                        angular.forEach(data.userList, function (user) {\r\n                            res.userList.push({\r\n                                _id: user._id,\r\n                                name: user.title\r\n                            })\r\n                        });\r\n                        return JSON.stringify(res);\r\n                    }\r\n\r\n\r\n                    function createGrainListScheduled(subjectScheduled, subject) {\r\n                        var deferred = $q.defer();\r\n                        // get list grain from subject\r\n                        GrainService.getListBySubject(subject).then(\r\n                            function (data) {\r\n                                // create grain list scheduled\r\n                                var grainListScheduled = GrainScheduledService.createGrainScheduledList(data);\r\n                                var promises = [];\r\n                                // persist grainListScheduled\r\n                                angular.forEach(grainListScheduled, function (grainScheduled) {\r\n                                    grainScheduled.subject_scheduled_id = subjectScheduled.id;\r\n                                    promises.push(GrainScheduledService.persist(grainScheduled, subject));\r\n                                });\r\n                                $q.all(promises).then(\r\n                                    function (data) {\r\n                                        deferred.resolve(data);\r\n                                    }\r\n                                )\r\n                            }\r\n                        );\r\n                        return deferred.promise;\r\n                    }\r\n\r\n                    function createSubjectCopy(subjectScheduled, user) {\r\n                        var deferred = $q.defer();\r\n                        // create copy subject from subject scheduled;\r\n                        var subjectCopy = SubjectCopyService.createFromSubjectScheduled(subjectScheduled);\r\n                        // add attributes from option\r\n                        subjectCopy.owner = user.id;\r\n                        subjectCopy.owner_username = user.name;\r\n                        // persist subjectCopy\r\n                        SubjectCopyService.persist(subjectCopy).then(\r\n                            function (subjectCopy) {\r\n                                // create grainScheduled\r\n                                // no callback for the create of grain copy\r\n                                createGrainListCopy(subjectCopy, subjectScheduled);\r\n                                // resolve\r\n                                deferred.resolve(subjectCopy);\r\n                            },\r\n                            function (err) {\r\n                                deferred.reject(err);\r\n                            }\r\n                        );\r\n                        return deferred.promise;\r\n                    }\r\n\r\n\r\n                    function createGrainListCopy(subjectCopy, subjectScheduled) {\r\n                        var deferred = $q.defer();\r\n                        // get list grain from subject\r\n                        GrainScheduledService.getListBySubjectScheduled(subjectScheduled).then(\r\n                            function (grainScheduledList) {\r\n                                // create grain list scheduled\r\n                                var grainListCopy = GrainCopyService.createGrainCopyList(grainScheduledList);\r\n                                var promises = [];\r\n                                // persist grainListScheduled\r\n                                angular.forEach(grainListCopy, function (grainCopy) {\r\n                                    grainCopy.subject_copy_id = subjectCopy.id;\r\n                                    promises.push(GrainCopyService.persist(grainCopy, subjectScheduled));\r\n                                });\r\n                                $q.all(promises).then(\r\n                                    function (data) {\r\n                                        deferred.resolve(data);\r\n                                    }\r\n                                )\r\n                            }\r\n                        );\r\n                        return deferred.promise;\r\n                    }\r\n\r\n\r\n                    /**\r\n                     * MODAL\r\n                     */\r\n\r\n                        // event to display model\r\n                    scope.$on(\"E_DISPLAY_MODAL_SCHEDULE_SUBJECT\", function (event, subject) {\r\n                        GrainService.getListBySubject(subject).then(\r\n                            function (grainList:IGrain[]) {\r\n                                if (grainList.length > 0) {\r\n                                    scope.subject = subject;\r\n                                    scope.isDisplayed = true;\r\n                                    reset();\r\n                                    scope.data.lists = createLists(subject);\r\n                                } else {\r\n                                    notify.info('Vous ne pouvez pas programmer un sujet vide.');\r\n                                }\r\n                            },\r\n                            function (err) {\r\n                                notify.error(err);\r\n                            }\r\n                        );\r\n\r\n                    });\r\n\r\n                    scope.hide = function () {\r\n                        // cheat\r\n                        $('[data-drop-down]').height(\"\");\r\n                        $('[data-drop-down]').addClass('hidden');\r\n                        scope.isDisplayed = false;\r\n                        scope.state = 'assignSubject';\r\n                        scope.$emit('E_RESET_SELECTED_LIST');\r\n                    };\r\n\r\n                    /**\r\n                     * FUNCTION PRIVATE\r\n                     */\r\n\r\n                    function addInList(list, item) {\r\n                        var index = list.indexOf(item);\r\n                        if (index === -1) {\r\n                            list.push(item);\r\n                        } else {\r\n                            console.error('item already in the list');\r\n                        }\r\n                    }\r\n\r\n                    function removeInList(list, item) {\r\n                        var index = list.indexOf(item);\r\n                        if (index !== -1) {\r\n                            list.splice(index, 1);\r\n                        }\r\n                    }\r\n\r\n                    function createLists(subject) {\r\n                        var array = [];\r\n                        GroupService.getList(subject).then(\r\n                            function (data) {\r\n                                angular.forEach(data.groups.visibles, function (group) {\r\n                                    var obj = createObjectList(group.name, group.id, 'group');\r\n                                    array.push(obj);\r\n                                });\r\n                                angular.forEach(data.users.visibles, function (group) {\r\n                                    var obj = createObjectList(group.username, group.id, 'user');\r\n                                    array.push(obj);\r\n                                })\r\n                            }\r\n                        );\r\n                        return array;\r\n                    }\r\n\r\n                    function createObjectList(name, id, groupOrUser) {\r\n                        return {\r\n                            title: name,\r\n                            _id: id,\r\n                            groupOrUser: groupOrUser,\r\n                            toString: function () {\r\n                                return this.title;\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'subjectViewCopyGrainCopyList',\r\n        injections: ['$filter', ($filter) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    subjectScheduled: '=',\r\n                    subjectCopy: '=',\r\n                    grainScheduledList: '=',\r\n                    grainCopyList: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_view_copy/templates/subject-view-copy-grain-copy-list.html',\r\n                link:(scope:any) => {\r\n                    scope.getGrainScheduled = function(grainCopy:IGrainCopy) {\r\n                       /* var  grainScheduledListOrder = $filter('orderObjectBy')(scope.grainScheduledList, 'order_by', false);\r\n                        return grainScheduledListOrder[scope.grainCopyList.indexOf(grainCopy)];*/\r\n                        var result = scope.grainScheduledList.filter(function( obj ) {\r\n                            return obj.id == grainCopy.grain_scheduled_id;\r\n                        });\r\n                        if(result.length === 1){\r\n                            return result[0]\r\n                        } else{\r\n                            throw \"grain Scheduled not found\"\r\n                        }\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n\r\n\r\n","directives.push(\r\n    {\r\n        name: 'subjectViewCopyPreviewHeader',\r\n        injections: ['$location', 'SubjectCopyService', ($location, SubjectCopyService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    previewingFromLibrary: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_view_copy/templates/subject-view-copy-preview-header.html',\r\n                link:(scope:any) => {\r\n\r\n                    scope.redirectToTeacherDashboardLibraryTab = function() {\r\n                        if (scope.previewingFromLibrary) {\r\n                            $location.path('/dashboard/teacher/library');\r\n                        }\r\n                    };\r\n\r\n                    scope.redirectToSubjectEdit = function() {\r\n                        if (!scope.previewingFromLibrary) {\r\n                            $location.path('/subject/edit/' + scope.subjectScheduled.subject_id + '/');\r\n                        }\r\n                    };\r\n\r\n                    scope.redirectToSubjectPreviewPerformCopy = function() {\r\n                        SubjectCopyService.tmpPreviewData = undefined;\r\n\r\n                        $location.path('/subject/copy/preview/perform/' + scope.subjectScheduled.subject_id + '/');\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'subjectViewCopyStudentHeader',\r\n        injections: ['$location', ($location) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    subjectCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_view_copy/templates/subject-view-copy-student-header.html',\r\n                link:(scope:any) => {\r\n                    scope.redirectToDashboard = function() {\r\n                        $location.path('/dashboard');\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'subjectViewCopyTeacherHeader',\r\n        injections: ['$location','SubjectCopyService', ($location, SubjectCopyService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    subjectScheduled: '=',\r\n                    subjectCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/subject_view_copy/templates/subject-view-copy-teacher-header.html',\r\n                link:(scope:any) => {\r\n                    scope.redirectToDashboard = function(isCorrected:boolean) {\r\n                        if (isCorrected) {\r\n                            var copy = SubjectCopyService.getById(scope.subjectCopy.id);\r\n                            copy.is_correction_on_going = true;\r\n                            copy.is_corrected = true;\r\n                            scope.$emit('E_UPDATE_SUBJECT_COPY', copy, true);\r\n                        } else {\r\n                            $location.path('/dashboard/teacher/correction/'+scope.subjectScheduled.id);\r\n                        }\r\n                    };\r\n                    \r\n                    scope.$on('E_SUBJECT_COPY_UPDATED', function(event, redirect:boolean) {\r\n                        if (redirect) {\r\n                            $location.path('/dashboard/teacher/correction/'+scope.subjectScheduled.id);\r\n                        }\r\n                    });\r\n\r\n                    scope.copyIsCorrected = function(){\r\n                        return scope.subjectCopy.is_corrected;\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'subjectCopyDomino',\r\n        injections: ['DateService', '$location', 'SubjectScheduledService','SubjectCopyService',\r\n            (DateService, $location, SubjectScheduledService, SubjectCopyService) => {\r\n                return {\r\n                    restrict: 'E',\r\n                    scope: {\r\n                        subjectCopy: '=',\r\n                        subjectScheduled: '='\r\n                    },\r\n                    templateUrl: 'exercizer/public/app/components/dashboard/student_dashboard/common/templates/subject-copy-domino.html',\r\n                    link: (scope:any) => {\r\n\r\n                        /**\r\n                         * ACCESS Perform, view\r\n                         */\r\n\r\n                        scope.selectTitle = function(){\r\n                            if(SubjectCopyService.canPerformACopyAsStudent(scope.subjectScheduled, scope.subjectCopy)){\r\n                                return 'perform'\r\n                            } else if(SubjectCopyService.canAccessViewAsStudent(scope.subjectScheduled, scope.subjectCopy)){\r\n                                return 'view'\r\n                            } else{\r\n                                return 'text'\r\n                            }\r\n                        };\r\n\r\n                        scope.performSubjectCopy = function (subjectCopyId) {\r\n                            $location.path('/subject/copy/perform/' + subjectCopyId);\r\n                        };\r\n\r\n                        scope.viewSubjectCopy = function (subjectCopyId) {\r\n                            $location.path('/subject/copy/view/' + subjectCopyId);\r\n                        };\r\n\r\n                        /**\r\n                         * GET subject Scheduled information\r\n                         */\r\n\r\n                        scope.getSubjectCopyPicture = function () {\r\n                            return scope.subjectScheduled.picture || '/assets/themes/leo/img/illustrations/poll-default.png';\r\n                        };\r\n\r\n                        scope.getSubjectCopySubmittedDate = function () {\r\n                            if (scope.subjectCopy.submitted_date) {\r\n                                return DateService.isoToDate(scope.subjectCopy.submitted_date);\r\n                            } else {\r\n                                return '';\r\n                            }\r\n                        };\r\n                        scope.getSubjectScheduledTitle = function () {\r\n                            return scope.subjectScheduled.title || 'Titre';\r\n                        };\r\n                        scope.getSubjectScheduledOwner = function () {\r\n                            return scope.subjectScheduled.owner_username || '';\r\n                        };\r\n                        scope.getSubjectScheduledMaxScore = function () {\r\n                            return scope.subjectScheduled.max_score || '0';\r\n                        };\r\n\r\n                        /**\r\n                         * Get subject copy information\r\n                         */\r\n\r\n                        scope.getSubjectCopyDueDate = function () {\r\n                            if (scope.subjectScheduled.due_date) {\r\n                                return DateService.isoToDate(scope.subjectScheduled.due_date);\r\n                            } else {\r\n                                return '';\r\n                            }\r\n                        };\r\n\r\n                        /**\r\n                         * DISPLAY\r\n                         */\r\n\r\n                        scope.isColorColumnDisplay = function () {\r\n                            if (scope.subjectCopy.submitted_date\r\n                                || scope.subjectCopy.is_correction_on_going\r\n                                || scope.subjectCopy.is_corrected\r\n                            ){\r\n                                return true;\r\n                            } else {\r\n                                return false;\r\n                            }\r\n                        };\r\n\r\n                        scope.copyStateColorClass = function(){\r\n                            return SubjectCopyService.copyStateColorClass(scope.subjectCopy);\r\n                        };\r\n\r\n                        scope.copyStateBackGroundColorClass = function(){\r\n                            return SubjectCopyService.copyStateBackGroundColorClass(scope.subjectCopy);\r\n                        };\r\n\r\n                        scope.textBeforeTitle = function(){\r\n                            return SubjectCopyService.copyStateText(scope.subjectCopy)?  SubjectCopyService.copyStateText(scope.subjectCopy) + \" - \" : \"\";\r\n                        };\r\n\r\n                        scope.isDueDateDisplayed = function(){\r\n                          return !scope.subjectCopy.submitted_date;\r\n                        };\r\n\r\n                        scope.isSubmittedDateDisplayed = function(){\r\n                          return scope.subjectCopy.submitted_date;\r\n                        };\r\n\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'studentDashboardFinishSubjectCopyList',\r\n        injections: ['DateService', 'SubjectCopyService', 'SubjectScheduledService', '$location',\r\n            (DateService, SubjectCopyService, SubjectScheduledService, $location) => {\r\n                return {\r\n                    restrict: 'E',\r\n                    scope: {\r\n                    },\r\n                    templateUrl: 'exercizer/public/app/components/dashboard/student_dashboard/student_dashboard_finish_subject_copy_list/templates/student-dashboard-finish-subject-copy-list.html',\r\n                    link: (scope:any) => {\r\n\r\n                        // Subject data\r\n                        scope.subjectCopyList = SubjectCopyService.getList();\r\n\r\n                        // Date data\r\n                        var today = new Date();\r\n                        scope.dateInAYears = DateService.addDays(today, 354);\r\n                        scope.dateAYearsAgo = DateService.addDays(today, -354);\r\n                        //search\r\n                        if(!scope.search){\r\n                            scope.search = {\r\n                                endDate : scope.dateInAYears,\r\n                                beginDate : scope.dateAYearsAgo,\r\n                                filter : null\r\n                            };\r\n                        }\r\n\r\n                        scope.clickFilter = function(filter){\r\n                            if(scope.search.filter == filter){\r\n                                scope.search.filter = null\r\n                            } else{\r\n                                scope.search.filter = filter\r\n                            }\r\n                        };\r\n\r\n                        scope.filerIsSelected = function(filter_a, filter_b){\r\n                            if(filter_a === filter_b){\r\n                                return 'custom-selected'\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'studentDashboardSubjectCopyList',\r\n        injections: ['DateService', 'SubjectCopyService', 'SubjectScheduledService', '$location',\r\n            (DateService, SubjectCopyService, SubjectScheduledService, $location) => {\r\n                return {\r\n                    restrict: 'E',\r\n                    scope: {},\r\n                    templateUrl: 'exercizer/public/app/components/dashboard/student_dashboard/student_dashboard_subject_copy_list/templates/student-dashboard-subject-copy-list.html',\r\n                    link: (scope:any) => {\r\n\r\n                        // Get data\r\n                        scope.subjectCopyList = [];\r\n                        SubjectCopyService.resolve(false).then(\r\n                            function () {\r\n                                scope.subjectCopyList = SubjectCopyService.getList();\r\n                            }\r\n                        );\r\n                        SubjectScheduledService.resolve(false).then(\r\n                            function(){\r\n                            }\r\n                        );\r\n\r\n                        // Date\r\n                        scope.today = new Date();\r\n                        scope.dateInAWeek = DateService.addDays(scope.today, 8);\r\n                        scope.dateInAYears = DateService.addDays(scope.today, 354);\r\n\r\n                        // Search\r\n                        if (!scope.search) {\r\n                            scope.search = {\r\n                                beginDate : scope.dateInAWeek,\r\n                                endDate : scope.dateInAYears\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'dashboardTeacherTab',\r\n        injections: [ '$location', '$window', 'SubjectService', ($location, $window, SubjectService:ISubjectService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    currentTab: \"=\",\r\n                    selectedSubjectScheduled : \"=\"\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/common/templates/dashboard-teacher-tab.html',\r\n                link: (scope:any) => {\r\n\r\n                    scope.switchTab = function (newTab) {\r\n                        switch (newTab){\r\n                            case 'mySubjects':\r\n                                SubjectService.resolve(true).then(\r\n                                    function(){\r\n                                        $location.path('/dashboard');\r\n                                    },\r\n                                    function(err) {\r\n                                        notify.error(err);\r\n                                    }\r\n                                );\r\n\r\n                                break;\r\n                            case 'correction':\r\n                                $location.path('/dashboard/teacher/correction/');\r\n                                break;\r\n                            case 'library':\r\n                                $location.path('/dashboard/teacher/library');\r\n                                break;\r\n                            default:\r\n                                throw 'tab ' + newTab + ' missing'\r\n                        }\r\n                    };\r\n\r\n                    scope.switchToStudentView = function () {\r\n                        $location.path('/dashboard/student');\r\n                        setTimeout(\r\n                            function(){\r\n                                $window.location.reload();\r\n                            },\r\n                            1);\r\n                    };\r\n\r\n                    scope.clickReturnExercizer = function(){\r\n                        switch (scope.currentTab){\r\n                            case 'mySubjects':\r\n                                break;\r\n                            case 'correction':\r\n                                scope.selectedSubjectScheduled = null;\r\n                                $location.path('/dashboard');\r\n                                break;\r\n                            case 'library':\r\n                                scope.selectedSubjectScheduled = null;\r\n                                $location.path('/dashboard');\r\n                                break;\r\n                            default :\r\n                                throw \"tab \"+scope.currentTab+\"  missing\"\r\n                        }\r\n\r\n                    };\r\n\r\n                    scope.clickReturnExercizerTab = function(){\r\n                        switch (scope.currentTab){\r\n                            case 'mySubjects':\r\n                                break;\r\n                            case 'correction':\r\n                                scope.selectedSubjectScheduled = null;\r\n                                $location.path('/dashboard/teacher/correction');\r\n                                break;\r\n                            case 'library':\r\n                                break;\r\n                            default :\r\n                                throw \"tab \"+scope.currentTab+\"  missing\"\r\n                        }\r\n\r\n                    };\r\n\r\n                    scope.getTab = function(){\r\n                        switch (scope.currentTab){\r\n                            case 'mySubjects':\r\n                                return \"Mes sujets\";\r\n                            case 'correction':\r\n                                return \"Correction\";\r\n                            case 'library':\r\n                                return \"Bibliothèque\";\r\n                            default :\r\n                                throw \"tab \"+scope.currentTab+\"  missing\"\r\n                        }\r\n                    };\r\n\r\n                    scope.getSubjectSelectedTitle = function(){\r\n                        if(scope.selectedSubjectScheduled){\r\n                            return scope.selectedSubjectScheduled.title\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'sharePanelModal',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/common/templates/share-panel.html',\r\n                link: (scope:any, element, attrs) => {\r\n\r\n                    scope.isDisplayed = false;\r\n                    scope.subject = [];\r\n\r\n                    // event to display model\r\n                    scope.$on(\"E_DISPLAY_DASHBOARD_MODAL_SHARE\", function(event, subject) {\r\n                        scope.isDisplayed = true;\r\n                        var subjectSharePanel = angular.copy(subject);\r\n                        subjectSharePanel._id = subjectSharePanel.id;\r\n                        scope.subject = [subjectSharePanel];\r\n                    });\r\n\r\n                    // hide model\r\n                    scope.hide = function () {\r\n                        scope.isDisplayed = false;\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'subjectScheduledAssignAt',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/common/templates/subject-scheduled-assign-at.html',\r\n                link: (scope:any, element, attrs) => {\r\n\r\n                    scope.isDisplayed = false;\r\n                    scope.subject = [];\r\n\r\n                    // event to display model\r\n                    scope.$on(\"SEE_SUBJECT_SCHEDULED_ASSIGN_AT\", function(event, data) {\r\n                        scope.isDisplayed = true;\r\n                        scope.subjectScheduled = data.subjectScheduled;\r\n                    });\r\n\r\n                    // hide model\r\n                    scope.hide = function () {\r\n                        scope.isDisplayed = false;\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardCorrectionCopyList',\r\n        injections: ['SubjectCopyService', '$location', 'GroupService','DateService','$q', (SubjectCopyService, $location, GroupService, DateService, $q) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    selectedSubjectScheduled : \"=\"\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_correction_tab/templates/teacher-dashboard-correction-copy-list.html',\r\n                link: (scope:any) => {\r\n\r\n                    scope.$watch('selectedSubjectScheduled', function(newValue, oldValue) {\r\n                        if(scope.selectedSubjectScheduled){\r\n                            init(scope.selectedSubjectScheduled);\r\n                        }\r\n                    });\r\n\r\n                    /**\r\n                     * INIT\r\n                     */\r\n                    scope.subjectCopyList = [];\r\n                    scope.toasterDisplayed = false;\r\n\r\n                    function init(subjectScheduled){\r\n                        SubjectCopyService.resolveBySubjectScheduled_force(subjectScheduled).then(\r\n                            function () {\r\n                                scope.subjectCopyList = SubjectCopyService.getListBySubjectScheduled(subjectScheduled);\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    /**\r\n                     * EVENT\r\n                     */\r\n\r\n                    scope.selectCopy = function(){\r\n                        var res = false;\r\n                        angular.forEach(scope.subjectCopyList, function(copy){\r\n                            if(copy.selected){\r\n                                res = true\r\n                            }\r\n                        });\r\n                        scope.toasterDisplayed =  res;\r\n                    };\r\n\r\n                    scope.clickSelectAll = function(selectAll){\r\n                        angular.forEach(scope.subjectCopyList, function(copy){\r\n                            copy.selected = selectAll\r\n                        });\r\n                        scope.toasterDisplayed =  selectAll;\r\n                    };\r\n\r\n                    scope.clickOnCopy = function(copy){\r\n                        $location.path('/subject/copy/view/'+scope.selectedSubjectScheduled.subject_id +'/'+ copy.id+'/');\r\n                    };\r\n\r\n                    scope.clickReturnSubjectScheduledList = function(){\r\n                        scope.selectedSubjectScheduled = null;\r\n                        $location.path('/dashboard/teacher/correction');\r\n                    };\r\n\r\n                    scope.applyAutomaticMark = function(){\r\n                        var promises = [];\r\n                        angular.forEach(scope.subjectCopyList, function(copy){\r\n                            if(SubjectCopyService.canCorrectACopyAsTeacher(scope.selectedSubjectScheduled, copy) && copy.selected){\r\n                                copy.is_corrected = true;\r\n                                promises.push(SubjectCopyService.update(copy));\r\n                            }\r\n                        });\r\n                        scope.selectAll = false;\r\n                        $q.all(promises).then(\r\n                            function(data){\r\n                                scope.clickSelectAll(scope.selectAll);\r\n                            }\r\n                        );\r\n                    };\r\n\r\n                    /**\r\n                     * DISPLAY\r\n                     */\r\n\r\n                    scope.selectTitle = function (copy){\r\n                        if(SubjectCopyService.canCorrectACopyAsTeacher(scope.selectedSubjectScheduled, copy)){\r\n                            return 'correction'\r\n                        } else{\r\n                            return 'text'\r\n                        }\r\n                    };\r\n\r\n                    scope.canCorrectACopyAsTeacher = function(copy){\r\n                        return SubjectCopyService.canCorrectACopyAsTeacher(scope.selectedSubjectScheduled, copy);\r\n                    };\r\n\r\n                    scope.copyStateText = function(copy){\r\n                        return SubjectCopyService.copyStateText(copy);\r\n                    };\r\n\r\n                    scope.copyStateBackGroundColorClass = function(copy){\r\n                        return SubjectCopyService.copyStateBackGroundColorClass(copy);\r\n                    };\r\n\r\n                    scope.numberCopyNotCorrected = function(){\r\n                        var res = 0;\r\n                        angular.forEach(scope.subjectCopyList, function(copy){\r\n                            if(!copy.is_corrected){\r\n                                res++;\r\n                            }\r\n                        });\r\n                        return res;\r\n                    };\r\n\r\n                    scope.numberCopySubmitted = function(){\r\n                        var res = 0;\r\n                        angular.forEach(scope.subjectCopyList, function(copy){\r\n                            if(copy.submitted_date){\r\n                                res++;\r\n                            }\r\n                        });\r\n                        return res;\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardCorrectionSubjectScheduledList',\r\n        injections: ['SubjectScheduledService', 'SubjectService', 'GroupService','DateService','SubjectCopyService','$location','$route', (SubjectScheduledService, SubjectService, GroupService, DateService,SubjectCopyService, $location, $route) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    selectedSubjectScheduled : \"=\"\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_correction_tab/templates/teacher-dashboard-correction-subject-scheduled-list.html',\r\n                link: (scope:any) => {\r\n\r\n                    /**\r\n                     * INIT\r\n                     */\r\n                    scope.subjectScheduledList = [];\r\n                    // Date data\r\n                    scope.today = new Date();\r\n                    scope.dateAYearshAgo = DateService.addDays(scope.today, -365);\r\n                    scope.dateInAYears = DateService.addDays(scope.today, 365);\r\n                    scope.search = {\r\n                        groupList: [],\r\n                        beginDate : scope.dateAYearshAgo,\r\n                        endDate : scope.dateInAYears\r\n                    };\r\n\r\n                    /**\r\n                     * LOAD\r\n                     */\r\n                    // load subject scheduled\r\n                    // revolve true means teacher\r\n                    SubjectScheduledService.resolve(true).then(\r\n                        function () {\r\n                            scope.subjectScheduledList = SubjectScheduledService.getList();\r\n                            if (scope.subjectScheduledList.length !== 0) {\r\n                                // get auto complete\r\n                                scope.autocomplete = {\r\n                                    groupList: createListAutoComplete(scope.subjectScheduledList)\r\n                                };\r\n                                var subjectId = scope.subjectScheduledList[0].subject_id;\r\n                                SubjectService.getByIdEvenDeleted(subjectId).then(\r\n                                    function(data){\r\n                                        var subject = data;\r\n                                        if (subject instanceof Subject) {\r\n                                            /*GroupService.getList(subject).then(\r\n                                                function (data) {\r\n                                                    scope.autocomplete = {\r\n                                                        groupList: createListAutoComplete(data.groups.visibles)\r\n                                                    }\r\n                                                }\r\n                                            )*/\r\n                                        } else {\r\n                                            console.error(subject, 'is not an instance of Subject');\r\n                                            throw \"\";\r\n                                        }\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                    function createListAutoComplete(subjectScheduledList) {\r\n                        var array = [];\r\n                        angular.forEach(subjectScheduledList, function (subjectScheduled) {\r\n                            angular.forEach(subjectScheduled.scheduled_at.groupList, function(group){\r\n                                var obj = {\r\n                                    name: group.name,\r\n                                    id: group._id,\r\n                                    toString: function () {\r\n                                        return this.name;\r\n                                    }\r\n                                };\r\n                                var isSet = false;\r\n                                angular.forEach(array, function(alreadySet){\r\n                                    if(obj.id == alreadySet.id){\r\n                                        isSet = true;\r\n                                    }\r\n                                });\r\n                                if(isSet === false){\r\n                                    array.push(obj);\r\n                                }\r\n                            })\r\n\r\n                        });\r\n                        return array;\r\n                    }\r\n\r\n                    /**\r\n                     * GET subject Scheduled information\r\n                     */\r\n                    scope.getSubjectScheduledPicture = function (subjectScheduled) {\r\n                        return subjectScheduled.picture || '/assets/themes/leo/img/illustrations/poll-default.png';\r\n                    };\r\n\r\n                    scope.numberOfCopySubmitted = function (subjectScheduled){\r\n                        var list = SubjectCopyService.getListBySubjectScheduled(subjectScheduled),\r\n                            res = 0;\r\n                        angular.forEach(list, function(copy){\r\n                           if(copy.submitted_date){\r\n                               res++\r\n                           }\r\n                        });\r\n                        return res;\r\n                    };\r\n\r\n                    scope.numberOfCopy = function (subjectScheduled){\r\n                        var list = SubjectCopyService.getListBySubjectScheduled(subjectScheduled);\r\n                        return list.length;\r\n                    };\r\n\r\n                    function isListCopyCorrected(list){\r\n                        if(list){\r\n                            var res = true;\r\n                            angular.forEach(list, function(copy){\r\n                                if(!copy.is_corrected){\r\n                                    res = false\r\n                                }\r\n                            });\r\n                            return res;\r\n                        } else{\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    scope.stateTextSubjectScheduled = function(subjectScheduled){\r\n                        var list = SubjectCopyService.getListBySubjectScheduled(subjectScheduled);\r\n                        if(isListCopyCorrected(list)){\r\n                            return \"Corrigé\";\r\n                        } else{\r\n                            return \"Non corrigé\";\r\n                        }\r\n                    };\r\n\r\n                    scope.stateSubjectScheduled = function(subjectScheduled){\r\n                        var list = SubjectCopyService.getListBySubjectScheduled(subjectScheduled);\r\n                        if(isListCopyCorrected(list)){\r\n                            return \"is_corrected\";\r\n                        } else{\r\n                            return \"is_not_corrected\";\r\n                        }\r\n                    };\r\n\r\n                    /**\r\n                     * EVENT\r\n                     */\r\n\r\n                    // autocomplete\r\n                    scope.clickOnItem = function (selectedItem) {\r\n                        if(scope.search.groupList.indexOf(selectedItem) != -1){\r\n                            scope.search.groupList.splice(scope.search.groupList.indexOf(selectedItem), 1);\r\n                        } else{\r\n                            scope.search.groupList.push(selectedItem);\r\n                        }\r\n                    };\r\n\r\n                    scope.isGroupSelected = function(item){\r\n                        if(scope.search.groupList.indexOf(item) != -1){\r\n                            return 'custom-selected'\r\n                        }\r\n                    };\r\n\r\n                    scope.clickFilter = function (filter) {\r\n                        scope.search.filter = scope.search.filter == filter ? null : filter;\r\n                    };\r\n\r\n                    scope.clickOnSubjectScheduled = function(subjectScheduled){\r\n                        scope.selectedSubjectScheduled = subjectScheduled;\r\n                        $location.path('/dashboard/teacher/correction/'+subjectScheduled.id);\r\n                    };\r\n\r\n                    /**\r\n                     * DISPLAY\r\n                     */\r\n\r\n                    scope.filerIsSelected = function(filter_a, filter_b){\r\n                        if(filter_a === filter_b){\r\n                            return 'custom-selected'\r\n                        }\r\n                    };\r\n\r\n                    /**\r\n                     * FILTER ANGULAR\r\n                     */\r\n\r\n                    scope.filterOnSubjectScheduledDueDate = function (begin, end) {\r\n                        return function (subjectScheduled) {\r\n                            var dueDate = DateService.isoToDate(subjectScheduled.due_date);\r\n                            if (!begin || !end) {\r\n                                throw \"begin or end date in params missing\"\r\n                            }\r\n                            return DateService.compare_after(dueDate, begin, true) && DateService.compare_after(end, dueDate, true);\r\n                        }\r\n                    };\r\n                    scope.filterOnGroupSelected = function (groupSelectedList) {\r\n                        return function (subjectScheduled) {\r\n                            if (!groupSelectedList || groupSelectedList.length == 0) {\r\n\r\n                                return true;\r\n                            } else {\r\n                                var res = false;\r\n                                angular.forEach(subjectScheduled.scheduled_at.groupList, function (group) {\r\n                                    angular.forEach(groupSelectedList, function(groupSelected){\r\n                                        if (group._id == groupSelected.id) {\r\n                                            res = true\r\n                                        }\r\n                                    });\r\n\r\n                                });\r\n                                return res;\r\n\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    scope.seeAllAssignAtList = function(subjectScheduled){\r\n                        scope.$emit('E_SEE_SUBJECT_SCHEDULED_ASSIGN_AT', {subjectScheduled : subjectScheduled});\r\n                    };\r\n\r\n                    scope.filterOnGroupSelectedState = function(filter){\r\n                        return function (subjectScheduled){\r\n                            if(!filter){\r\n                                return true;\r\n                            } else{\r\n                                var list = SubjectCopyService.getListBySubjectScheduled(subjectScheduled);\r\n                                if(filter == 'corrected'){\r\n                                    return isListCopyCorrected(list);\r\n                                } else if(filter == 'notCorrected'){\r\n                                    return !isListCopyCorrected(list);\r\n                                } else{\r\n                                    throw \"filter unknown\"\r\n                                }\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    scope.orderByCopyListModificationDate = function(subjectScheduled){\r\n                        var copyList = SubjectCopyService.getListBySubjectScheduled(subjectScheduled);\r\n                        var lastUpdateCopy = null;\r\n                        angular.forEach(copyList, function(copy){\r\n                            if(lastUpdateCopy){\r\n                                if(DateService.compare_after(DateService.isoToDate(copy.modified), DateService.isoToDate(lastUpdateCopy))){\r\n                                    lastUpdateCopy = copy;\r\n                                }\r\n                            } else{\r\n                                lastUpdateCopy = copy;\r\n                            }\r\n                        });\r\n                        if(lastUpdateCopy !== null){\r\n                            return lastUpdateCopy.modified;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardCopyPaste',\r\n        injections: ['FolderService', 'SubjectService', (FolderService, SubjectService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-copy-paste.html',\r\n                link: (scope:any, element, attrs) => {\r\n\r\n                    scope.isDisplayed = false;\r\n                    scope.data = {\r\n                        selectedFolder : null\r\n                    };\r\n                    scope.allFolderList = FolderService.folderList;\r\n\r\n                    // event to display model\r\n                    scope.$on(\"E_DISPLAY_DASHBOARD_MODAL_COPY_PASTE\", function(event, selectedSubjectList, selectedFolderList, fromLibrary = false) {\r\n                        scope.isDisplayed = true;\r\n                        scope.fromLibrary = fromLibrary;\r\n                        scope.subjectList = selectedSubjectList;\r\n                        scope.folderList = selectedFolderList;\r\n                    });\r\n\r\n                    // confirm delete\r\n                    scope.pasteSelection = function () {\r\n                        var folder = null;\r\n                        if(scope.data.selectedFolder){\r\n                            folder = FolderService.folderById(scope.data.selectedFolder);\r\n                        }\r\n                        scope.$emit(\"E_CONFIRM_COPY_PASTE\", folder);\r\n                        scope.isDisplayed = false;\r\n                        scope.list = null;\r\n                    };\r\n\r\n                    // hide model\r\n                    scope.hide = function () {\r\n                        scope.isDisplayed = false;\r\n                        scope.list = null;\r\n                        scope.$emit('E_RESET_SELECTED_LIST');\r\n                    };\r\n\r\n                    // get label of folder\r\n                    scope.getFolderLabelById = function(id){\r\n                        var folder = FolderService.folderById(id);\r\n                        return folder? folder.label : null;\r\n                    };\r\n\r\n                    // get title of subject\r\n                    scope.getSubjectTitleById = function(id){\r\n                        var subject = SubjectService.getById(id);\r\n                        return subject ? subject.title : null;\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardFolderEdit',\r\n        injections: ['FolderService', (FolderService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-folder-edit.html',\r\n                link: (scope:any) => {\r\n\r\n                    scope.isDisplayed = false;\r\n                    scope.currentFolder = {};\r\n\r\n                    // event to display model\r\n                    scope.$on('E_DISPLAY_DASHBOARD_MODAL_EDIT_FOLDER', function(event, folder) {\r\n                        scope.folder = folder;\r\n                        if(folder){\r\n                            scope.state = 'edit';\r\n                            scope.currentFolder = {};\r\n                            scope.currentFolder.label = angular.copy(folder.label);\r\n\r\n                        } else {\r\n                            scope.state = 'create';\r\n                            scope.currentFolder = {};\r\n\r\n                        }\r\n                        scope.isDisplayed = true;\r\n                    });\r\n\r\n                    scope.save = function () {\r\n                        if (!scope.currentFolder.label || scope.currentFolder.label.length === 0) {\r\n                            notify.error('Veuillez renseigner un nom de dossier.');\r\n                        } else {\r\n                            \r\n                            if(scope.state === 'create'){\r\n                                var folder = new Folder();\r\n                                folder.label = angular.copy(scope.currentFolder.label);\r\n                                FolderService.persist(folder);\r\n                            } else if(scope.state === 'edit'){\r\n                                scope.folder.label = angular.copy(scope.currentFolder.label);\r\n                                FolderService.update(scope.folder);\r\n                            }\r\n                            \r\n                            scope.hide();\r\n                        }\r\n                    };\r\n\r\n                    // hide model\r\n                    scope.hide = function () {\r\n                        scope.isDisplayed = false;\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardPublishToLibrary',\r\n        injections: ['SubjectLibraryService', 'SubjectLessonTypeService', 'SubjectLessonLevelService', 'SubjectTagService',\r\n            (SubjectLibraryService:ISubjectLibraryService, SubjectLessonTypeService:ISubjectLessonTypeService, SubjectLessonLevelService:ISubjectLessonLevelService, SubjectTagService:ISubjectTagService) => {\r\n                return {\r\n                    restrict: 'E',\r\n                    templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-publish-to-library.html',\r\n                    link: (scope:any) => {\r\n\r\n                        scope.isDisplayed = false;\r\n                        scope.cc = {\r\n                            authorsContributors: undefined\r\n                        };\r\n                        scope.hasAgreedToPublish = true;\r\n                        scope.isPublicationOnGoing = false;\r\n                        scope.subject = null;\r\n                        scope.selection = {\r\n                            selectedSubjectLessonTypeId: null,\r\n                            selectedSubjectLessonLevelId: null\r\n                        };\r\n                        scope.selectedSubjectLessonTypeId = null;\r\n                        scope.selectedSubjectLessonLevelId = null;\r\n                        scope.subjectLessonTypeList = [];\r\n                        scope.subjectLessonLevelList = [];\r\n                        scope.subjectTagList = [];\r\n                        scope.autocompleteSubjectTagList = [];\r\n                        scope.selectedSubjectTagList = [];\r\n\r\n\r\n                        // event to display modal\r\n                        scope.$on('E_DISPLAY_MODAL_PUBLISH_TO_LIBRARY', function(event, subject:ISubject) {\r\n                            scope.subject = subject;\r\n\r\n                            SubjectLessonTypeService.resolve().then(\r\n                                function() {\r\n                                    scope.subjectLessonTypeList = SubjectLessonTypeService.getList();\r\n\r\n                                    SubjectLessonLevelService.resolve().then(\r\n                                        function() {\r\n                                            scope.subjectLessonLevelList = SubjectLessonLevelService.getList();\r\n\r\n                                            SubjectTagService.resolve().then(\r\n                                                function(subjectTagList:ISubjectTag[]) {\r\n                                                    scope.subjectTagList = subjectTagList;\r\n\r\n                                                    angular.forEach(scope.subjectTagList, function(value) {\r\n                                                        var obj = {\r\n                                                            id: value.id,\r\n                                                            label: value.label,\r\n                                                            toString: function () {\r\n                                                                return this.label;\r\n                                                            }\r\n                                                        };\r\n                                                        scope.autocompleteSubjectTagList.push(obj);\r\n                                                    });\r\n\r\n                                                    scope.isDisplayed = true;\r\n\r\n                                                },\r\n                                                function(err) {\r\n                                                    notify.error(err);\r\n                                                }\r\n                                            );\r\n                                        },\r\n                                        function(err) {\r\n                                            notify.error(err);\r\n                                        }\r\n                                    );\r\n                                },\r\n                                function(err) {\r\n                                    notify.error(err);\r\n                                }\r\n                            );\r\n\r\n                        });\r\n\r\n                        scope.toggleHasAgreedToPublish = function() {\r\n                            scope.hasAgreedToPublish = !scope.hasAgreedToPublish;\r\n                        };\r\n\r\n                        scope.selectSubjectLessonLevel = function(selectedSubjectLessonLevel) {\r\n                            console.log(selectedSubjectLessonLevel);\r\n                            scope.selectedSubjectLessonLevelId = selectedSubjectLessonLevel;\r\n                        };\r\n\r\n                        scope.selectSubjectTag = function(selectedSubjectTagObject) {\r\n                            for (var i = 0; i < scope.subjectTagList.length; ++i) {\r\n\r\n                                if (scope.subjectTagList[i].id === parseInt(selectedSubjectTagObject.id)) {\r\n\r\n                                    if (scope.selectedSubjectTagList.indexOf(scope.subjectTagList[i]) === -1) {\r\n                                        scope.selectedSubjectTagList.push(scope.subjectTagList[i]);\r\n                                    } else {\r\n                                        notify.info('Ce tag est déjà associé.')\r\n                                    }\r\n\r\n                                    i = scope.subjectTagList.length;\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        scope.addNewSubjectTag = function(newCustomTagLabel:string) {\r\n                            newCustomTagLabel = StringISOHelper.toISO(newCustomTagLabel);\r\n\r\n                            if (!angular.isUndefined(newCustomTagLabel)) {\r\n\r\n                                var isExisting = false;\r\n\r\n                                for (let i = 0; i < scope.subjectTagList.length; ++i) {\r\n                                    if (CompareStringHelper.compare(StringISOHelper.toISO(scope.subjectTagList[i].label), newCustomTagLabel)) {\r\n                                        notify.info('Ce tag existe déjà.');\r\n                                        i = scope.subjectTagList.length;\r\n                                        isExisting = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (!isExisting) {\r\n\r\n                                    var newSubjectTag = new SubjectTag(undefined, newCustomTagLabel);\r\n\r\n                                    isExisting = false;\r\n\r\n                                    for (let i = 0; i < scope.selectedSubjectTagList.length; ++i) {\r\n                                        if (CompareStringHelper.compare(StringISOHelper.toISO(scope.selectedSubjectTagList[i].label), newCustomTagLabel)) {\r\n                                            notify.info('Ce tag est déjà associé.');\r\n                                            i = scope.selectedSubjectTagList.length;\r\n                                            isExisting = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!isExisting) {\r\n                                        scope.selectedSubjectTagList.push(newSubjectTag);\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        scope.removeFromSelectedSubjectTagList = function(subjectTag:ISubjectTag) {\r\n                            var subjectTagIndex = scope.selectedSubjectTagList.indexOf(subjectTag);\r\n                            scope.selectedSubjectTagList.splice(subjectTagIndex, 1);\r\n                        };\r\n\r\n                        scope.publish = function() {\r\n                            if (!scope.hasAgreedToPublish) {\r\n                                notify.error('Vous devez acceptez de publier votre sujet en Creative Commons.')\r\n                            } else if (scope.selection.selectedSubjectLessonTypeId === null || scope.selection.selectedSubjectLessonTypeId === 'null' || scope.selection.selectedSubjectLessonLevelId === null || scope.selection.selectedSubjectLessonLevelId === 'null') {\r\n                                notify.error('Vous devez sélectionner une matière et un niveau.')\r\n                            } else {\r\n                                scope.isPublicationOnGoing = true;\r\n                                SubjectLibraryService.publish(scope.subject, StringISOHelper.toISO(scope.cc.authorsContributors), scope.selection.selectedSubjectLessonTypeId, scope.selection.selectedSubjectLessonLevelId, scope.selectedSubjectTagList).then(\r\n                                    function() {\r\n                                        scope.isPublicationOnGoing = false;\r\n                                        notify.info('Votre sujet a bien été publié dans la bibliothèque.');\r\n                                        scope.hide();\r\n                                    },\r\n                                    function(err) {\r\n                                        notify.error(err);\r\n                                    }\r\n                                );\r\n                            }\r\n                        };\r\n\r\n                        // hide modal\r\n                        scope.hide = function () {\r\n                            if (!scope.isPublicationOnGoing) {\r\n                                scope.isDisplayed = false;\r\n                                scope.hasAgreedToPublish = true;\r\n                                scope.cc = {\r\n                                    authorsContributors: undefined\r\n                                };\r\n                                scope.isPublicationOnGoing = false;\r\n                                scope.subject = null;\r\n                                scope.selection = {\r\n                                    selectedSubjectLessonTypeId: null,\r\n                                    selectedSubjectLessonLevelId: null\r\n                                };\r\n                                scope.subjectLessonTypeList = [];\r\n                                scope.subjectLessonLevelList = [];\r\n                                scope.subjectTagList = [];\r\n                                scope.autocompleteSubjectTagList = [];\r\n                                scope.selectedSubjectTagList = [];\r\n                                scope.$emit('E_RESET_SELECTED_LIST');\r\n                            }\r\n                        };\r\n                    }\r\n                };\r\n            }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardRemoveSelectedFolderAndSubject',\r\n        injections: ['FolderService', 'SubjectService', (FolderService, SubjectService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-remove-selected-folder-and-subject.html',\r\n                link: (scope:any) => {\r\n\r\n                    scope.isDisplayed = false;\r\n\r\n                    // event to display model\r\n                    scope.$on('E_DISPLAY_DASHBOARD_MODAL_REMOVE_SELECTED_FOLDER_SUBJECT', function(event, selectedSubjectList, selectedFolderList) {\r\n                        scope.isDisplayed = true;\r\n                        scope.subjectList = selectedSubjectList;\r\n                        scope.folderList = selectedFolderList;\r\n                    });\r\n\r\n                    // confirm delete\r\n                    scope.deleteSelection = function () {\r\n                        scope.$emit('E_CONFIRM_REMOVE_SELECTED_FOLDER_SUBJECT');\r\n                        scope.isDisplayed = false;\r\n                        scope.list = null;\r\n                    };\r\n\r\n                    // hide model\r\n                    scope.hide = function () {\r\n                        scope.isDisplayed = false;\r\n                        scope.list = null;\r\n                        scope.$emit('E_RESET_SELECTED_LIST');\r\n                    };\r\n\r\n                    // get label of folder\r\n                    scope.getFolderLabelById = function(id){\r\n                        var folder = FolderService.folderById(id);\r\n                        return folder? folder.label : null;\r\n                    };\r\n\r\n                    // get title of subject\r\n                    scope.getSubjectTitleById = function(id){\r\n                        var subject = SubjectService.getById(id);\r\n                        return subject ? subject.title : null;\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardSubjectEdit',\r\n        injections: ['FolderService', 'SubjectService','$location', (FolderService, SubjectService,$location) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {},\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-subject-edit.html',\r\n                link: (scope:any) => {\r\n\r\n                    scope.isDisplayed = false;\r\n\r\n                    scope.$on('E_DISPLAY_DASHBOARD_MODAL_EDIT_SUBJECT', function(event, subject) {\r\n\r\n                        if(subject !== null){\r\n                            scope.isNewSubject = false;\r\n                            scope.subject = subject;\r\n\r\n                        } else {\r\n                            scope.isNewSubject = true;\r\n                            scope.subject = new Subject();\r\n                        }\r\n                        scope.isDisplayed = true;\r\n                    });\r\n\r\n\r\n                    scope.saveSubjectProperties = function() {\r\n\r\n                        if (!scope.subject.title || scope.subject.title.length === 0) {\r\n                            notify.error('Veuillez renseigner un titre.');\r\n                        } else {\r\n\r\n                            if (scope.isNewSubject) {\r\n                                SubjectService.persist(scope.subject).then(function(subject) {\r\n                                    SubjectService.currentSubjectId = subject.id;\r\n                                    $location.path('/subject/edit/' + subject.id);\r\n                                }, function(err) {\r\n                                    notify.error(err);\r\n                                });\r\n\r\n                            } else {\r\n                                SubjectService.update(scope.subject).then(function() {\r\n                                    SubjectService.currentSubjectId = undefined;\r\n                                    scope.closeLightbox();\r\n                                }, function(err) {\r\n                                    notify.error(err);\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    scope.closeLightbox = function() {\r\n                        scope.isDisplayed = false;\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'teacherDashboardSubjectList',\r\n        injections: ['SubjectService', 'FolderService', 'DragService', '$location','AccessService',\r\n            (SubjectService, FolderService, DragService, $location, AccessService) => {\r\n                return {\r\n                    restrict: 'E',\r\n                    scope: {\r\n                        subject: '='\r\n                    },\r\n                    templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-subject-list.html',\r\n                    link: (scope:any) => {\r\n\r\n                        /**\r\n                         * INIT\r\n                         */\r\n                        scope.displayList = 'domino';\r\n                        scope.currentFolderId = null;\r\n                        scope.autocomplete = {\r\n                            subjectList: null\r\n                        };\r\n                        scope.data = {};\r\n\r\n                        scope.$on('E_RESET_SELECT_ALL', function (event) {\r\n                          scope.data.selectAll = false;\r\n                        });\r\n\r\n\r\n                        /**\r\n                         * AUTOCOMPLETE\r\n                         */\r\n\r\n                        scope.clickOnAutoComplete = function () {\r\n                            if (scope.subjectList()) {\r\n                                scope.autocomplete.subjectList = createListAutoComplete();\r\n                            }\r\n                        };\r\n\r\n                        scope.clickOnItem = function(subjectFromAutoComplete){\r\n                            var subject = SubjectService.getById(subjectFromAutoComplete.id);\r\n                            scope.$emit('E_RESET_SELECTED_LIST', subject);\r\n                            subject.selected = true;\r\n                            scope.$emit('E_SELECT_SUBJECT', subject);\r\n                            scope.currentFolderId =  subject.folder_id || null;\r\n\r\n                        };\r\n\r\n                        function createListAutoComplete() {\r\n                            var array = [];\r\n                            angular.forEach(scope.subjectList(), function (value) {\r\n                                var folder = null,\r\n                                    folderString = \"\";\r\n                                if (value.folder_id) {\r\n                                    folder = FolderService.folderById(value.folder_id);\r\n                                    if (folder) {\r\n                                        folderString = \" (\" + folder.label + \")\";\r\n                                    }\r\n                                }\r\n                                var obj = {\r\n                                    title: value.title,\r\n                                    name: value.title + folderString,\r\n                                    id: value.id,\r\n                                    toString: function () {\r\n                                        return this.name;\r\n                                    }\r\n                                };\r\n                                array.push(obj);\r\n                            });\r\n                            return array;\r\n                        }\r\n\r\n                        /**\r\n                         * GETTER\r\n                         */\r\n\r\n                        scope.subjectList = function () {\r\n                            return SubjectService.getList();\r\n                        };\r\n\r\n                        scope.folderList = function () {\r\n                            return FolderService.getList();\r\n                        };\r\n\r\n                        scope.canManageFolder = function (fodler) {\r\n                            return true;\r\n                        };\r\n                        scope.canManageSubject = function (subject) {\r\n                            return true;\r\n                        };\r\n\r\n                        scope.getSubjectPicture = function (subject) {\r\n                            var defaultPicture = '/assets/themes/leo/img/illustrations/poll-default.png';\r\n                            return subject.picture || defaultPicture;\r\n                        };\r\n\r\n                        /**\r\n                         * EVENT\r\n                         */\r\n\r\n                        scope.clickOnFolderTitle = function (folder) {\r\n                            scope.data.selectAll = false;\r\n                            scope.setCurrentFolder(folder);\r\n                        };\r\n\r\n                        scope.canAccessSubject = function(subject){\r\n                            if(model.me.hasRight(subject, Behaviours.applicationsBehaviours.exercizer.rights.resource.manager) || model.me.hasRight(subject, 'owner')){\r\n                                return true;\r\n                            } else{\r\n                                return false;\r\n                            }\r\n                        };\r\n\r\n                        scope.setCurrentFolder = function (folder) {\r\n                            scope.$emit('E_RESET_SELECTED_LIST');\r\n                            scope.display.tab = 'mySubject';\r\n                            scope.currentFolderId = folder.id;\r\n                        };\r\n\r\n                        scope.clickOnSubjectTitle = function (subject) {\r\n                            if (subject.id) {\r\n                                if(model.me.hasRight(subject, 'owner')){\r\n                                    //console.log('owner')\r\n                                    $location.path('/subject/edit/' + subject.id);\r\n                                } else if(model.me.hasRight(subject, Behaviours.applicationsBehaviours.exercizer.rights.resource.manager)){\r\n                                    //console.log('manager');\r\n                                    $location.path('/subject/edit/' + subject.id);\r\n                                } else if(model.me.hasRight(subject, Behaviours.applicationsBehaviours.exercizer.rights.resource.contrib)){\r\n                                    //console.log('contrib');\r\n                                    $location.path('/subject/edit/' + subject.id);\r\n                                } else{\r\n                                    //console.log('read');\r\n                                    AccessService.reader = true;\r\n                                    $location.path('/subject/copy/preview/perform/' + subject.id);\r\n                                }\r\n                            }\r\n                        };\r\n                        scope.viewPreview = function (subject) {\r\n                            if (subject.id) {\r\n                                $location.path('/subject/copy/preview/perform/' + subject.id);\r\n                            }\r\n                        };\r\n\r\n                        scope.selectFolder = function (folder) {\r\n                            folder.selected = folder.selected ? true : false;\r\n                            scope.$emit('E_SELECT_FOLDER', folder);\r\n                        };\r\n                        \r\n                        scope.selectSubject = function (subject) {\r\n                            subject.selected = subject.selected ? true : false;\r\n                            scope.$emit('E_SELECT_SUBJECT', subject);\r\n\r\n                        };\r\n\r\n                        scope.clickCreateFolder = function () {\r\n                            scope.$emit('E_CREATE_FOLDER');\r\n                        };\r\n\r\n                        scope.addNewSubject = function() {\r\n                            scope.$emit('E_ADD_NEW_SUBJECT', null);\r\n                        };\r\n\r\n\r\n                        scope.goToRoot = function () {\r\n                            scope.$emit('E_RESET_SELECTED_LIST');\r\n                            scope.currentFolderId = null;\r\n                        };\r\n\r\n                        scope.selectAllFn = function(selectAll){\r\n                            angular.forEach(scope.folderList(), function(folder){\r\n                                if(scope.filterFolderByParentFolder(folder)){\r\n                                    folder.selected = selectAll ? true : false;\r\n                                    scope.$emit('E_SELECT_FOLDER', folder);\r\n                                }\r\n                            });\r\n                            angular.forEach(scope.subjectList(), function(subject){\r\n                                if(scope.filterSubjectByParentFolder(subject)){\r\n                                    subject.selected = selectAll ? true : false;\r\n                                    scope.$emit('E_SELECT_SUBJECT', subject);\r\n                                }\r\n                            });\r\n                        };\r\n\r\n                        /**\r\n                         * FILTER\r\n                         */\r\n\r\n                        scope.filterFolderByParentFolderId = function () {\r\n                            return function (folder) {\r\n                                if(scope.currentFolderId){\r\n                                    return folder.parent_folder_id == scope.currentFolderId\r\n                                } else{\r\n                                    return folder.parent_folder_id == null;\r\n                                }\r\n                            };\r\n                        };\r\n\r\n                        scope.filterFolderTab = function (currentTab) {\r\n                            return function (folder) {\r\n                                if(currentTab  === 'mySubject'){\r\n                                    return true\r\n                                } else{\r\n                                    return false;\r\n                                }\r\n\r\n                            };\r\n                        };\r\n\r\n                        scope.filterSubjectTab = function (currentTab) {\r\n                            return function (subject) {\r\n                               if(model.me.hasRight(subject, 'owner') && currentTab == 'mySubject'){\r\n                                   return true\r\n                               } else if(!model.me.hasRight(subject, 'owner') && currentTab == 'subjectShared') {\r\n                                   return true\r\n\r\n                               } else{\r\n                                   return false;\r\n                               }\r\n                            };\r\n                        };\r\n\r\n                        scope.filterSubjectByParentFolderId = function (currentTab) {\r\n                            return function (subject) {\r\n                                if(currentTab == 'subjectShared'){\r\n                                    return true;\r\n                                } else{\r\n                                    if(scope.currentFolderId){\r\n                                        return subject.folder_id == scope.currentFolderId\r\n                                    } else{\r\n                                        return subject.folder_id == null;\r\n                                    }\r\n                                }\r\n\r\n\r\n                            };\r\n                        };\r\n\r\n                        /**\r\n                         * DRAG\r\n                         */\r\n\r\n                        scope.drag = function (item, $originalEvent) {\r\n                            DragService.drag(item, $originalEvent);\r\n                        };\r\n\r\n                        scope.dragFolderCondition = function (item) {\r\n                            return DragService.canDragFolderInPage(item);\r\n                        };\r\n                        scope.dragSubjectCondition = function (item) {\r\n                            return DragService.canDragSubjectInPage(item);\r\n                        };\r\n\r\n                        scope.dropTo = function (targetItem, $originalEvent) {\r\n                            DragService.dropTo(targetItem, $originalEvent, scope);\r\n                        };\r\n\r\n                        scope.dropFolderCondition = function (targetItem) {\r\n                            return DragService.canDropOnFolderInPage(targetItem);\r\n\r\n                        };\r\n                        scope.dropSubjectCondition = function (targetItem) {\r\n                            return DragService.canDropOnSubjectInPage(targetItem);\r\n                        };\r\n\r\n                        scope.dropToRoot = function ($originalEvent) {\r\n                            DragService.dropTo(null, $originalEvent, scope);\r\n                        };\r\n\r\n                    }\r\n                };\r\n            }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'teacherDashboardToaster',\r\n        injections: ['FolderService','SubjectService', (FolderService,SubjectService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {},\r\n                controller: function($scope) {\r\n                    $scope.isDisplayed = false;\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/dashboard/teacher_dashboard/teacher_dashboard_subject_tab/templates/teacher-dashboard-toaster.html',\r\n                compile: function(element, attributes){\r\n                    return {\r\n                        pre: function(scope, element, attributes, controller, transcludeFn){\r\n                        },\r\n                        post: function(scope, element, attributes, controller, transcludeFn){\r\n                            scope.subjectList = [];\r\n                            scope.folderList = [];\r\n                            scope.lowerRight = null;\r\n\r\n                            function hide(){\r\n                                scope.isDisplayed = false;\r\n                            }\r\n                            hide();\r\n\r\n                            scope.$on('E_DISPLAY_DASHBOARD_TOASTER', function (event, subjectList, folderList) {\r\n                                var length = subjectList.length + folderList.length;\r\n                                if(length === 0){\r\n                                    hide();\r\n                                } else{\r\n                                    scope.isDisplayed = true;\r\n                                    scope.subjectList = subjectList;\r\n                                    scope.folderList = folderList;\r\n                                    checkRightFn(subjectList);\r\n                                }\r\n                            });\r\n\r\n                            function checkRightFn(subjectList){\r\n                                angular.forEach(subjectList, function(id){\r\n                                    var subject = SubjectService.getById(id);\r\n                                    if(model.me.hasRight(subject, 'owner')){\r\n                                        scope.lowerRight = 'owner';\r\n                                    }\r\n                                    else if(model.me.hasRight(subject, Behaviours.applicationsBehaviours.exercizer.rights.resource.manager)){\r\n                                        scope.lowerRight = 'manager';\r\n                                    }\r\n                                    else if(model.me.hasRight(subject, Behaviours.applicationsBehaviours.exercizer.rights.resource.contrib)){\r\n                                        scope.lowerRight = 'contrib';\r\n                                    }\r\n                                    else{\r\n                                        scope.lowerRight = 'read';\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            scope.itemList = [\r\n                                {\r\n                                    publicName : 'Propriétés',\r\n                                    actionOnClick : function(){\r\n                                        if(scope.folderList.length == 1){\r\n                                            // folder is selected\r\n                                            var folder = FolderService.folderById(scope.folderList[0]);\r\n                                            scope.$emit('E_EDIT_FOLDER', folder);\r\n\r\n                                        }\r\n                                        if(scope.subjectList.length == 1){\r\n                                            // subject is selected\r\n                                            var subject = SubjectService.getById(scope.subjectList[0]);\r\n                                            scope.$emit('E_EDIT_SUBJECT', subject);\r\n                                        }\r\n                                    },\r\n                                    display : function(){\r\n                                        if(scope.folderList.length + scope.subjectList.length == 1){\r\n                                            // only one item\r\n                                            if(scope.subjectList.length == 1){\r\n                                                // is subject\r\n                                                return scope.lowerRight == 'owner' || scope.lowerRight == 'manager';\r\n                                            } else {\r\n                                                //is folder\r\n                                                return true;\r\n                                            }\r\n                                        } else{\r\n                                            return false;\r\n                                        }\r\n                                    }\r\n                                },\r\n                                {\r\n                                    publicName : 'Partager',\r\n                                    actionOnClick : function(){\r\n                                        var subject = SubjectService.getById(scope.subjectList[0]);\r\n                                        scope.$emit('E_SHARE_SUBJECT', subject);\r\n                                    },\r\n                                    display : function(){\r\n                                        return scope.subjectList.length == 1 && scope.folderList.length == 0 && ( scope.lowerRight == 'owner' || scope.lowerRight == 'manager');\r\n                                    }\r\n                                },\r\n                                {\r\n                                    publicName : 'Programmer',\r\n                                    actionOnClick : function(){\r\n                                        var subject = SubjectService.getById(scope.subjectList[0]);\r\n                                        scope.$emit('E_SCHEDULE_SUBJECT', subject);\r\n                                    },\r\n                                    display : function(){\r\n                                        return scope.subjectList.length == 1 && scope.folderList.length == 0 && ( scope.lowerRight == 'owner' || scope.lowerRight == 'contrib' || scope.lowerRight == 'manager');\r\n                                    }\r\n                                },\r\n                                {\r\n                                    publicName : 'Publier dans la bibliothèque',\r\n                                    actionOnClick : function(){\r\n                                        var subject = SubjectService.getById(scope.subjectList[0]);\r\n                                        scope.$emit('E_PUBLISH_SUBJECT', subject);\r\n                                    },\r\n                                    display : function(){\r\n                                        return scope.subjectList.length == 1 && scope.folderList.length == 0 && ( scope.lowerRight == 'owner' || scope.lowerRight == 'manager');\r\n                                    }\r\n                                },\r\n                                {\r\n                                    publicName : 'Copier',\r\n                                    actionOnClick : function(){\r\n                                        scope.$emit(\"E_COPY_SELECTED_FOLDER_SUBJECT\");\r\n                                    },\r\n                                    display : function(){\r\n                                        return true;\r\n                                    }\r\n                                },\r\n                                {\r\n                                    publicName : 'Supprimer',\r\n                                    actionOnClick : function(){\r\n                                        scope.$emit('E_REMOVE_SELECTED_FOLDER_SUBJECT');\r\n                                        hide();\r\n                                    },\r\n                                    display : function(){\r\n                                        if(scope.subjectList.length == 0){\r\n                                            // is only folder\r\n                                            return true;\r\n                                        } else {\r\n                                            return scope.lowerRight == 'manager' || scope.lowerRight == 'owner';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ];\r\n                        }\r\n                    }\r\n                },\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'folderNavContainer',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                replace  : true,\r\n                scope: {\r\n                    folderList: \"=\",\r\n                    isRoot: \"=\",\r\n                    parentId :\"=\",\r\n                    setCurrentFolderFn : \"&\",\r\n                    currentFolderId : \"=\",\r\n                    display : \"=\"\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/folder/common/folder_nav/templates/folder-nav-container.html',\r\n                link: (scope:any, element, attrs) => {\r\n\r\n                    scope.setCurrentFolder = scope.setCurrentFolderFn();\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'folderNavItem',\r\n        injections: ['FolderService', 'DragService', '$compile', (FolderService, DragService, $compile) => {\r\n            return {\r\n                restrict: 'E',\r\n                replace: true,\r\n                scope: {\r\n                    item: \"=\",\r\n                    isRoot: \"=\",\r\n                    parentId : \"=\",\r\n                    setCurrentFolderFn : \"&\",\r\n                    currentFolderId : \"=\"\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/folder/common/folder_nav/templates/folder-nav-item.html',\r\n                link: (scope:any, element, attrs) => {\r\n\r\n                    scope.folderList = FolderService.folderList;\r\n                    scope.display = {\r\n                        children : false\r\n                    };\r\n\r\n                    scope.setCurrentFolder = scope.setCurrentFolderFn();\r\n\r\n                    scope.$watch('folderList', function () {\r\n                        // set subjectFolderList\r\n                        scope.subFolderList = FolderService.getListOfSubFolderByFolderId(scope.item.id);\r\n                        // delete directive\r\n                        var directiveDOM = element[0].getElementsByClassName('append');\r\n                        if(directiveDOM.length !=0){\r\n                            directiveDOM[0].remove();\r\n                        }\r\n                        // is folder list empty ?\r\n                        scope.countChildren = 0;\r\n                        angular.forEach(scope.subFolderList, function (value, key) {\r\n                            scope.countChildren++\r\n                        });\r\n                        if (scope.countChildren != 0) {\r\n                            // if not empty\r\n                            if(scope.isItemDisplayed()){\r\n                                // if displayed item\r\n                                element.children()\r\n                                    .after($compile(\"<folder-nav-container class=append is-root='false' parent-id = 'item.id' folder-list='subFolderList' set-current-folder-fn='setCurrentFolder' current-folder-id = 'currentFolderId' display='display'></folder-nav-container>\")(scope))\r\n                            }\r\n                        }\r\n                    }, true);\r\n\r\n                    /**\r\n                     * EVENT\r\n                     */\r\n\r\n                    scope.clickOnFolder = function (folder) {\r\n                            scope.setCurrentFolder(folder);\r\n                    };\r\n\r\n                    /**\r\n                     * DRAG\r\n                     */\r\n\r\n                    scope.drag = function (item, $originalEvent) {\r\n                        DragService.drag(item, $originalEvent);\r\n                    };\r\n\r\n                    scope.dragCondition = function (item) {\r\n                        return DragService.canDragFolderInNav(item);\r\n                    };\r\n\r\n                    scope.dropTo = function (targetItem, $originalEvent) {\r\n                        DragService.dropTo(targetItem, $originalEvent, scope);\r\n                    };\r\n\r\n                    scope.dropCondition = function (targetItem) {\r\n                        return DragService.canDropOnFolderInNav(targetItem);\r\n                    };\r\n\r\n                    /**\r\n                     * DISPLAY\r\n                     */\r\n\r\n                    scope.isItemDisplayed = function () {\r\n                        if (scope.isRoot == true) {\r\n                            //root folder\r\n                            return scope.item.parent_folder_id == null;\r\n\r\n                        } else {\r\n                            // sub folder\r\n                            return scope.item.parent_folder_id == scope.parentId;\r\n                        }\r\n                    };\r\n\r\n                    scope.isCurrentFolder = function(item){\r\n                        if(item.id == scope.currentFolderId){\r\n                            return 'selected';\r\n                        }\r\n                    }\r\n\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'grainCopyFooter',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    grainScheduled: '=',\r\n                    grainCopy: '=',\r\n                    isTeacher: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/common/grain_copy/templates/grain-copy-footer.html',\r\n                link:(scope:any) => {\r\n                    scope.isFolded = true;\r\n\r\n                    scope.hasAnswerExplanation = function() {\r\n                        return !angular.isUndefined(scope.grainScheduled.grain_data.answer_explanation) && scope.grainScheduled.grain_data.answer_explanation !== null;\r\n                    };\r\n                    \r\n                    scope.hasComment = function() {\r\n                        return !angular.isUndefined(scope.grainCopy.comment)  && scope.grainCopy.comment !== null;\r\n                    };\r\n\r\n                    scope.toggle = function() {\r\n                        scope.isFolded = !scope.isFolded;\r\n                    };\r\n\r\n                    scope.updateGrainCopy = function() {\r\n                        if (scope.isTeacher) {\r\n                            scope.grainCopy.comment = StringISOHelper.toISO(scope.grainCopy.comment);\r\n                            scope.$emit('E_UPDATE_GRAIN_COPY', scope.grainCopy);\r\n                        }\r\n                    };\r\n\r\n                    scope.formatNumber = function(score:number): any {\r\n                        return ScoreHelper.format(score)\r\n                    };\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'grainCopyGrainDocumentList',\r\n        injections: [() => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/common/grain_copy/templates/grain-copy-grain-document-list.html'\r\n            };\r\n        }]\r\n    }\r\n);","directives.push(\r\n    {\r\n        name: 'grainCopyHeader',\r\n        injections: ['GrainTypeService', (GrainTypeService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/common/grain_copy/templates/grain-copy-header.html',\r\n                link:(scope:any) => {\r\n                    scope.grainType = GrainTypeService.getById(scope.grainCopy.grain_type_id);\r\n                    scope.isAnswerHintFolded = true;\r\n                    \r\n                    scope.hasAnswerHint = function() {\r\n                        return !angular.isUndefined(scope.grainCopy.grain_copy_data.answer_hint) && scope.grainCopy.grain_copy_data.answer_hint  !== null;\r\n                    };\r\n                    \r\n                    scope.toggleGrainCopyHint = function() {\r\n                        scope.isAnswerHintFolded = !scope.isAnswerHintFolded;\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'grainCopyStatement',\r\n        injections: ['$sce', ($sce) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope : {\r\n                    grainCopy: '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/grain/common/grain_copy/templates/grain-copy-statement.html',\r\n                link:(scope:any) => {\r\n                    if (angular.isUndefined(scope.grainCopy.grain_copy_data.statement)) {\r\n                        scope.statementHtml = '';\r\n                    } else {\r\n                        scope.statementHtml = $sce.trustAsHtml(scope.grainCopy.grain_copy_data.statement);\r\n                    }\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n","directives.push(\r\n    {\r\n        name: 'subjectCopyLeftNav',\r\n        injections: ['GrainTypeService', (GrainTypeService) => {\r\n            return {\r\n                restrict: 'E',\r\n                scope: {\r\n                    'grainCopyList': '=',\r\n                    'anchorBehaviour': '='\r\n                },\r\n                templateUrl: 'exercizer/public/app/components/subject/common/subject_copy/templates/subject-copy-left-nav.html',\r\n                link:(scope:any) => {\r\n                    scope.currentGrainCopy = undefined;\r\n\r\n                    scope.getGrainCopyName = function (grainCopy:IGrainCopy) {\r\n                        if (grainCopy.grain_copy_data && grainCopy.grain_copy_data.title) {\r\n                            return grainCopy.grain_copy_data.title;\r\n                        } else {\r\n                            var grainType = GrainTypeService.getById(grainCopy.grain_type_id);\r\n                            return grainType.public_name;\r\n                        }\r\n                    };\r\n\r\n                    scope.navigateTo = function(grainCopy:IGrainCopy = undefined) {\r\n                        scope.$emit('E_CURRENT_GRAIN_COPY_CHANGED', grainCopy);\r\n                    };\r\n\r\n                    scope.$on('E_CURRENT_GRAIN_COPY_CHANGE' , function(event, grainCopy:IGrainCopy) {\r\n                        scope.currentGrainCopy = grainCopy;\r\n\r\n                        if (scope.anchorBehaviour) {\r\n                            jQuery('html, body').animate({ scrollTop: jQuery(angular.isUndefined(grainCopy) ? '#summary' : '#' + grainCopy.id).offset().top - 100}, 500);}\r\n                    });\r\n                }\r\n            };\r\n        }]\r\n    }\r\n);\r\n\r\n"],"sourceRoot":"/source/"}